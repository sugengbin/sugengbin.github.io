%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: mast.dvi
%%Pages: 24
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -omast.ps mast.dvi
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1996.02.14:1715
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (mast.dvi)
@start /Fa 56 122 df<1238127CA2127E123A1204A31208A21210122012401280070E
789F0D>39 D<1218123C127CA2123C1204A21208A21210A2122012401280060E7D840D>
44 D<EAFFF0A20C027E8A0F>I<1230127812F81278127005057C840D>I<137EEA01C338
030180000713C0EA0E0014E05AA2EA3C0112381278A538F003C0A51480130712E01400A2
130E1260EA701CEA3038EA3870EA0FC0131F7C9D17>48 D<13181338EA01F8EA0E701200
A513E0A6EA01C0A6EA0380A6EA07001380EAFFFC0E1E7B9D17>I<EB3F80EBC1E0380100
70000213785AA2000F137C1380A2EB00781206C712F814F0EB01E014C0EB0380EB070013
0E5B5B13605B485A380300201206000813405A383FFFC0481380B5FC161E7E9D17>I<13
7F380183C0380201E0EA0400000713F05A1301A2000013E0A2EB03C0EB07801400131CEA
01F8EA000E7F148014C0130313071230127812F8A200F0138038800F00EA400E6C5AEA10
78EA0FE0141F7D9D17>I<1460A214E0EB01C013031305130D13091311EB2380134313C3
1383EA010312023804070012081218121012201240B512F038000E00A55B131E3801FFC0
141E7E9D17>I<380180303803FFE014C0140013FC0002C7FCA25AA4137CEA0587380A03
80EA0C01000813C0120014E0A4387003C012F812F000E01380EA800700401300130E6C5A
EA1070EA0FC0141F7D9D17>I<EB1F80EB7040EBC020380180E0EA03011207380E00C000
1E1300121C123C1238EA78F8EA790EEA7A07EA7C0300F81380A200F013C0A4EB078012E0
A214005BEA600EEA701CEA3018EA1870EA07C0131F7C9D17>I<1220383FFFF04813E014
C03840008038C0010012801302485A5B5B5BA25B13C0485AA2120390C7FC5AA25A120EA2
121EA35AA31218141F7A9D17>I<133FEBC1C03801006000021320481330120CA3000E13
60A2380F80C0EBC1803807F600EA03FC120113FF38063F80EA0C1F381007C0EA3003EA60
0113005AA31480EB0100EA6003EA3004EA1818EA07E0141F7D9D17>I<137EEA01C33803
0180000613C0120EEA1C00003C13E0A213011278A41303A2003813C01307EA1C0BEA0C13
3803E380EA0007A214005BEA600EEAF01C1318485AEA8060EA41C0003FC7FC131F7C9D17
>I<1408140C141C143CA2147C147E149EA2EB011EA21302801304A21308A20110138014
071320A2EB7FFF90384007C0EB8003A2EA0100A21202EC01E01206001F130339FF801FFE
1F207F9F22>65 D<0007B5FC3900F803C090387801E0EC00F04913F8A515F03801E001EC
03E015C0EC0F809038FFFE009038E00F803903C003C0EC01E015F0A21400A2485A1401A2
15E01403EC07C0390F000F80EC3E00B512F01D1F7E9E20>I<ECFE02903807018690381C
004E0170133E49131E4848131C4848130C120748C7FC5A121E003E1408003C1400127CA4
5AA4127815101520A27E1540001C14806CEB01006C13023803800C3800E030EB3FC01F21
7C9F21>I<0007B57E3900F801E0903878007081497F151E150E150FA348481480A64848
14005DA3151E153E4848133C5DA25D4A5A4A5A260F000FC7FC143CB512F0211F7E9E23>
I<0007B512FC3900F8007C0178131C150C5B1504A414043901E00800A31438EBFFF8EBE0
383803C010A4EC00081510485AA21520A2156015C0380F00011407B612801E1F7E9E1F>
I<0007B512F83900F800780178133815185B1508A53901E00800A314181438EBFFF83803
C0301410A491C7FC485AA648C8FC7FEAFFFC1D1F7E9E1E>I<ECFE02903807018690381C
004E0170133E49131E4848131C4848130C120748C7FC5A121E003E1408003C1400127CA4
5AA2EC3FFEEC01F000781300A2EC01E0A27EA2121C6C13036CEB05C0380380083900E030
4090383FC0001F217C9F24>I<3807FF803800F8001378A25BA6485AA6485AA6485AA648
C7FC7FEAFFF0111F7E9E10>73 D<EB7FFCEB03E01301A2EB03C0A6EB0780A6EB0F00A613
1E1230127812F8131CEAF03CEA8038EA40706C5AEA1F8016207E9E17>I<3807FFE0D800
FCC7FC1378A25BA6485AA6485AA41580EC0100EA0780A25C14021406140E380F001E147C
B512FC191F7E9E1C>76 D<D807F8EC7FE00000ED7C00017814BCA2019C495AA21502A201
8E13041508D8010E5C1510A26D1320A215400002EC41E09038038081EC8101A21482A23A
0401C403C0A214C8A2EB00F0000C13E04B5A001E01C07FD8FFC0EB7FFC2B1F7E9E2A>I<
D807F8EB7FC0D8007CEB1F00150C015E1304019E5B138FA2EB8780A2EB83C0D801035BEB
01E0A2EB00F0A2147800025C143CA2141EA2140F485CEC07C0A21403A21401000C5C001E
1300B47E221F7E9E22>I<EB01FCEB0E0790383801C090387000E0484813F04848137848
5A153C48C7FC5A001E143E123E123C127CA448147CA3157815F81278EC01F0007C14E014
03003C14C0001CEB0780001EEB0F006C131E380780383801C0E038007F801F217C9F23>
I<0007B5FC3900F803C090387800F015785B157CA41578484813F815F0EC01E0EC03C0EC
0F00EBFFFCD803C0C7FCA6485AA648C8FC7FEAFFF81E1F7E9E1F>I<3807FFFE3900F807
8090387801E0EC00F05B15F8A415F03801E00115E0EC03C0EC0780EC1E00EBFFF03803C0
3880141E140EA2140F48485AA51502D80F001304EB800F39FFF00788C7EA01F01F207E9E
21>82 D<EB1F82EB7066EBC01E3801800EEA030048130C00061304120EA3000F1300A27F
EA07F013FF6C13C06C13E038003FF0EB03F813001478143CA200401338A3143000601370
146000F013C038E8018038C60300EA81FC17217E9F19>I<003FB512F0383C0780003014
30126039400F0010A212C01280A3D8001E1300A65BA65BA65B7F383FFFE01C1F7A9E21>
I<39FFF00FF8391F0003E06CEB01801400001EEB0100A6481302A6485BA600705BA25CA2
00785B1238001813C06C48C7FCEA0706EA01F81D20799E22>I<3BFFF07FF81FF03B1F00
0FC007C0001E903907800380001FED01006C1502140F5EEC17C002135B142301805C0007
13435E14C3913883E0401481D981015B13C1D803C213E193C7FC13C415F2EBC80015F4EA
01F015F85B5D5B15605B000014402C207A9E2F>87 D<EA07F8EA0C0CEA1E061307121C12
00A313FFEA07C7EA1E07EA3C0E127800F01310A3131EEB2E2038784F40381F878014147D
9317>97 D<1207123F120F7EA2120EA65A137CEA1D83381E0180001C13C0EB00E05A14F0
A5387001E0A214C013031480EB0700EAE80EEACC38EA83E014207B9F19>I<13FEEA0383
380E0780121C0038130090C7FC12785AA45AA37E5BEA70026C5AEA1C18EA07E011147D93
14>I<1438EB01F8EB00781438A21470A614E013FCEA0382EA0601121CEA3C00383801C0
127812F0A438E00380A412F0EA700738380F00381C37803807C7E015207D9F19>I<13F8
EA070EEA0E07121C383803801278127012F0A2B5FC00F0C7FC5AA46C5AEA7002EA3004EA
1C18EA07E011147D9314>I<EB07C0EB1C60EB30F01360EBE0E0EBC0001201A5485AEA3F
FCEA0380A448C7FCA6120EA65A121EEAFFC014207F9F0E>I<140EEB3E11EBE1A33801C1
C2380381E0EA07801301120FA3380703C01480EB8700EA04FC48C7FCA21218121CEA0FFF
14C014E0381800F04813305A5AA3006013606C13C0381C0700EA07FC181F809417>I<13
E0120712011200A2485AA6485AEB8F80EB90E013A0EBC0601380000713E01300A5380E01
C0A6381C0380001E13C038FF8FF014207E9F19>I<EA01C0EA03E0A213C0EA0180C7FCA6
EA0380121F12071203A2EA0700A6120EA65A121EEAFF800B1F7F9E0C>I<13E012071201
1200A2485AA6485AEB81FCEB80F014C0EB81801400EA07045B13181338137C131C120E7F
A2130F7F1480EA1C03381E07C038FF8FF016207E9F18>107 D<13E0120712011200A2EA
01C0A6EA0380A6EA0700A6120EA65A121EEAFF800B207F9F0C>I<390387C07C391F9861
863907A072073903C03403EB80380007EB7807EB0070A5000EEBE00EA64848485A001EEB
E01E3AFFCFFCFFC022147E9326>I<38038F80381F90E0EA07A03803C0601380000713E0
1300A5380E01C0A6381C0380001E13C038FF8FF014147E9319>I<13FCEA0387380E0180
381C00C04813E0A24813F012F0A438E001E0A214C0130300F0138038700700EA380E6C5A
EA07E014147D9317>I<EBE3E03807EC383800F01C497E140F48487E1580A53903800F00
A2140E141E141C5C38074070EB61C0011FC7FC90C8FCA3120EA4121EEAFFC0191D809319
>I<EBFC2038038260EA0702381E01E0123C003813C0127812F0A438E00380A212F0A213
07127038380F00EA1C37EA07C7EA0007A3130EA4131EEBFFC0131D7D9318>I<EA038E38
1FB380EA07C71203EB8300EA078090C7FCA5120EA65A121EEAFFC011147E9312>I<EA01
F9EA0607EA080312181301EA3802EA3C00121F13F0EA07FCEA01FEEA001FEA40071303A2
12601306EAF004EAC818EA87E010147F9312>I<1380EA0100A35A5A5A121EEAFFF8EA0E
00A45AA65A1310A41320A2EA1840EA0F800D1C7C9B12>I<381C0380EAFC1FEA3C07EA1C
03A238380700A6EA700EA4131EA25BEA305E381F9F8011147B9319>I<38FF83F8381E00
E0001C13C01480121E380E01005B13025B12075BA25BEA039013A013E05B5B120190C7FC
15147C9318>I<39FF9FE1FC393C078070391C030060148015401580EA0E0790380D8100
1309EB19C21311380F21C4EA0720EB40C814E8EB80F0A26C485A1460000213401E147C93
21>I<390FF83F803901E00E00EBC00C140813E000005B143014205C13705CA20171C7FC
1339133A133E133C133813181310A25BA25BEA70C0EAF08000F1C8FC12E61278191D8093
18>121 D E /Fb 1 50 df<1218127812981218AC12FF08107D8F0F>49
D E /Fc 18 118 df<137013F0EA01E0EA03C0EA0780EA0F00121E121C5AA25AA45AA812
70A47EA27E121E7EEA0780EA03C0EA01F0120013700C24799F18>40
D<126012F012787E7E7EEA07801203EA01C0A2EA00E0A41370A813E0A4EA01C0A2EA0380
1207EA0F00121E5A5A5A12600C247C9F18>I<121C123E127E127F123F121F1207120E12
1E127C12F81260080C788518>44 D<EA0FF0EA1FFC487EEA3C0FEA180738000380A213FF
1207121FEA7F03127812E0A3EAF007EA780F383FFFF8EA1FFDEA07F015147E9318>97
D<EA01FEEA07FF001F1380EA3E073838030048C7FCA25AA61270EB01C01238EA3E03381F
FF8000071300EA01FC12147D9318>99 D<EB1F80133F131F1303A5EA03E3EA0FFBEA1FFF
EA3C1FEA380FEA7007130312E0A6EA7007A2EA380FEA3C1F381FFFF0380FFBF83803E3F0
151C7E9B18>I<EA01F0EA07FCEA1FFEEA3E0F38380780EA7003A238E001C0A2B5FCA300
E0C7FC1270EB01C01238EA3E07381FFF8000071300EA01F812147D9318>I<EB1F80EB7F
C0EBFFE013E13801C0C01400A3387FFFC0B5FCA23801C000AEEA7FFFA3131C7F9B18>I<
3801E1F03807FFF85A381E1E30381C0E00487EA5EA1C0EEA1E1EEA1FFC5BEA39E00038C7
FC7EEA1FFEEBFFC04813E0387801F038700070481338A4007813F0EA7E03381FFFC06C13
803801FC00151F7F9318>I<EA0380EA07C0A3EA0380C7FCA4EA7FC012FF127F1201AEB5
FCA3101D7C9C18>105 D<EAFFC0A31201B3A4B51280A3111C7D9B18>108
D<38F9C1C038FFF7F013FF383E3E38EA3C3CA2EA3838AB38FE3E3EEB7E7EEB3E3E171480
9318>I<EA7E3E38FEFF80007F13C0EA0FC1EB80E01300120EAB387FC7FC38FFE7FE387F
C7FC1714809318>I<EA01F0EA0FFE487E383E0F80EA3803387001C0A238E000E0A5EAF0
01007013C0EA7803383C0780EA3E0F381FFF006C5AEA01F013147E9318>I<38FF0FC0EB
3FE0EB7FF0EA07F0EBE060EBC0005BA290C7FCA9EAFFFC7F5B14147E9318>114
D<EA07F7EA3FFF5AEA780FEAE007A3007CC7FCEA7FE0EA1FFCEA03FEEA001F38600780EA
E003A212F038F80F00B5FC13FCEAE7F011147D9318>I<487E1203A4387FFFC0B5FCA238
038000A9144014E0A33801C1C013FF6C1380EB3E0013197F9818>I<387E07E0EAFE0FEA
7E07EA0E00AC1301EA0F033807FFFC6C13FE3801FCFC1714809318>I
E /Fd 3 52 df<1206120E12FE120EB1EAFFE00B157D9412>49 D<EA0F80EA30E0EA4070
EA8030EAC03812E0124012001370A2136013C0EA0180EA03001206EA0C081208EA1018EA
3FF0127F12FF0D157E9412>I<EA0FE0EA3030EA6018EA701CA21200131813381360EA07
E0EA00301318130C130EA212E0A2EAC00CEA4018EA3030EA0FE00F157F9412>I
E /Fe 38 122 df<EAFFF0A40C047F8B11>45 D<1238127C12FEA3127C123807077C860F
>I<137013F0120712FF12F91201B3A4387FFFC0A2121D7D9C1A>49
D<EA03FC381FFF8038381FC0387C07E038FE03F0A214F81301127C1238EA000314F0A2EB
07E0EB0FC01400131E5B13705B3801C018EA0380EA0600481338381FFFF05A5AB5FCA215
1D7E9C1A>I<EA03FC380FFF80381C0FC0383C07E0387E03F0A31307003C13E01200EB0F
C0EB3F803803FE005B38000F80EB07C0EB03E014F014F81238127C12FEA214F012FC3878
07E0383C0FC0381FFF803803FC00151D7E9C1A>I<EB01C013031307A2130F131F133B13
73136313C3EA01831203EA0703120E120C12181238127012E0B512FEA2380007C0A6EBFF
FEA2171D7F9C1A>I<001C13E0EA1FFF14C01480140013FC13C00018C7FCA4EA19FE381F
FF80381E07C0381803E0381001F0120014F8A2127812FCA314F0EA7803007013E0383C0F
C0380FFF00EA03FC151D7E9C1A>I<133F3801FFC03807C0E0EA0F81381F03F0121E123E
127CEB01E090C7FCEAFC1013FF00FD13C0EB03E038FE01F0A200FC13F8A4127CA3003C13
F0123E381E03E0380F07C03807FF803801FE00151D7E9C1A>I<1238127C12FEA3127C12
381200A61238127C12FEA3127C123807147C930F>58 D<14E0A2497EA3497EA2EB06FCA2
EB0EFEEB0C7EA2497EA201307F141F01707FEB600FA2496C7E90B5FC4880EB8003000380
EB0001A200066D7EA2000E803AFFE00FFFE0A2231F7E9E28>65 D<B512FEECFFC03907C0
07E0EC03F0EC01F815FCA515F8140315F0EC0FE090B5128015C09038C003F0EC01F815FC
140015FEA515FC1401EC03F8EC07F0B612E015001F1F7E9E25>I<B612E0A23807E00714
011400156015701530A21430A21500147014F013FFA213E014701430150CA214001518A3
1538157815F8EC03F0B6FCA21E1F7E9E22>69 D<B5380FFFF0A23A07E0007E00AC90B512
FEA29038E0007EADB5380FFFF0A2241F7E9E29>72 D<B57EA2D807E0C7FCB115C0A31401
A3EC0380A2140F141FB6FCA21A1F7E9E1F>76 D<3803FC08380FFF38381E03F8EA380048
1378143812F01418A26C13007EEA7FC013FE383FFF806C13C06C13E06C13F0C613F81307
EB00FC147C143C12C0A36C1338147800F8137038FE01E038EFFFC000811300161F7D9E1D
>83 D<007FB512FCA2397C07E07C0070141C0060140CA200E0140E00C01406A400001400
B10003B512C0A21F1E7E9D24>I<B53801FFE0A23A07E0000C00B3A400035C6C7E5D6C6C
5B90387E03C090381FFF80D903FCC7FC231F7E9E28>I<3CFFFC0FFFC0FFE0A23C0FC000
FC000E007F00076E130CA26D151C0003D901BF1318A2D801F85D9138031F80A22600FC07
6D5AEC060F01FE15E0903A7E0C07E0C0A2013FECE18091381803F1A2D91FB801FBC7FCEC
B00102F013FF6D486C5AA201075C4A137CA2010314784A133801011430331F7F9E36>87
D<EA07FC381FFF80383F07C0EB03E0EB01F0A2120C1200133FEA07FDEA1F81EA3E01127C
12F8A3EAFC02EA7E0C383FF87E380FE03E17147F9319>97 D<B4FCA2121FAAEB1FC0EB7F
F0EBE0F8EB807CEB007E143EA2143FA6143EA2147C1380381EC1F8381C7FE038181F8018
207E9F1D>I<EA01FE3807FF80381F0FC0123EA2127CEB030000FCC7FCA6127C127E003E
1360003F13C0EA1F813807FF00EA01FC13147E9317>I<EB07F8A21300AAEA01F8EA07FE
EA1F83EA3E01EA7E00127CA212FCA6127CA2127EEA3E01EA1F07380FFEFFEA03F818207E
9F1D>I<EA01FE3807FF80380F83C0381E01E0383E00F05A14F812FCB5FCA200FCC7FCA3
127CA26C1318121E380F80703807FFE0C6138015147F9318>I<3803FC3C380FFFFE381E
079E383C03DE007C13E0A5003C13C0381E0780381FFF00EA13FC0030C7FCA21238383FFF
806C13F06C13F84813FC3878007C0070133E00F0131EA30078133CA2383F01F8380FFFE0
00011300171E7F931A>103 D<B4FCA2121FAAEB0FC0EB3FE0EB61F0EBC0F813801300AD
38FFE7FFA218207D9F1D>I<121C123E127FA3123E121CC7FCA6B4FCA2121FB0EAFFE0A2
0B217EA00E>I<B4FCA2121FAAEB01FEA2EB00F014C0EB0380EB0700130C5B137C13FC13
9E130F001E1380EB07C01303EB01E014F0EB00F838FFC3FFA218207E9F1C>107
D<B4FCA2121FB3AAEAFFE0A20B207E9F0E>I<3AFE0FE03F8090391FF07FC03A1E70F9C3
E09039407D01F0EB807E121FEB007CAC3AFFE3FF8FFEA227147D932C>I<38FE0FC0EB3F
E0381E61F0EBC0F81380EA1F00AD38FFE7FFA218147D931D>I<48B4FC000713C0381F83
F0383E00F8A248137CA200FC137EA6007C137CA26C13F8A2381F83F03807FFC000011300
17147F931A>I<EAFE3EEB7F80381ECFC0138FA2121FEB030090C7FCABEAFFF0A212147E
9316>114 D<EA0FE6EA3FFEEA701EEA600EEAE006A2EAF800EAFFC0EA7FF8EA3FFCEA1F
FE1203EA001FEAC007A212E0EAF006EAF81EEAFFFCEAC7F010147E9315>I<1203A45AA2
5AA2123FEAFFFCA2EA1F00AA1306A5EA0F8CEA07F8EA03F00F1D7F9C14>I<38FF07F8A2
EA1F00AD1301A2EA0F063807FCFF6C5A18147D931D>I<3AFFC7FE1FE0A23A1F00F00300
14F8D80F801306A29038C1BC0E0007140CEBC3BE3903E31E18A29038F60F380001143001
FE13B03900FC07E0A2EBF80301785BA2903830018023147F9326>119
D<38FFC0FFA2380F80703807C0606D5A3803E180EA01F36CB4C7FC137E133E133F497E13
6FEBC7C0380183E0380381F048C67E000E7F39FF81FF80A219147F931C>I<39FFE07F80
A2391F001C00380F8018A26C6C5AA26C6C5AA2EBF0E000015B13F900005B13FF6DC7FCA2
133EA2131CA21318A2EA783012FC5BEAC0E0EAE1C0EA7F80001EC8FC191D7F931C>I
E /Ff 52 123 df<15E03801F078000313F83907118800380E0380A639FFE3F8E0A2380E
0380AF1B1B809A1F>14 D<EAE1C0A31260EA4080A312C10A087F9913>34
D<EA0180EA03001206120E120C121C1218123812301270A3126012E0AC12601270A31230
12381218121C120C120E12067EEA018009267D9B0F>40 D<12C012607E12381218121C12
0C120E12061207A37E1380AC13005AA31206120E120C121C1218123812305A5A09267E9B
0F>I<12E0A312601240A312C003087C820B>44 D<12E0A303037C820B>46
D<1304130C1318A31330A31360A313C0A3EA0180A3EA0300A31206A35AA35AA35AA35AA3
5AA20E257E9B13>I<5A1207B4FCA21207B2EA7FF0A20C187D9713>49
D<EA0FC0EA1FF0EA3878EA601CEAE01E1240130E1200131EA2131C133C1338137013E0EA
01C0EA0380EA070012065A5A5AEA7FFEA20F187F9713>I<1378A213B8A21201EA0338A2
12071206120E121C121812381230127012E0B5FCA2EA0038A610187F9713>52
D<EA3FFCA2EA3800A7EA3BC0EA3FF0EA3C38EA383CEA001C131EA41240EAC03C1260EA78
78EA1FF0EA0FC00F187F9713>I<EA01F8EA07FCEA0F04EA1C005A12301270A25AEAE7F0
EAEFFCEAF81CEAF00E130712E0A312601270130E1238EA1C3CEA0FF8EA07E010187F9713
>I<B5FCA2EA0007130E131C13381378137013F013E0120113C01203A2EA0780A4EA0F00
A610187F9713>I<12E0A31200AB12E0A303117C900B>58 D<1338137CA2135C13CEA2EA
01CF138F1387000313801307380703C0A21206380E01E0A2EA0FFF4813F0EA1C004813F8
1478A248137C143C126000E0131E171A7F991A>65 D<137F3801FFE03807C0F0380F0070
001E1330481300A25AA25AA5EB07F8A2EB00381278A27EA27E7E3807C0F83801FFE03800
7F80151A7E991A>71 D<00F013F0ABB5FCA2EAF000AD141A7D991B>I<12F0B3A8041A7D
990B>I<12F0B3A6EAFFFEA20F1A7D9915>76 D<00FCEB07E0A300EE130DA200EF131D00
E71319A2EB803900E31331A2EBC071A238E1E0E1A200E013C1A213F1EB7181A2137BEB3B
01A2131EA31B1A7D9922>I<00FC1370A27EA212EFA2EAE780A2EAE3C0A2EAE1E0A2EAE0
F0A21378A2133CA2131EA2130FA2EB07F0A21303A2141A7D991B>I<13FE3803FF803807
83C0380F01E0381E00F0481378003813380078133CA248131EA80078133CA238383C3838
3C1C78381E1EF0380F0FE0380787C03803FF80C613C0EB03E01301EB00F014F8147C171F
7E991C>81 D<EA07F0EA1FFCEA381EEA700EEA6006EAE000A37E7E127FEA3FE0EA1FF8EA
07FCEA00FE131E130F1307A312C0130E12E0EA783CEA3FF8EA07E0101A7E9915>83
D<B512FEA238003C00B3A6171A7F991A>I<00F013E0B3A2387801C0A2383C0380381E0F
00EA0FFEEA03F8131A7D991A>I<3AF003F00380A300F813703A7807780700A21306393C
0E3806EC3C0EA2EB0C1CD81E1C130CEC1E1C1318000EEB0E18120F9038380F3813300007
EB0730A213200003EB032013A001E013E013C000016D5A211A7F9924>87
D<12FFA212E0B3AF12FFA208257E9B0B>91 D<12FFA21207B3AF12FFA20825809B0B>93
D<EA0FC0EA3FF0EA7878EA6038EA401C1200A213FC120FEA3F1C127812E0A3EA707CEA7F
FCEA1F9C0E117F9012>97 D<12E0A9EAE7C0EAFFF0EAF878EAF038EAE01C130C130EA513
1CA2EAF0381370EAFFE0EAE7C00F1A7D9914>I<EA07E0EA0FF8EA1C1CEA380CEA700012
6012E0A512601270EA3804EA1C1CEA0FFCEA07F00E117F9011>I<130EA9EA07CEEA0FFE
EA1C1EEA380E1270A212E0A51270A2EA381EEA3C3EEA1FEEEA07CE0F1A7F9914>I<EA07
C0EA1FF0EA3C70EA7018A2EAE00CA2EAFFFCA2EAE000A2126012707EEA3C0CEA1FFCEA07
F00E117F9011>I<EA03F01207EA0E10EA1C00A6EAFFC0A2EA1C00AF0C1A80990C>I<3807
8780EA1FFF38387C001370487EA46C5AA2EA3FE0EA77800070C7FCA2EA3FF013FC7FEA70
0F487EA3EA700EEA781EEA1FF8EA07E011197F9013>I<12E0A9EAE3C0EAEFF0EAF870EA
F038A212E0AC0D1A7D9914>I<12F0A41200A61270B1041B7E9A0A>I<12E0B3A8031A7D99
0A>108 D<38E3C0F038EFF3FC38F8761C38F03C0EA2EAE038AC17117D901E>I<EAE3C0EA
EFF0EAF870EAF038A212E0AC0D117D9014>I<EA07E0EA1FF8EA3C3CEA381CEA700EEA60
06EAE007A5EAF00FEA700EEA781EEA3C3CEA1FF8EA07E010117F9013>I<EAE7C0EAFFF0
EAF878EAF038EAE01CA2130EA5131CA2EAF0381370EAFFE0EAE7C0EAE000A70F187D9014
>I<EA03CEEA0FFEEA1C3EEA381EEA700EA212E0A51270A2EA381EEA3C3EEA1FFEEA07CE
EA000EA70F187F9014>I<EAE1C012E712EFEAFE0012F85AA25AAA0A117E900D>I<EA1F80
EA3FE0EA7060EAE000A312F8EA7F80EA3FC0EA07E0EA00F01370128012C0EAF0E0EA7FC0
EA1F800C117F900F>I<1238A4EAFFC0A2EA3800AC1360EA1FE0EA0F800B157F940E>I<EA
E038AD137813F8127FEA3F380D117D9014>I<EAE00EA212F0EA701CA2EA38181338A2EA
1C301370A2EA0E6013E0A2EA07C0A2EA03800F117F9012>I<38E0780E137CA2136C3870
CC1C13CEA23838C618383986381387138338190330A2001D1370380F01E0120EA217117F
901A>I<EA7007EA780EEA381CEA1C3CEA0E386C5A6C5A5B1201487EEA0770EA0E30EA0C
38EA1C1C487E487E00F013801111809012>I<EAE00EA21270131C1278EA3838A2121C13
70120CEA0E60A2EA06E013C012031380A31300A21206128E12FC5A0F187F9012>I<EAFF
F8A2EA007013F013E0EA01C0EA0380A2EA0700120EA25A5A12781270EAFFFCA20E117F90
11>I E /Fg 9 117 df<EA07E1EA181BEA2007EA600312C07FA36CC7FC1270127EEA3FE0
EA1FFCEA03FEEA003F1307EB0380A2EA8001A300C013005BEAE002EADC0CEA83F0111A7D
9917>83 D<007FB5FC38701C0700401301A200C0148000801300A300001400B13803FFE0
191A7E991D>I<B5FCEA1C037F14801300A2EB1000A21330EA1FF0EA1C30131014401300
A21480A21303B5FC12137F9215>101 D<EAFF80EA1C00B1EAFF8009137F920B>105
D<00FEEB3F80001EEB3C00A20017135CA23813809CA33811C11CA2EA10E2A31374A21338
A2123839FE10FF8019137F921C>109 D<EA03F8EA0E0E487E38380380387001C0A2EA60
0000E013E0A6387001C0A238380380381C0700EA0E0EEA03F813137E9218>111
D<EAFFF8EA1C0E7FEB0380A4EB0700130EEA1FF8001CC7FCA8B47E11137F9215>I<EAFF
F8EA1C0E7FEB0380A4EB0700130EEA1FF8EA1C0E7FA51408EB038838FF81F01513809216
>114 D<B512E038C0E06000801320A400001300ACEA0FFE13137F9216>116
D E /Fh 44 125 df<1238127C12FE12FFA2127F123B1203A31206A2120C121C12181270
122008117C8610>44 D<1238127C12FEA3127C123807077C8610>46
D<14181438A21470A214E0A3EB01C0A2EB0380A3EB0700A3130EA25BA35BA25BA35BA248
5AA3485AA248C7FCA3120EA35AA25AA35AA25AA25A15317DA41C>I<13181378EA01F812
FFA21201B3A7387FFFE0A213207C9F1C>49 D<EA03FCEA0FFF383C1FC0387007E0007C13
F0EAFE0314F8A21301127CEA3803120014F0A2EB07E014C0EB0F80EB1F00133E13385BEB
E018EA01C0EA0380EA0700000E1338380FFFF05A5A5AB5FCA215207D9F1C>I<13FE3807
FFC0380F07E0381E03F0123FEB81F8A3EA1F0314F0120014E0EB07C0EB1F803801FE007F
380007C0EB01F014F8EB00FCA2003C13FE127EB4FCA314FCEA7E01007813F8381E07F038
0FFFC03801FE0017207E9F1C>I<14E013011303A21307130F131FA21337137713E7EA01
C71387EA03071207120E120C12181238127012E0B6FCA2380007E0A790B5FCA218207E9F
1C>I<EB1F80EBFFE03803E0703807C0F0380F01F8121F123EA2387E00F0007C1300A2EA
FC08EB7FC0EBFFE038FD80F038FF00F848137CA248137EA4127CA3003C137C123E001E13
F86C13F0380783E03803FFC0C6130017207E9F1C>54 D<12601278387FFFFEA214FC14F8
A214F038E0006014C038C00180EB0300A2EA00065B131C131813381378A25BA31201A312
03A76C5A17227DA11C>I<1238127C12FEA3127C12381200A81238127C12FEA3127C1238
07167C9510>58 D<1470A214F8A3497EA2497EA3EB067FA2010C7F143FA2496C7EA20130
7F140F01707FEB6007A201C07F90B5FC4880EB8001A2D803007F14004880000680A23AFF
E007FFF8A225227EA12A>65 D<D903FE138090381FFF819038FF01E33901F8003FD803E0
131F4848130F48481307121F48C71203A2481401127EA200FE91C7FCA8127EED0180127F
7E15036C6C1400120F6C6C1306D803F05B6C6C13386CB413F090381FFFC0D903FEC7FC21
227DA128>67 D<B67E15F03907F003FCEC007E81ED1F80ED0FC0ED07E0A216F01503A316
F8A916F0A3ED07E0A2ED0FC0ED1F80ED3F00157EEC03FCB612F0158025227EA12B>I<B6
12FCA23807F000153C151C150C150EA21506140CA31500141C143CEBFFFCA2EBF03C141C
140CA21503A214001506A3150EA2151E153EEC01FCB6FCA220227EA125>I<B53883FFFE
A23A07F0001FC0AD90B6FCA29038F0001FAFB53883FFFEA227227EA12C>72
D<B51280A23807F000B3ACB51280A211227EA115>I<B512C0A2D807F0C7FCB31518A415
38A21570A215F014011407B6FCA21D227EA122>76 D<EB07FC90383FFF809038FC07E039
03F001F848486C7E4848137E48487FA248C7EA1F80A24815C0007E140FA200FE15E0A900
7E15C0007F141FA26C15806D133F001F15006C6C137E6C6C5B6C6C485A3900FC07E09038
3FFF80D907FCC7FC23227DA12A>79 D<B6FC15E03907F007F0EC01FC1400157EA2157FA5
157EA215FC1401EC07F090B512E0150001F0C7FCADB57EA220227EA126>I<EB07FC9038
3FFF809038FC07E03903F001F848486C7E4848137E48487FA248C7EA1F80A24815C0007E
140FA200FE15E0A9007E15C0007F141FA26C1580903881F03F261F83F81300390FC70C7E
3907E606FC3903F607F8D800FF13E090383FFF8001071420EB0003EC01C0EDE0E015FF16
C080A2ED7F801600151E232C7DA12A>I<3801FE023807FF86381F01FE383C007E007C13
1E0078130EA200F81306A27E1400B4FC13E06CB4FC14C06C13F06C13F86C13FC000313FE
EA003F1303EB007F143FA200C0131FA36C131EA26C133C12FCB413F838C7FFE000801380
18227DA11F>83 D<007FB61280A2397E03F80F00781407007014030060140100E015C0A2
00C01400A400001500B3A248B512F0A222227EA127>I<EA0FFC383FFF80387E07C0EB03
E0130114F0123C1200A2133FEA03FDEA1FC1EA3F01127E12FCA4EA7E02EB0CF8381FF87F
3807E03F18167E951B>97 D<EBFF80000713E0380F83F0EA1F03123E127E387C01E090C7
FC12FCA6127C127EA2003E13186C1330380FC0603807FFC0C6130015167E9519>99
D<EB01FEA2EB003EABEA01FC3807FFBE380F81FE381F007E003E133E127E127C12FCA812
7CA26C137E6C13FE380F83BE3907FF3FC0EA01FC1A237EA21F>I<13FE3807FF80380F87
C0381E01E0003E13F0EA7C0014F812FCA2B5FCA200FCC7FCA3127CA2127E003E13186C13
30380FC0703803FFC0C6130015167E951A>I<EB1FC0EB7FE0EBF1F0EA01E31203EA07C3
EBC1E0EBC000A6EAFFFEA2EA07C0B2EA3FFCA2142380A211>I<3801FE0F3907FFBF8038
0F87C7381F03E7391E01E000003E7FA5001E5BEA1F03380F87C0EBFF80D809FEC7FC0018
C8FCA2121C381FFFE06C13F86C13FE001F7F383C003F48EB0F80481307A40078EB0F006C
131E001F137C6CB45A000113C019217F951C>I<B4FCA2121FABEB07E0EB1FF8EB307CEB
403CEB803EA21300AE39FFE1FFC0A21A237EA21F>I<121C123E127FA3123E121CC7FCA7
B4FCA2121FB2EAFFE0A20B247EA310>I<B4FCA2121FB3ADEAFFE0A20B237EA210>108
D<3AFF07F007F090391FFC1FFC3A1F303E303E01401340496C487EA201001300AE3BFFE0
FFE0FFE0A22B167E9530>I<38FF07E0EB1FF8381F307CEB403CEB803EA21300AE39FFE1
FFC0A21A167E951F>I<13FE3807FFC0380F83E0381E00F0003E13F848137CA300FC137E
A7007C137CA26C13F8381F01F0380F83E03807FFC03800FE0017167E951C>I<38FF0FE0
EB3FF8381FE07CEB803E497E1580A2EC0FC0A8EC1F80A29038803F00EBC03EEBE0FCEB3F
F8EB0FC090C8FCA8EAFFE0A21A207E951F>I<EAFE1FEB3FC0381E67E013C71387A2381F
83C090C7FCADEAFFF0A213167E9517>114 D<EA0FF3EA3FFFEA781FEA6007EAE003A212
F000FCC7FCEA7FE013F8EA3FFEEA0FFF120138000F80EAC007130312E0A238F00700EAFC
0EEAEFFCEAC7F011167E9516>I<487EA41203A21207A2120F123FB5FCA2EA0F80ABEB81
80A5EB8300EA07C3EA03FEEA00F811207F9F16>I<38FF01FEA2381F003EAF147E14FE38
0F81BE3907FF3FC0EA01FC1A167E951F>I<39FFE01FE0A2391F800700000F1306EBC00E
0007130C13E000035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA21B16
7F951E>I<3AFFE3FF07F8A23A1F007800C09038807C01000F1580A23A07C07E030014DE
5D3903E1DF06148FD801F1138CEBF307A2D800FF13D8EBFE0315F890387C01F0A2013C5B
EB3800A225167F9528>I<39FFE07FC0A2390F801C006C6C5A6C6C5AEBF0606C6C5A3800
F980137F6DC7FC7F80497E1337EB63E0EBC1F03801C0F848487E3807007E000E133E39FF
80FFE0A21B167F951E>I<39FFE01FE0A2391F800700000F1306EBC00E0007130C13E000
035BA26C6C5AA26C6C5AA2EB7CC0A2137F6D5AA26DC7FCA2130EA2130CA25B1278EAFC38
13305BEA69C0EA7F80001FC8FC1B207F951E>I<B912FEA23702808E38>124
D E /Fi 7 122 df<3801FFC038003C001338A45BA45BA4485AA438038002A31404EA07
00140C14181438000E13F0B5FC171C7E9B1A>76 D<EA01E3EA0717EA0C0F1218EA380E12
301270A2EAE01CA41339A3EA6079EA319AEA1E0C10127C9115>97
D<13F8EA0304120EEA1C0EEA181CEA30001270A25AA51304EA60081310EA3060EA0F800F
127C9113>99 D<13F8EA0704120CEA1802EA38041230EA7008EA7FF0EAE000A5EA600413
08EA30101360EA0F800F127C9113>101 D<EA383EEA4CC3384D0380124E129E129C121C
A238380700A3130E00701340A2131C1480EAE00C3860070012127C9117>110
D<12035AA3120EA4EAFFE0EA1C00A35AA45AA4EAE080A2EAE100A2126612380B1A7C990E
>116 D<381C0180EA2E03124EA2388E0700A2121CA2EA380EA4EA301CA3EA383CEA1878
EA0FB8EA003813301370EAE0605BEA81800043C7FC123C111A7C9114>121
D E /Fj 20 122 df<B512E0380F0038141E80801580A415005C141E1478EBFFF0EB003C
140FEC0780A2EC03C0A5EC078015005C143CB512F01A1C7D9B20>66
D<B6FC380F000F140380A215801400A214801500A3130113FF13011300A3154014001580
A31401A2EC0300140FB6FC1A1C7D9B1F>69 D<B512C0380F0078141C80801580A5150014
0E5C1478EBFFC090C8FCACEAFFF0191C7D9B1F>80 D<3803F040380C0CC0EA1002EA3001
EA600012E01440A36C13007E127EEA7FE0EA3FFC6CB4FC00071380EA007FEB07C0EB03E0
130113007EA36C13C0A238E0018038D00300EACE06EA81F8131E7D9C19>83
D<007FB512C038700F010060130000401440A200C014201280A300001400B1497E3803FF
FC1B1C7D9B21>I<13201370A313B8A3EA011CA2EA031EEA020EA2487EEA07FFEA040738
080380A2001813C01301123838FC07F815157F9419>97 D<EBFC2038078260380E01E0EA
1C0048136000781320127012F01400A5142012701278003813407E6C138038078300EA00
FC13157E9419>99 D<B51280EA1C031300A21440A213081400A21318EA1FF8EA1C181308
1420A213001460144014C01301B5FC13157F9417>101 D<EBFC2038078260380E01E0EA
1C0048136000781320127012F01400A3EB0FF8EB00E0A21270127812387E7E3807836038
00FC2015157E941B>103 D<EAFF80EA1C00B3EAFF8009157F940D>105
D<38FF81F8381C01E01480140013025B5B5B1330137013B8EA1D1C121EEA1C0E7F148013
03EB01C014E014F038FF83FC16157F941A>107 D<00FEEB0FE0001E140000171317A338
138027A23811C047A33810E087A2EB7107A3133AA2131CA2123839FE083FE01B157F941F
>109 D<38FC03F8381E00E014401217EA138013C01211EA10E01370A21338131CA2130E
130714C0130313011300123800FE134015157F9419>I<EA01F8EA070EEA0C03001C1380
383801C0007813E0EA700000F013F0A7007013E0EA7801003813C0381C0380EA1E073807
0E00EA01F814157E941A>I<EAFFFCEA1C0FEB038014C0A51480EB0F00EA1FFC001CC7FC
A9B47E12157F9417>I<EAFFF8EA1C0EEB0780130314C0A314801307EB0E00EA1FF8EA1C
1C7F7FA31480148414C4EB03CC38FF80F816157F9419>114 D<EA1F10EA30F0EA603012
C01310A2EAE000A2127EEA3FC0EA1FE0EA03F0EA0078133813181280A21310EAC030EAF0
60EA8F800D157E9413>I<387FFFF03860703000401310A200801308A300001300ADEA07
FF15157F9419>I<38FF07F0381E03C0000E1300EA0F02EA0706EA038413C8EA01D0EA00
F0A21370137813BCEA011C487EEA020F487E380C0380000813C0003C13E038FE07F81515
7F9419>120 D<38FF80FE381E0038000E1320000F13606C13403803808013C03801C100
13E212001374137C1338A848B4FC1715809419>I E /Fk 30 123
df<127012F012F8A212781208A31210A31220A21240050E7C840D>59
D<EC01C0EC0780EC1E001478EB01E0EB0780010EC7FC133813F0EA03C0000FC8FC123C12
F0A2123C120FEA03C0EA00F01338130E6D7EEB01E0EB0078141EEC0780EC01C01A1A7C97
23>I<144014C0EB0180A3EB0300A31306A25BA35BA35BA25BA35BA3485AA348C7FCA212
06A35AA35AA25AA35AA35AA2122D7EA117>I<12E01278121EEA0780EA01E0EA0078131C
1307EB03C0EB00F0143C140FEC03C0A2EC0F00143C14F0EB03C049C7FC131C1378EA01E0
EA0780001EC8FC127812E01A1A7C9723>I<027F1380903803C0C190390E002300013813
1749130F5B48481306485A48C7FC5A000E1404121E4891C7FCA25AA45AA400701420A35D
6C5CA26C49C7FC6C13066C13183801C06038007F8021217F9F21>67
D<D801FEEC0FF8D8001EEC1F8001171500162F164F0127145E169EED011EA29039438002
3CA21504150801835C15101520EB81C0D80101495A1580A2ECC10000024A5A14C214C4EB
00E4489038E803C014F0A2000C13E0001EEBC007D8FFC0EB7FFC2D1F7E9E2C>77
D<48B4EB1FF8D8001FEB03C091388001001317A2903823C002A2EB21E0A2903841F00413
40A2147801805B147C143CA248486C5AA2140FA2000214A01407A2EC03E0485CA2140112
0C001E6D5AEAFFC0251F7E9E25>I<14FF90380781C090381C00E0491370491338D801C0
131C120349131E48C7120E5A121EA25AA248141EA448143CA2153815781570007014F0EC
01E0007814C0EC03800038EB07006C130E5C000F1370380381C0C6B4C7FC1F217F9F23>
I<903803F04090380C08C09038300580EB600313C000011301018013001203A391C7FC7F
7F13FC3801FFC06C13F06D7E131FEB01FCEB007C143C141CA21220A21418006013381430
147000705B38E80180D8C603C7FCEA81FC1A217E9F1C>83 D<000FB512FC391E03C03800
181418001014081220EB078012601240A239800F001000001400A3131EA45BA45BA45BA4
1201387FFFC01E1F7F9E1B>I<39FFF001FF390F80007890C712301520154015807F0007
EB01005C14025CA25C6D5AA200035B146014405CA201C1C7FC13E2120113E413E8A213F0
A25B5B12005B20207E9E1B>86 D<EBF180380389C038070780EA0E03121C123C38380700
1278A3EAF00EA31410EB1C20A2EA703CEB5C40EA308C380F078014147E9318>97
D<EA0780123FEA0700A4120EA45AA213F0EA1D0CEA3A0E123CEA380FA21270A4EAE01EA3
131C133C1338EA607013E0EA31C0EA1F0010207E9F14>I<137CEA01C338070080EA0E07
121E001C1300EA3C0248C7FCA35AA5EA70011302EA3004EA1838EA0FC011147E9314>I<
1478EB03F8EB0070A414E0A4EB01C0A213F1EA038938070780EA0E03121C123C38380700
1278A3EAF00EA31410EB1C20A2EA703CEB5C40EA308C380F078015207E9F18>I<137CEA
0182EA0701120E121C123CEA3802EA780CEA7BF0EA7C0012F0A4127013011302EA3004EA
1838EA0FC010147E9315>I<EB1E30EB7138EBE0F03801C070EA03801207EB00E05AA338
1E01C0A4EB0380A2EA0E07130B38061700EA01E7EA0007A2130EA21230EA781C485AEA60
70EA3FC0151D809316>103 D<EA01E0120FEA01C0A4485AA448C7FCA2131FEB6180380E
80C0EA0F00000E13E0A2381C01C0A438380380A3EB070400701308130E1410130600E013
20386003C016207E9F1A>I<13E01201A2EA00C01300A7120E1213EA23801243A3EA8700
1207A2120EA25AA21320EA3840A31380EA1900120E0B1F7E9E10>I<14C0EB01E0A214C0
90C7FCA7131E1323EB43801383EA0103A2380207001200A3130EA45BA45BA45BA21230EA
78E0EAF1C0EA6380003EC7FC1328819E13>I<EA01E0120FEA01C0A4485AA448C7FCA2EB
01E0EB0610380E0870EB10F013201460381C4000EA1D80001EC7FCEA1FC0EA38707FA2EB
1C2038703840A3EB188012E038600F0014207E9F18>I<EA01C0121FEA0380A4EA0700A4
120EA45AA45AA45AA3127112E2A4126412380A207E9F0E>I<391E07C07C392318618690
38A032033843C034D980381380A23A87007007001207A3000EEBE00EA3ED1C10261C01C0
1320153816401518263803801380D81801EB0F0024147E9328>I<381E0780382318C0EB
A0603843C0701380A2388700E01207A3380E01C0A3EB0382001C1384EB07041408130300
381310381801E017147E931B>I<137CEA01C338030180000E13C0121E001C13E0123C12
78A338F003C0A3EB07801400EA700F130EEA3018EA1870EA07C013147E9316>I<EA1C1E
EA26213847438013871307EB0300008EC7FC120EA35AA45AA45A123011147E9315>114
D<EA018013C0EA0380A4EA0700A2EAFFF8EA0700120EA45AA45AA31310EA7020A2134013
80EA3100121E0D1C7F9B10>116 D<000F136038118070002113E013C01241EA43803883
81C0EA0701A3380E0380A31484EB0708120CA2380E0F10EA06133803E1E016147E931A>
I<3803C1C0380C622038103470EB38F012201460384070001200A35BA314203861C04012
F1148012E238446300EA383C14147E931A>120 D<3801C0203803F0403807F8C0380C1F
8038080100EA00025B5B5B13605B48C7FC120248138038080100485AEA3F06EA63FEEA40
FCEA807013147E9315>122 D E /Fl 20 122 df<B512F83807801E80EC0780EC03C015
E0A515C01407EC0F80EC1F00EBFFFCEB801EEC0780EC03C015E0140115F0A515E0140315
C0EC0780EC1F00B512FC1C1F7D9E23>66 D<B612C0380F80070007130114001540156015
20A314201500A2146014E013FF138014601420A3EC0008A31510A31530157015E0000F13
03B6FC1D1F7D9E22>69 D<B512F0380F803E0007130FEC0780EC03C0A215E0A415C0A2EC
0780EC0F00143EEBFFF00180C7FCAD487EEAFFFC1B1F7D9E22>80
D<3803F020380C0C60381803E0EA30005A146012E01420A36C13007E127CEA7F80EA3FFC
6CB4FC00071380000113C038000FE013031301EB00F014707EA46C136014E06C13C038F8
018038C60300EA81FC14217C9F1C>83 D<007FB512F839780780780060141800401408A2
00C0140C00801404A400001400B3497E0003B5FC1E1F7D9E24>I<1318A2133CA3134EA2
13CF1387A238010380A2000313C0EA0201A23807FFE0EA0400A2481370A2001813380038
137838FE01FF18177F961C>97 D<EB7E083803819838070078000C1338001C13185A0078
1308127000F01300A700701308127812386C1310120C000713603803818038007E001517
7E961B>99 D<B512C0EA1C011300144014601420A213081400A21318EA1FF8EA1C181308
1410A2130014301420A21460EB01E0B5FC14177E9619>101 D<EB7E0838038198380700
78000C1338001C13185A00781308127000F01300A5EB03FEEB00381270127812387E120C
1207380380D838007F0817177E961D>103 D<EAFF80EA1C00B3A3EAFF8009177E960E>
105 D<38FF80FE381C0078146014401480EB0100130613085B13381378139CEA1D0E121E
EA1C07EB0380EB01C0A2EB00E014701478147C38FF80FF18177E961D>107
D<00FCEB07F0001C1480A20016130BA200131313A338118023A23810C043A3EB6083A2EB
3103A3131AA2130C123800FEEB1FF01C177E9622>109 D<38FC01FC381E007014201217
EA1380A2EA11C0EA10E0A213701338A2131C130E1307A2EB03A0EB01E0A2130014601238
00FE132016177E961C>I<13FE38038380380E00E0481370003C1378003813380078133C
0070131C00F0131EA70070131C0078133C00381338003C1378001C13706C13E038038380
3800FE0017177E961D>I<EAFFFCEA1C07EB03C0130114E0A414C01303EB0700EA1FFC00
1CC7FCAAB47E13177E9619>I<EAFFFCEA1C07EB0380EB01C014E0A414C0EB0380EB0700
EA1FFCEA1C0C13077F1480A214C0A214C214E2EB01E438FF807817177E961B>114
D<EA0FC4EA302CEA601CEA400CEAC004A3EAE0001270127FEA3FE0EA0FF8EA01FCEA001C
130E13061280A3EAC004EAE008EAD810EA87E00F177E9615>I<387FFFFC3870381C0040
1304A200C0130600801302A300001300AE3803FF8017177F961B>I<38FF80FE381F0070
000E13606C1340EB80803803C100EA01C3EA00E213F4137813387F133E134E13C7EB8780
380103C0EA0201380600E0000413F0000C1370003C137800FE13FF18177F961C>120
D<B4133F003C131E6C1318000E1310120F38078020000313603801C040EBE080EA00E1EB
7100137A133E131CA9EBFF8018177F961C>I E /Fm 29 122 df<14021406A2140E141E
A2143F142F144F14CF148FEB010FA21302A213041308A20110138014071320EB3FFFEB40
071380A2EA0100A2120212061204001E14C039FF807FF81D207E9F22>65
D<48B512FE39001E001C150C1504A25BA490387804081500A2140C495AEBFFF8EBF018A2
3801E010A3EC001048481320A21540A248481380140115001407380F001FB512FE1F1F7D
9E1F>69 D<3801FFF038001F00131EA35BA45BA45BA4485AA4485AA4485AA4120FEAFFF0
141F7D9E12>73 D<3801FFF8D8001FC7FC131EA35BA45BA45BA4485AA315803903C00100
A25C140238078006A25C141C380F0078B512F8191F7D9E1D>76 D<D801FEEC7FC0D8001E
ECFC005E0117EB0178A20127EB02F01504A215080147EB09E015111521A20187495AEB83
801583A23A01038107801482A2148400024AC7FC14881490A2390401E01EA214C0000C13
80001C143E3AFF8103FFC02A1F7D9E29>I<90B5FC90381E03C0EC00E0157015785BA449
13F0A2EC01E015C09038F00700141EEBFFF0EBF01C48487E140F8015803903C00F00A438
07801E1508A21510000F130ED8FFF01320C7EA03C01D207D9E21>82
D<903807E04090381C18C09038300580EB600313C000011301018013001203A391C7FC7F
A213F86CB47E14E06C6C7E131FEB01F8EB0078A21438A21220A2143000601370146014E0
00705B38E80380D8C606C7FCEA81F81A217D9F1A>I<EBF180380389C038070780EA0E03
121C123C383807001278A3EAF00EA31420EB1C40A2EA703C135C38308C80380F07001314
7C9317>97 D<137EEA01C138030080EA0E07121E001C1300EA3C0248C7FCA35AA5EA7001
1302EA3004EA1838EA07C011147C9315>99 D<1478EB03F8EB0070A414E0A4EB01C0A213
F1EA038938070780EA0E03121C123C383807001278A3EAF00EA31420EB1C40A2EA703C13
5C38308C80380F070015207C9F17>I<137CEA01C2EA0701120E121C123CEA3802EA780C
EA7BF0EA7C0012F0A4127013011302EA3804EA1838EA07C010147C9315>I<1478EB019C
EB033CA2EB07181400A2130EA5EBFFE0EB1C00A45BA55BA55BA5485AA35B1231007BC7FC
12F31266123C1629829F0E>I<EB1E30EB7138EBE0F03801C070EA03801207EB00E05AA3
381E01C0A4EB0380A2EA0E07130B38061700EA01E7EA0007A2130EA21230EA781C485AEA
6070EA3FC0151D7F9315>I<EA01E0120FEA01C0A4485AA448C7FCA2131E1363380E8180
380F01C0120EA2381C0380A438380700A3EB0E1000701320A2131CEB0C4000E013803860
070014207D9F17>I<13C0EA01E0A213C0C7FCA7120E12131223EA4380EA4700A2128712
0EA35AA3EA38401380A21270EA31001232121C0B1F7C9E0E>I<EA03C0121FEA0380A4EA
0700A4120EA45AA45AA45AA3127112E2A4126412380A207C9F0C>108
D<391C0F80F0392630C318394740640C903880680EEB0070A2008E495A120EA34848485A
A3ED70803A3803807100A215E115623970070064D83003133821147C9325>I<381C0F80
382630C0384740601380EB0070A2008E13E0120EA3381C01C0A3EB038400381388A2EB07
08EB031000701330383001C016147C931A>I<137CEA01C338030180000E13C0121E001C
13E0123C1278A338F003C0A3EB07801400EA700F130EEA3018EA1870EA07C013147C9317
>I<3801C1E0380262183804741C1378EB701EA2EA08E01200A33801C03CA31438380380
78147014E0EBC1C038072380EB1E0090C7FCA2120EA45AA2B47E171D809317>I<EBF040
380388C038070580EA0E03121C123C383807001278A3EAF00EA45BA2EA703C135CEA30B8
EA0F381200A25BA45BA2EA0FFE121D7C9315>I<EA1C1EEA266138278380EA47871307EB
0300008EC7FC120EA35AA45AA45A123011147C9313>I<13FCEA0302EA0601EA0C031307
13061300EA0F8013F0EA07F8EA03FCEA003E130E1270EAF00CA2EAE008EA4010EA2060EA
1F8010147D9313>I<EA018013C0EA0380A4EA0700A2EAFFF0EA0700120EA45AA45AA313
20EA7040A21380A2EA3100121E0C1C7C9B0F>I<000E13C0001313E0382301C0EA4381EA
4701A238870380120EA3381C0700A31410EB0E201218A2381C1E40EA0C263807C3801414
7C9318>I<380E0380EA1307002313C0EA4383EA4701130000871380120EA3381C0100A3
1302A25BA25BEA0E30EA03C012147C9315>I<000EEBC1C0001313E3392301C3E0384381
C1384701C015603987038040120EA3391C070080A3EC0100A21306EB0F02000C5B380E13
083803E1F01B147C931E>I<38038380380CC440381068E013711220EB70C03840E00012
00A3485AA314403863808012F3EB810012E5EA84C6EA787813147D9315>I<000E13C000
1313E0382301C0EA4381EA4701A238870380120EA3381C0700A4130E1218A2EA1C1EEA0C
3CEA07DCEA001CA25B12F05BEAE060485AEA4380003EC7FC131D7C9316>I
E /Fn 47 122 df<1380EA010012025A120C120812185AA35AA412E0AA1260A47EA37E12
08120C12047E7EEA008009267D9B0F>40 D<7E12407E7E12181208120C7EA37EA41380AA
1300A41206A35A1208121812105A5A5A09267E9B0F>I<126012F0A212701210A31220A2
1240A2040B7D830B>44 D<EAFFC0A20A0280880D>I<126012F0A2126004047D830B>I<12
035AB4FC1207B3A2EA7FF80D187D9713>49 D<1240EA7FFF13FEA2EA4004EA80081310A2
EA00201340A21380120113005AA25A1206A2120EA5120410197E9813>55
D<EA07E0EA1818EA300CEA20061260A21270EA780CEA3E18EA1F30EA07C0EA03E0EA0CF8
EA307CEA601E130FEAC0071303A3EA6002EA2004EA1818EA07E010187F9713>I<EA07E0
EA1C30EA3018EA700CEA600EEAE006A21307A31260EA700FEA3017EA1827EA07C7EA0007
1306130E130C12701318EA6030EA3060EA0F8010187F9713>I<126012F0A212601200A8
126012F0A212701210A31220A21240A204177D8F0B>59 D<130CA3131EA2132F1327A2EB
4380A3EB81C0A200017F1300A248B47E38020070A2487FA3487FA2003C131EB4EBFFC01A
1A7F991D>65 D<EB3F023801C0C63803002E000E131E48130E14065A007813021270A200
F01300A600701302A21278003813047E14087E000313303801C0C038003F00171A7E991C
>67 D<B57E380E00E01470808080A280A21580A81500A25C140E5CA2147814E0B5128019
1A7F991D>I<B512F8380E003814181408140C1404A3EB0100A35BEA0FFFEA0E037FA3EB
0002A314061404A2140C143CB512FC171A7F991A>I<EAFFE0000EC7FCB01408A3141814
101430147014F0B5FC151A7F9918>76 D<B414FF000F14F0A2390B800170A23809C002A3
3808E004A2EB7008A3EB3810A3EB1C20A2EB0E40A3EB0780A2EB0300121C39FF8307FF20
1A7F9923>I<00FEEB7FC0000FEB0E001404EA0B80EA09C0A2EA08E01370A21338131CA2
130E1307EB0384A2EB01C4EB00E4A21474143CA2141C140C121C38FF80041A1A7F991D>
I<137F3801C1C038070070000E7F487F003C131E0038130E0078130F00707F00F01480A8
0078EB0F00A20038130E003C131E001C131C6C5B6C5B3801C1C0D8007FC7FC191A7E991E
>I<B51280380E01E0EB007014781438143CA4143814781470EB01E0380FFF80000EC7FC
ABEAFFE0161A7F991A>I<EA0FC2EA1836EA200EEA600612C01302A3EAE0001270127EEA
3FE0EA1FF8EA03FCEA007E130E130713031280A3EAC0021306EAE004EAD818EA87E0101A
7E9915>83 D<007FB5FC38701C0700401301A200C0148000801300A300001400B13803FF
E0191A7F991C>I<39FFE07FC0390E000E001404B200065B12076C5B6C6C5A3800E0C001
3FC7FC1A1A7F991D>I<3AFF81FF07F03A3C007801C0001CEC0080A36C90389C0100A339
07010E02A33903830F04EB8207A2150C3901C40388A33900E801D0A390387000E0A30130
5B01201340241A7F9927>87 D<EA1FC0EA38707FEA101C1200A2EA03FCEA1E1C12381270
12E01480A2133CEA705F381F8F0011107F8F13>97 D<12FC121CA913FCEA1D07381E0380
381C01C0130014E0A6EB01C01480381E0300EA1906EA10F8131A809915>I<EA07F8EA1C
1C1238EA700813005AA612701304EA3808EA1C18EA07E00E107F8F11>I<133F1307A9EA
03E7EA0C17EA180F487E127012E0A6126012706C5AEA1C373807C7E0131A7F9915>I<EA
07C0EA1C30EA30181270EA600C12E0EAFFFCEAE000A41260EA7004EA3808EA1C18EA07E0
0E107F8F11>I<EA01F0EA0718EA0E38EA1C101300A6EAFFC0EA1C00AEEAFF800D1A8099
0C>I<EA0FCF3818718038303000EA7038A4EA30306C5AEA2FC00060C7FCA21270EA3FF0
13FC6C7EEA600FEAC003A4EA6006EA381CEA07E011187F8F13>I<12FC121CA9137CEA1D
87381E0380A2121CAB38FF9FF0141A809915>I<1218123CA212181200A612FC121CAE12
FF081A80990A>I<12FC121CA9EB1FC0EB0F00130C5B13205B13E0121DEA1E70EA1C7813
387F131E7F148038FF9FE0131A809914>107 D<12FC121CB3A6EAFF80091A80990A>I<38
FC7C1F391D8E6380391E0781C0A2001C1301AB39FF9FE7F81D107F8F20>I<EAFC7CEA1D
87381E0380A2121CAB38FF9FF01410808F15>I<EA07E0EA1C38EA300CEA700EEA6006EA
E007A6EA6006EA700EEA381CEA1C38EA07E010107F8F13>I<EAFCFCEA1D07381E038038
1C01C0A2EB00E0A6EB01C01480381E0300EA1D06EA1CF890C7FCA6B47E1317808F15>I<
EA03E1EA0C13EA180BEA300FEA700712E0A61270A26C5AEA1C37EA07C7EA0007A6EB3FE0
13177F8F14>I<EAFC78EA1D9CEA1E1C1308EA1C00ABEAFF800E10808F0F>I<EA1F20EA60
E0EA402012C0A2EAF000127FEA3FC0EA1FE0EA00F0EA8070133012C01320EAF040EA8F80
0C107F8F0F>I<1208A41218A21238EAFFC0EA3800A81320A41218EA1C40EA07800B177F
960F>I<38FC1F80EA1C03AB1307120CEA0E0B3803F3F01410808F15>I<38FF0F80383C07
00EA1C061304A26C5AA26C5AA3EA03A0A2EA01C0A36C5A11107F8F14>I<39FE7F1F8039
381C0700003C1306381C0C04130E380E16081317A238072310149013A33803C1A014E038
0180C0A319107F8F1C>I<38FE3F80383C1E00EA1C086C5AEA0F306C5A6C5A12017F1203
EA0270487E1208EA181CEA381E38FC3FC012107F8F14>I<38FF0F80383C0700EA1C0613
04A26C5AA26C5AA3EA03A0A2EA01C0A36C5AA248C7FCA212E112E212E4127811177F8F14
>I E /Fo 3 123 df<120CA2EACCC012EDEA7F80EA0C00EA7F80EAEDC012CCEA0C00A20A
0B7D8B10>3 D<1218A512FFA21218AF08167D900E>121 D<1218A512FF1218A512001218
A412FFA21218A408167D900E>I E /Fp 4 21 df<B612C0A21A027C8B23>0
D<EA0180A5EAE187EA718EEA399CEA0FF0EA03C0A2EA0FF0EA399CEA718EEAE187EA0180
A510147D9417>3 D<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C5A
6C5AEA03F012127E9317>15 D<15C01403EC0F00143C14F0EB03C049C7FC131C1378EA01
E0EA0780001EC8FC127812E01278121EEA0780EA01E0EA0078131C1307EB03C0EB00F014
3C140FEC03C014001500A7007FB51280B612C01A247C9C23>20 D
E /Fq 57 125 df<49B4FC011F13C090387F81E0EBFC013901F807F01203EA07F0A4EC01
C091C8FCA3EC3FF8B6FCA33807F003B3A33A7FFF3FFF80A3212A7FA925>12
D<123C127FEAFF80A213C0A3127F123E1200A2EA0180A3EA0300A21206120E5A5A12100A
157B8813>44 D<B51280A611067F9016>I<EB3F803801FFF03807E0FC380FC07E48487E
497E481480003E130F007E14C0A400FE14E0AF007E14C0A46CEB1F80A26C14006D5A380F
C07E6C6C5A3801FFF038003F801B277DA622>48 D<130E131E137EEA07FE12FFA212F812
00B3ABB512FEA317277BA622>I<EBFF80000713F04813FC381E03FE393800FF80007C13
3F00FE14C06C131F15E0140FA2127E003C131FC7FC15C0A2EC3F801500147E5C5C495A49
5AEB078049C7FC131E4913E013705B3901C001C0EA0380EA0600000FB5FC5A5A5AB61280
A31B277DA622>I<EB7F803803FFF04813FC380F81FE381F007FEA3F80EC3F80A3121F13
00C7EA7F00A2147E5C495AEB07F0EBFFC0A2EB01F8EB007E801580EC1FC0A215E0A2123C
127EB4FCA215C0143F481480007CEB7F00383F01FE6CB45A000713F0C613801B277DA622
>I<140FA25C5C5C5C5BA2EB03BFEB073F130E131C133C1338137013E0EA01C0EA038012
071300120E5A5A5A12F0B612F8A3C7EA7F00A890381FFFF8A31D277EA622>I<00181303
381F801FEBFFFE5C5C5C14C091C7FC001CC8FCA7EB7FC0381DFFF8381F80FC381E003F12
08C7EA1F8015C0A215E0A21218127C12FEA315C05A0078EB3F80A26CEB7F00381F01FE6C
B45A000313F0C613801B277DA622>I<EB07F8EB3FFE90B5FC3901FC07803903F00FC038
07C01FEA0F80121F130048EB0F8091C7FC127EA3EAFE02EB1FF0EB3FFCEB603EEB801F00
FF14809038000FC0A24814E0A4127EA4123E003F14C07EEC1F80D80F8013003807E07E6C
B45A6C5B38003FC01B277DA622>I<1238123E003FB512F0A34814E015C0158015003870
000EA25C485B5C5CC6485AA2495A130791C7FC5B5B131E133EA2137E137CA213FCA41201
A76C5A13701C297CA822>I<EB3FC03801FFF04813FC3807C07E48C67E001E7FEC0F8012
3EA2123F138001C01300EBF01F381FFC1E6D5A380FFFF86C13E06C7F6C13FC8000077FD8
0F0F1380D81E0713C0EA3E01397C007FE0141F48130F14071403A315C0127C007EEB0780
6CEB0F00381FC03F380FFFFC00035B38007FC01B277DA622>I<EB7F803801FFF000077F
380FC0FC381F803E48487E007E1480A2140F00FE14C0A315E0A5007E131FA26C133F6C13
2F380F80CF3807FF8F0001130FEA0008010013C0A3EC1F80123E127FEC3F00143E147E00
7E5B383E03F8381FFFE06C1380D801FEC7FC1B277DA622>I<121C127FA2EAFF80A3EA7F
00A2121CC7FCA9121C127FA2EAFF80A3EA7F00A2121C091B7B9A13>I<EC0780A24A7EA3
4A7EA24A7EA3EC77F8A2ECF7FC14E3A2903801C1FEA201037F1480A249486C7EA2498001
0E133FA2496D7EA2013FB57EA39039700007F8A201F080491303000181491301A2000381
D8FFFE013F13FCA32E297EA833>65 D<B612F815FF16C03A03F8001FE0ED0FF0ED07F815
0316FCA21501A3150316F8A2ED07F0150FED1FC0EDFF8090B5EAFE00EDFFC09039F8000F
F0ED03F8ED01FC16FE1500A216FFA616FE1501ED03FC1507ED1FF8B712E016C0EDFE0028
297DA830>I<91387FE003903907FFFC07011FEBFF0F90397FF00F9F9039FF0001FFD801
FC7F4848147F4848143F4848141F485A160F485A1607127FA290C9FC5AA97E7F1607123F
A26C7E160E6C7E6C6C141C6C6C143C6C6C14786CB4EB01F090397FF007C0011FB5128001
07EBFE009038007FF028297CA831>I<B612FCEDFF8016E03A03FC001FF8ED03FCED00FE
167FEE3F80EE1FC0A2EE0FE0A2EE07F0A417F8AA17F0A3EE0FE0A217C0161FEE3F80EE7F
005EED03FCED1FF8B75A168003FCC7FC2D297EA834>I<B712E0A33903FC001FED07F015
01A215001670A3913801C0781638A302031300A2140F90B5FCA3EBFC0F1403A20201130E
A3161C91C7FCA3163C1638167816F815011503151FB712F0A327297EA82C>I<B712C0A3
3903FC003FED0FE015031501A21500A316F0913801C070A316001403A2140F90B5FCA3EB
FC0F1403A21401A491C8FCA9B512FCA324297EA82A>I<B5D8F00FB5FCA3D803FCC7EA3F
C0AF90B7FCA301FCC7123FB1B5D8F00FB5FCA330297EA835>72 D<B512F0A33803FC00B3
B1B512F0A314297EA819>I<B512FCA3D803FCC8FCB3A3ED01C0A415031680A21507A215
0FA2151F157F913801FF00B7FCA322297EA828>76 D<D8FFFE92383FFF80A26D5D0003EF
E000A2D9BF8014EFA2D99FC0EB01CFA2D98FE0EB038FA3D987F0EB070FA2D983F8130EA2
D981FC131CA3D980FE1338A2027F1370A291383F80E0A391381FC1C0A291380FE380A291
3807F700A3EC03FEA26E5AA26E5AD8FFFE0203B51280A2157039297DA840>I<D8FFFCEC
7FFF7F7F00036DEB01C080EBBFE0139F80EB8FF8EB87FCEB83FEEB81FF01801380147F15
C0EC3FE0EC1FF0EC0FF8EC07FC140315FEEC01FF6E1381ED7FC1ED3FE1ED1FF1150F16F9
ED07FDED03FF8181167FA2163F161F160F1607D8FFFE14031601A230297EA835>I<B612
F815FF16C03A03FC003FE0ED07F0ED03F816FC150116FEA716FC150316F8ED07F0ED3FE0
90B61280EDFE0001FCC8FCB0B512F0A327297EA82E>80 D<ECFFC0010F13FC90383FC0FF
9039FE001FC048486D7ED803F0EB03F000078148486D7E48486D7EA24848147FA2007F16
80A290C8123FA24816C0AA6C16806D147FA2003F1600A26C6C14FE143E3A0FE07F81FC00
079038C1C1F83A03F18063F0D801F9EB67E0D800FFEB3FC090263FC07FC7FC90380FFFFC
01004913C0EC003C811601ED1F8316FF6F1380A21700816F5A6F5A6F5A2A357CA833>I<
B612E015FE6F7E3A03FC003FE0ED0FF06F7E6F7E150182A65E4B5A1507ED0FE0ED3FC090
B500FEC7FCA29039FC00FF80ED3FC06F7E6F7E6F7EA9170EA21503923801FC1CB538F000
FEEE7FF8EE0FE02F297EA832>I<9038FF80600003EBF0E0000F13F8381F80FD383F001F
003E1307481303A200FC1301A214007EA26C140013C0EA7FFCEBFFE06C13F86C13FE8000
0714806C14C0C6FC010F13E0EB007FEC1FF0140F140700E01303A46C14E0A26C13076C14
C0B4EB0F80EBE03F39E3FFFE0000E15B38C01FF01C297CA825>I<007FB71280A3903980
7F807FD87C00140F00781507A20070150300F016C0A2481501A5C791C7FCB3A490B612C0
A32A287EA72F>I<B500F0EBFFFEA3D803FCC7EA0380B3AA0001ED07007F0000150E137F
6D143CD91FC05B90390FF003F06DB55A01001480DA1FFCC7FC2F297EA834>I<B53CE07F
FFE01FFFC0A32803FC0003FCC7EA7000A26D6D7E000160A26D6E13016C604B1380028015
03017F5F4B13C0D93FC0013F49C7FCA2913AE00E1FE00F011F160E17F09126F01C0F131E
010F161C033C13F8902707F838075BA2037813FC902703FC70035BA2913AFEE001FEF001
015E02FF14FF4B7E6D5EA26E486D5AA36EC76CC8FCA2023E80021E141EA242297FA845>
87 D<3B7FFFF01FFFE0A3000190C7EAF0006C6D485A02C05B017F13036D6C485AD91FF0
90C7FC5D90380FF81E6D6C5A1538903803FE786D6C5A5D6D5B147F6E7EA26E7E81143F81
EC7BFEECF3FFEB01E102C07F01036D7EEB078049486C7E010E6D7E131E496D7E01386D7E
498001F0130348486D7EB5013F13FCA32E297EA833>I<3803FF80000F13F0381F01FC38
3F80FE147F801580EA1F00C7FCA4EB3FFF3801FC3FEA0FE0EA1F80EA3F00127E5AA4145F
007E13DF393F839FFC381FFE0F3803FC031E1B7E9A21>97 D<EB3FF03801FFFC3803F03E
380FC07FEA1F80EA3F00A248133E007E90C7FCA212FEA7127EA2127F6CEB03801380001F
EB0700380FE00E3803F83C3801FFF838003FC0191B7E9A1E>99 D<EC7FF0A31407ACEB3F
873801FFF73807F03F380FC00F381F8007EA3F00A2127EA312FEA8127EA27EA2381F800F
380FC01F3907E07FFF3801FFE738007F87202A7EA925>I<EB3FC03801FFF03803E07C38
0F803E001F7F130048EB0F80127E15C0A200FE1307A2B6FCA248C8FCA3127EA2127F6CEB
01C07E390F8003803907C007003803F01E3800FFFCEB3FE01A1B7E9A1F>I<EB07F8EB3F
FCEB7E3E3801FC7FEA03F813F01207143E1400A7B512C0A33807F000B3A3387FFF80A318
2A7EA915>I<9038FF80F00003EBE3F8390FC1FE1C391F007C7C48137E003EEB3E10007E
EB3F00A6003E133E003F137E6C137C380FC1F8380BFFE00018138090C8FC1238A2123C38
3FFFF814FF6C14C06C14E06C14F0121F383C0007007CEB01F8481300A4007CEB01F0A200
3FEB07E0390FC01F806CB5120038007FF01E287E9A22>I<EAFFE0A3120FAC147E9038E1
FF809038E30FC001E413E0EBE80701F813F013F0A213E0B039FFFE3FFFA3202A7DA925>
I<1207EA0F80EA1FC0EA3FE0A3EA1FC0EA0F80EA0700C7FCA7EAFFE0A3120FB3A3EAFFFE
A30F2B7EAA12>I<EAFFE0A3120FACEC1FFCA3EC0780EC0F00141E5C5C14E0EBE3C013E7
EBEFE0EBFFF08013F3EBE1FCEBC0FE147FA2EC3F80EC1FC0EC0FE0A2EC07F039FFFC1FFF
A3202A7FA923>107 D<EAFFE0A3120FB3B2EAFFFEA30F2A7EA912>I<26FFC07FEB1FC090
3AC1FFC07FF0903AC307E0C1F8D80FC49038F101FC9039C803F20001D801FE7F01D05BA2
01E05BB03CFFFE3FFF8FFFE0A3331B7D9A38>I<38FFC07E9038C1FF809038C30FC0D80F
C413E0EBC80701D813F013D0A213E0B039FFFE3FFFA3201B7D9A25>I<EB3FE03801FFFC
3803F07E390FC01F80391F800FC0393F0007E0A2007EEB03F0A300FE14F8A8007E14F0A2
6CEB07E0A2391F800FC0390FC01F803907F07F003801FFFC38003FE01D1B7E9A22>I<38
FFE1FE9038EFFF809038FE0FE0390FF803F09038F001F801E013FC140015FEA2157FA815
7E15FEA215FC140101F013F89038F807F09038FC0FE09038EFFF809038E1FC0001E0C7FC
A9EAFFFEA320277E9A25>I<90383F80703901FFE0F03803F079380FE01D381F800F123F
EB00075AA2127E12FEA8127FA27E1380001F130F380FC01F3807F0773801FFE738007F87
EB0007A9EC7FFFA320277E9A23>I<38FFC1F0EBC7FCEBC63E380FCC7F13D813D0A2EBF0
3EEBE000B0B5FCA3181B7F9A1B>I<3803FE30380FFFF0EA3E03EA7800127000F01370A2
7E00FE1300EAFFE06CB4FC14C06C13E06C13F0000713F8C6FCEB07FC130000E0137C143C
7E14387E6C137038FF01E038E7FFC000C11300161B7E9A1B>I<13E0A41201A31203A212
07120F381FFFE0B5FCA2380FE000AD1470A73807F0E0000313C03801FF8038007F001426
7FA51A>I<39FFE07FF0A3000F1307B2140FA2000713173903F067FF3801FFC738007F87
201B7D9A25>I<39FFFC03FFA3390FF000F0000714E07F0003EB01C0A2EBFC0300011480
EBFE070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA26D5AA2201B7F9A
23>I<3BFFFC7FFC1FFCA33B0FE00FE001C02607F007EB0380A201F8EBF00700031600EC
0FF801FC5C0001150EEC1FFC2600FE1C5B15FE9039FF387E3C017F1438EC787F6D486C5A
16F0ECE01F011F5CA26D486C5AA2EC800701075CA22E1B7F9A31>I<39FFFC1FFEA33907
F003803803F8079038FC0F003801FE1E00005BEB7F3814F86D5A6D5A130F806D7E130F49
7EEB3CFEEB38FFEB787F9038F03F803901E01FC0D803C013E0EB800F39FFF03FFFA3201B
7F9A23>I<39FFFC03FFA3390FF000F0000714E07F0003EB01C0A2EBFC0300011480EBFE
070000140013FFEB7F0EA2149EEB3F9C14FC6D5AA26D5AA36D5AA26D5AA25CA213070038
90C7FCEA7C0FEAFE0E131E131C5BEA74F0EA3FE0EA0F8020277F9A23>I<BB12C0A24202
809143>124 D E /Fr 2 111 df<EB03F8EB0E0E90383803809038E001C0EA01C0390380
00E048C7FC4814F0121E121C123CA25AA348EB01E0A3EC03C0A2EC0780A2EC0F00007013
0E5C6C5B003C5B381C01C038070780D801FCC7FC1C1E7E9C20>79
D<EA3C1F384E6180384681C0EA4701128F128E120EA2381C0380A3EB070000381310A213
0E1420387006403830038014127E9119>110 D E /Fs 47 122 df<EB7E1F3901C1B180
390303E3C0000713C3000EEBC180903801C000A6B512FC380E01C0B0387F87FC1A1D809C
18>11 D<137E3801C180EA0301380703C0120EEB018090C7FCA5B512C0EA0E01B0387F87
F8151D809C17>I<1380EA0100120212065AA25AA25AA35AA412E0AC1260A47EA37EA27E
A27E12027EEA0080092A7C9E10>40 D<7E12407E12307EA27EA27EA37EA41380AC1300A4
1206A35AA25AA25A12205A5A092A7E9E10>I<126012F0A212701210A41220A212401280
040C7C830C>44 D<EAFFE0A20B0280890E>I<126012F0A2126004047C830C>I<5A120712
3F12C71207B3A5EAFFF80D1C7C9B15>49 D<EA07C0EA1830EA201CEA400C130EEAF00F12
F81307A21270EA000F130EA2131CA213381370136013C0EA0180EA0300EA0601120C1218
EA1002EA3FFE127F12FF101C7E9B15>I<EA07E0EA1830EA201CA2EA781E130E131E1238
EA001CA2131813301360EA07C0EA0030131CA2130E130FA2127012F8A3EAF00EEA401C12
20EA1830EA07C0101D7E9B15>I<126012F0A212601200AA126012F0A2126004127C910C>
58 D<B512C0380F00788080140E140FA4140E141E5C14F8EBFFF0EB003C8080801580A5
EC0F00A2141E1478B512E0191C7F9B1D>66 D<90381F8080EBE061380180193807000700
0E13035A14015A00781300A2127000F01400A8007014801278A212386CEB0100A26C1302
6C5B380180083800E030EB1FC0191E7E9C1E>I<B512C0380F00F0143C140E80A2EC0380
15C01401A215E0A815C0A21403158014071500140E5C1470B512C01B1C7E9B20>I<EAFF
F0EA0F00B3A8EAFFF00C1C7F9B0F>73 D<B4EB1FF0390F8003809038C00100120BEA09E0
EA08F0A21378133C133E131E130F14811307EB03C1EB01E114F113001479147D143D141F
A2808080121CB46C7E1C1C7F9B1F>78 D<EB3F80EBE0E03803803848487E000E7F487F00
3C148000381303007814C0A20070130100F014E0A8007014C000781303A200381480003C
1307001C14006C130E6C5B6C6C5A3800E0E0EB3F801B1E7E9C20>I<B51280380F00E014
78143C141C141EA5141C143C147814E0EBFF8090C7FCACEAFFF0171C7E9B1C>I<B5FC38
0F01E0EB007880141C141EA4141C143C5CEB01E001FFC7FCEB01E0EB0070147880A61510
A2141CA239FFF00E20C7EA03C01C1D7E9B1F>82 D<3807E080EA1C19EA30051303EA6001
12E01300A36C13007E127CEA7FC0EA3FF8EA1FFEEA07FFC61380130FEB07C01303130112
80A300C01380A238E00300EAD002EACC0CEA83F8121E7E9C17>I<007FB512C038700F01
0060130000401440A200C014201280A300001400B1497E3803FFFC1B1C7F9B1E>I<39FF
F01FF0390F000380EC0100B3A26C1302138000035BEA01C03800E018EB7060EB0F801C1D
7F9B1F>I<3AFFE1FFC0FF3A1F003E003C001E013C13186C6D1310A32607801F1320A33A
03C0278040A33A01E043C080A33A00F081E100A39038F900F3017913F2A2017E137E013E
137CA2013C133C011C1338A20118131801081310281D7F9B2B>87
D<39FFF07FC0390FC01E003807800CEBC00800035B6C6C5A13F000005BEB7880137C013D
C7FC133E7F7F80A2EB13C0EB23E01321EB40F0497E14783801007C00027F141E0006131F
001F148039FF807FF01C1C7F9B1F>I<EA1FC0EA3070EA78387F12301200A2EA01FCEA0F
1C12381270126000E01340A3EA603C38304E80381F870012127E9115>97
D<12FC121CAA137CEA1D87381E0180381C00C014E014601470A6146014E014C0381E0180
38190700EA10FC141D7F9C17>I<EA03F8EA0C0CEA181E1230EA700CEA600012E0A61260
EA70021230EA1804EA0C18EA03E00F127F9112>I<EB1F801303AAEA03F3EA0E0BEA1807
EA30031270126012E0A6126012701230EA1807EA0E1B3803E3F0141D7F9C17>I<EA07E0
EA0C30EA1818EA300CEA700EEA600612E0EAFFFEEAE000A41260EA70021230EA1804EA0C
18EA03E00F127F9112>I<13F8EA018CEA071E1206EA0E0C1300A6EAFFE0EA0E00B0EA7F
E00F1D809C0D>I<EB03803807C4C0EA1C783838388038301800EA701CA4EA3018EA3838
6C5AEA27C00020C7FCA21230EA3FF86CB4FC1480EA2003386001C0EAC000A33860018038
300300EA1C0EEA07F8121C7F9215>I<12FC121CAA137C1387EA1D03001E1380121CAD38
FF9FF0141D7F9C17>I<1218123CA21218C7FCA712FC121CB0EAFF80091D7F9C0C>I<12FC
121CAAEB0FE0EB0780EB06005B13105B5B13E0121DEA1E70EA1C781338133C131C7F130F
148038FF9FE0131D7F9C16>107 D<12FC121CB3A9EAFF80091D7F9C0C>I<39FC7E07E039
1C838838391D019018001EEBE01C001C13C0AD3AFF8FF8FF8021127F9124>I<EAFC7CEA
1C87EA1D03001E1380121CAD38FF9FF014127F9117>I<EA03F0EA0E1CEA1806487E0070
1380EA600100E013C0A600601380EA700300301300EA1806EA0E1CEA03F012127F9115>
I<EAFC7CEA1D87381E0180001C13C0EB00E0A21470A614E0A2EB01C0001E1380381D0700
EA1CFC90C7FCA7B47E141A7F9117>I<EAFCE0EA1D38EA1E78A2EA1C301300ACEAFFC00D
127F9110>114 D<EA1F90EA2070EA4030EAC010A212E0EAF800EA7F80EA3FE0EA0FF0EA
00F8EA8038131812C0A2EAE010EAD060EA8FC00D127F9110>I<1204A4120CA2121C123C
EAFFE0EA1C00A91310A5120CEA0E20EA03C00C1A7F9910>I<38FC1F80EA1C03AD130712
0CEA0E1B3803E3F014127F9117>I<38FF07E0383C0380381C0100A2EA0E02A2EA0F06EA
0704A2EA0388A213C8EA01D0A2EA00E0A3134013127F9116>I<39FF3FC7E0393C0703C0
001CEB01801500130B000E1382A21311000713C4A213203803A0E8A2EBC06800011370A2
EB8030000013201B127F911E>I<38FF0FE0381E0700EA1C06EA0E046C5AEA039013B0EA
01E012007F12011338EA021C1204EA0C0E487E003C138038FE1FF014127F9116>I<38FF
07E0383C0380381C0100A2EA0E02A2EA0F06EA0704A2EA0388A213C8EA01D0A2EA00E0A3
1340A25BA212F000F1C7FC12F312661238131A7F9116>I E /Ft
7 117 df<EB0380A2497EA3497EA2497E131BEB3BF81331A2EB60FCA2EBE0FEEBC07EA2
48487E90B5FC481480EB001F4814C00006130FA248EB07E0A239FF803FFEA21F1C7E9B24
>65 D<EA0FF8EA1C1E383E0F80130714C0121C1200137FEA07E7EA1F07123C127C12F8A3
EA780B383E13F8EA0FE115127F9117>97 D<B4FCA2121FA9EB3F80EBE1E0EB8070EB0078
143CA2143EA6143CA21478EB8070381EC1E0381C3F00171D7F9C1B>I<EA03FCEA0E0EEA
1C1F123C1278130E00F8C7FCA61278EB0180123C381C0300EA0E0EEA03F811127E9115>
I<EAFE3E1347381E8F80A3381F070090C7FCAAEAFFE0A211127F9114>114
D<EA1FD8EA3078EA601812E0A2EAF000EAFF80EA7FE013F0EA1FF8EA07FCEA007CEAC01C
A212E01318EAF830EACFC00E127E9113>I<1203A45AA25AA2EA3FFC12FFEA1F00A9130C
A4EA0F08EA0798EA03F00E1A7F9913>I E /Fu 2 123 df<1206A8EAFFF0A2EA0600B30C
1D7E9611>121 D<1206A6EAFFF0A2EA0600A6C7FC1206A6EAFFF0A2EA0600A60C1D7E96
11>I E /Fv 23 122 df<127012F812FCA212741204A41208A21210A212201240060F7C
840E>44 D<13801203120F12F31203B3A9EA07C0EAFFFE0F217CA018>49
D<1303A25BA25B1317A21327136713471387120113071202120612041208A212101220A2
124012C0B512F838000700A7EB0F80EB7FF015217FA018>52 D<137EEA01C13803008038
0601C0EA0C03121C381801800038C7FCA212781270A2EAF0F8EAF30CEAF4067F00F81380
EB01C012F014E0A51270A3003813C0A238180380001C1300EA0C06EA070CEA01F013227E
A018>54 D<EA01F0EA060C487EEA1807383803801270A238F001C0A314E0A51270130312
38EA1805120CEA0619EA03E1380001C0A3EB0380A21230387807001306EA700CEA20186C
5AEA0FC013227EA018>57 D<B612C0380F80070007130114001540A215601520A3142015
00A3146014E013FF138014601420A491C7FCA9487EEAFFFE1B227EA120>70
D<903807F00890383C0C18EBE0023901C001B839038000F848C71278481438121E15185A
A2007C14081278A200F81400A7EC1FFF0078EB00F81578127C123CA27EA27E7E6C6C13B8
6C7E3900E0031890383C0C08903807F00020247DA226>I<EAFFFCEA1F806CC7FCB3A214
01A41403A214021406A2141E48137EB512FE18227DA11E>76 D<007FB512F83978078078
0060141800401408A300C0140C00801404A400001400B3A3497E3801FFFE1E227EA123>
84 D<D8FFF0EB7FC0D81F80EB1F006CC7120C7F00071408A26C6C5BA36C6C5BA26D1360
00001440A201785BA2137CD93C01C7FCA2EB1E02A36D5AA2148CEB0788A2EB03D0A214F0
6D5AA26D5AA322237FA125>86 D<EA1FE0EA3038EA780C130EEA30071200A313FFEA07C7
EA1E07123C1278127000F01308A3130FEA7817383C2390380FC1E015157E9418>97
D<120E12FE121E120EAB131FEB61C0EB8060380F0030000E1338143C141C141EA7141C14
3C1438000F1370380C8060EB41C038083F0017237FA21B>I<EA01FEEA0703380C078012
1C383803000078C7FC127012F0A712700078134012386C1380380C0100EA0706EA01F812
157E9416>I<EA01FCEA0707380C0380381C01C01238007813E0EA700012F0B5FC00F0C7
FCA512700078132012386C13406C138038070300EA00FC13157F9416>101
D<14703803F198380E1E18EA1C0E38380700A200781380A400381300A2EA1C0EEA1E1CEA
33F00020C7FCA212301238EA3FFE381FFFC06C13E0383000F0481330481318A400601330
A2003813E0380E03803803FE0015217F9518>103 D<120E12FE121E120EABEB1F80EB60
C0EB80E0380F0070A2120EAF38FFE7FF18237FA21B>I<120E12FE121E120EABEB03FCEB
01F014C01480EB02005B5B5B133813F8EA0F1CEA0E1E130E7F1480EB03C0130114E0EB00
F014F838FFE3FE17237FA21A>107 D<380E1F8038FE60C0381E80E0380F0070A2120EAF
38FFE7FF18157F941B>110 D<EA01FCEA0707380C0180381800C0003813E0481370A200
F01378A700701370007813F0003813E0381C01C0380E038038070700EA01FC15157F9418
>I<EA0E3CEAFE46EA1E8FEA0F0F13061300120EAD120FEAFFF010157F9413>114
D<EA0F88EA3078EA601812C01308A212E0EAF000127FEA3FE0EA0FF0EA01F8EA003CEA80
1C130CA212C01308EAE018EAD030EA8FC00E157E9413>I<000E137038FE07F0EA1E0000
0E1370AD14F0A238060170380382783800FC7F18157F941B>117
D<38FF80FE381E00781430000E1320A26C1340A2EB80C000031380A23801C100A2EA00E2
A31374A21338A31310A25BA35B12F05B12F10043C7FC123C171F7F941A>121
D E /Fw 1 4 df<13C0A538E0C1C0EAF0C33838C700EA0EDCEA03F0EA00C0EA03F0EA0E
DCEA38C738F0C3C0EAE0C13800C000A512157D9619>3 D E /Fx
28 122 df<D901FEEB7F80903A070181C060903A1C004700100178013E7F4901FC133C49
4848137C1201D803C05B0200143894C7FCAAB812FCA23B03C000F0007C173CB3A7486C48
6C137E3C7FFE1FFF87FFE0A233327FB136>14 D<127812FCA412781200B3127812FCA412
78061F7A9E12>58 D<B612E015FC3907E0007F0003EC0F80ED03C06F7E6F7E16788282A2
82A21780160717C0A21603A217E0AB17C0A21607A21780A2160F17005E161E5E5E16F84B
5A4B5AED0F800007023FC7FCB612FC15E02B317CB033>68 D<B712F0A23907E000070003
1400167816381618A21608A41604A315401600A415C0A2140390B5FCA2EBE0031400A215
40A31601A215001602A41606A21604160CA2161C163C16FC0007EC07F8B7FCA228317DB0
2D>I<B712E0A23907E0000F00031401ED00F016701630A21610A41608A315401600A415
C0A2140390B5FCA2EBE0031400A21540A592C7FCAD487EB512C0A225317DB02B>I<B539
807FFFC0A23B07F00003F8006C486D5AB3A290B6FCA29038E00001B3A3486C497EB53980
7FFFC0A22A317CB032>72 D<B51280A23807F0006C5AB3B3A7487EB51280A211317DB017
>I<90387F80203801FFE03907C07860380F001C001EEB06E04813030038130100781300
1270156012F0A21520A37E1500127C127E7E13C0EA1FF86CB47E6C13F06C13FCC613FF01
0F1380010013C0EC1FE01407EC03F01401140015F8A26C1478A57E15706C14F015E07E6C
EB01C000ECEB038000C7EB070038C1F01E38807FFCEB0FF01D337CB125>83
D<007FB712E0A23A7E000F800700781501007015000060166000401620A200C01630A248
1610A6C71500B3AC4A7E010FB57EA22C317EB030>I<D8FFFE903B3FFF8001FFC0A2D80F
E0D903F8C7EA7E006C480101151C19186C6C01001510A2826C6C5FA36DEB013E000060A2
ED021F017C5FA24B6C7E6D4CC7FCA217C06DD908071302A3913A801003E006010F1604A2
9139C02001F001075EA292384000F8D903E05DA203C013FC6D6C48EB7C20A2177E02F9C7
EA3E6001001640A202FE141F027E5DA2027C140F023C92C8FCA202388002181406A34232
7FB044>87 D<13FE380303C0380C00E00010137080003C133C003E131C141EA21208C7FC
A3EB0FFEEBFC1EEA03E0EA0F80EA1F00123E123C127C481404A3143EA21278007C135E6C
EB8F08390F0307F03903FC03E01E1F7D9E21>97 D<EB1FC0EBF0303801C00C38078002EA
0F00000E130F001E5B5AA2007C1304007890C7FC12F8A91278127C123C15807E000EEB01
00120F380780023801C00C3800F030EB1FC0191F7E9E1D>99 D<15F0141FA214011400AF
EB0FC0EB70303801C00C3803800238070001120E001E13005AA2127C1278A212F8A71278
A2127C123CA27E000E13016C1302380380046C6C487E3A00F030FF80EB1FC021327EB125
>I<EB3F80EBE0E0380380383807003C000E7F121E001C7F123C127C00781480140712F8
A2B6FC00F8C8FCA61278127C123C15807E000EEB0100000F13027E3801C00C3800F030EB
1FC0191F7E9E1D>I<EB07E0EB1C10EB3838EB707C13E01201EBC03800031300ACB512C0
A23803C000B3A8487EEA7FFFA216327FB114>I<15F090387F03083901C1C41C380380E8
390700700848EB7800001E7FA2003E133EA6001E133CA26C5B6C13706D5A3809C1C0D808
7FC7FC0018C8FCA5121C7E380FFFF86C13FF6C1480390E000FC00018EB01E048EB00F000
701470481438A500701470A26C14E06CEB01C00007EB07003801C01C38003FE01E2F7E9F
21>I<EA078012FFA2120F1207AF14FE903883078090388C03C090389001E013A06E7E13
C0A25BB3A2486C487E3AFFFC1FFF80A221327EB125>I<120FEA1F80A4EA0F00C7FCABEA
0780127FA2120F1207B3A6EA0FC0EAFFF8A20D307EAF12>I<EA078012FFA2120F1207B3
B3A7EA0FC0EAFFFCA20E327EB112>108 D<260780FEEB1FC03BFF83078060F0903A8C03
C180783B0F9001E2003CD807A013E4DA00F47F01C013F8A2495BB3A2486C486C133F3CFF
FC1FFF83FFF0A2341F7E9E38>I<380780FE39FF83078090388C03C0390F9001E0EA07A0
6E7E13C0A25BB3A2486C487E3AFFFC1FFF80A2211F7E9E25>I<EB1FC0EBF0783801C01C
38070007481480001EEB03C0001C1301003C14E0A248EB00F0A300F814F8A8007814F000
7C1301003C14E0A26CEB03C0A26CEB07803907800F003801C01C3800F078EB1FC01D1F7E
9E21>I<380781FC39FF86078090388801C0390F9000E0D807A0137001C01378497F153E
151E151FA2811680A716005DA2151E153E153C6D5B01A013705D90389803C0D9860FC7FC
EB81F80180C8FCAB487EEAFFFCA2212D7E9E25>I<380783E038FF8418EB887CEA0F90EA
07A01438EBC000A35BB3487EEAFFFEA2161F7E9E19>114 D<3801FC10380E0330381800
F048137048133012E01410A37E6C1300127EEA3FF06CB4FC6C13C0000313E038003FF0EB
01F813006C133CA2141C7EA27E14186C1338143000CC136038C301C03880FE00161F7E9E
1A>I<1340A513C0A31201A212031207120F381FFFE0B5FC3803C000B01410A800011320
13E000001340EB78C0EB1F00142C7FAB19>I<D8078013F000FF131FA2000F1301000713
00B31401A300031302EBC0040001497E3A007030FF80EB1FC0211F7E9E25>I<D8FFF8EB
FF80A2D80FC0EB7C006C48133815306C6C1320A26C6C5BA27F00005CA2D97801C7FCA213
7CEB3C02A26D5AA2131F6D5AA2EB0790A214D0EB03E0A26D5AA36D5AA249C8FCA31302A2
5B1270EAF80C13085BEA7020EA3040EA1F80212D7F9E23>121 D
E /Fy 85 125 df<90381F83E09038F06E303901C07878380380F8903800F03048EB7000
A7B612803907007000B2383FE3FF1D20809F1B>11 D<133FEBE0C0EA01C0380381E0EA07
01A290C7FCA6B512E0EA0700B2383FC3FC1620809F19>I<EB3FE013E0EA01C1EA0381EA
0700A8B5FCEA0700B2383FE7FC1620809F19>I<90381F81F89038F04F043901C07C0639
0380F80FEB00F05A0270C7FCA6B7FC3907007007B23A3FE3FE3FE02320809F26>I<EA70
38EAF87CEAFC7EA2EA743AEA0402A3EA0804A2EA1008A2EA2010EA40200F0E7F9F17>34
D<D807801318EA1840486C5B011813E03960170360903808FCC000E0EB0180A24AC7FC14
06A25C00605B131000305B495AEA1840380780C03900018078EC8184903803030281EB06
07EB0C0691380E008013181330A2136013C0A23A01800601003803000714030006140248
EB01840004EB007821257EA126>37 D<127012F812FCA212741204A31208A21210A21220
1240060E7C9F0D>39 D<13401380EA01005A12061204120C5AA212381230A212701260A4
12E0AC1260A412701230A212381218A27E120412067E7EEA008013400A2E7BA112>I<7E
12407E12307E1208120C7EA212077EA213801201A413C0AC1380A412031300A25A1206A2
5A120812185A12205A5A0A2E7EA112>I<EA0180A5EAE187EA718EEA399CEA0FF0EA03C0
A2EA0FF0EA399CEA718EEAE187EA0180A510147DA117>I<1303AFB612FCA2D80003C7FC
AF1E207E9A23>I<127012F012F8A212781208A31210A31220A21240050E7C840D>I<EAFF
F0A20C02808A0F>I<127012F8A3127005057C840D>I<144014C0EB0180A3EB0300A31306
A25BA35BA35BA25BA35BA3485AA348C7FCA21206A35AA35AA25AA35AA35AA2122D7EA117
>I<EA03F0EA0E1C487EEA1806EA380738700380A400F013C0AD00701380A3EA78070038
1300EA1806EA1C0E6C5AEA03F0121F7E9D17>I<13801203120F12F31203B3A6EA07C0EA
FFFE0F1E7C9D17>I<EA03F0EA0C1CEA100E487E00401380128000F013C0EAF803A3EA20
0712001480A2EB0F00130E5B5B5B13605B485A48C7FC000613405A5A00101380EA3FFF5A
B5FC121E7E9D17>I<EA03F0EA0C1CEA100EEA200F007813801307A2EA380F12001400A2
131E131C1370EA07F0EA003C130E130FEB0780A214C0122012F8A300F013801240EB0F00
EA200EEA183CEA07F0121F7E9D17>I<1306A2130EA2131E132EA2134E138EA2EA010E12
02A212041208A212101220A2124012C0B512F038000E00A7EBFFE0141E7F9D17>I<EA18
03EA1FFE5B5B13E00010C7FCA6EA11F0EA161CEA180EEA10071480EA0003A214C0A31270
12F0A200E013801240EB0700EA20066C5AEA0838EA07E0121F7E9D17>I<137CEA0182EA
0701380E0380EA0C0712183838030090C7FC12781270A2EAF1F0EAF21CEAF406EAF807EB
0380A200F013C0A51270A214801238EB07001218EA0C0E6C5AEA01F0121F7E9D17>I<12
40387FFFE014C0A23840008038800100A21302485AA25B5BA25BA21360A213E05B1201A4
1203A76C5A131F7E9D17>I<EA03F0EA0C0CEA1006EA3003382001801260A31270387803
00123EEA3F06EA1FC8EA0FF0EA03F8487EEA0C7EEA103F38300F80EA6007EB01C012C013
00A31480EA600100201300EA1002EA0C0CEA03F0121F7E9D17>I<EA03F0EA0E18487E48
7E13071270EB038012F0A214C0A5EA7007A21238EA180BEA0E13EA03E338000380A3EB07
001230EA7806130EEA700CEA2018EA1070EA0FC0121F7E9D17>I<127012F8A312701200
AA127012F8A3127005147C930D>I<127012F8A312701200AA127012F012F8A212781208
A31210A31220A21240051D7C930D>I<007FB512F8B612FCC9FCA8B612FC6C14F81E0C7E
9023>61 D<EA0FE0EA103CEA601EEA400EEAE00F12F0A21260EA001E131C133813701360
13C01380A2EA0100A6C7FCA5EA0380EA07C0A3EA038010207E9F15>63
D<5B497EA3497EA3EB09E0A3EB10F0A3EB2078A3497EA2EBC03EEB801EA248B5FCEB000F
A20002EB0780A348EB03C0A2120C001E14E039FF801FFE1F207F9F22>65
D<B512E0380F0078141EA2801580A515005C141E147CEBFFF0EB007C141FEC0F80EC07C0
140315E0A515C014071580EC0F00143EB512F01B1F7E9E20>I<90380FE0109038381C30
9038E002703803C00139078000F048C71270121E15305A1510127C127800F81400A91278
007C1410123CA26C1420A27E6C6C13406C6C13803900E00300EB380CEB0FF01C217E9F21
>I<B512F83807801EEC0780EC03C0EC01E0EC00F015701578A2153CA3153EA8153CA215
7C1578A215F0EC01E0EC03C0EC0780EC1E00B512F81F1F7F9E23>I<B61280380F000F14
031401140015C01540A314401500A214C0130113FF130113001440A3EC0020A31540A315
C01401EC0380140FB6FC1B1F7E9E1F>I<B61280380780071401A2140015C01540A4EC20
00A3146014E013FF138014601420A391C7FCA87FEAFFFE1A1F7F9E1E>I<90380FE01090
38381C309038E002703803C00139078000F048C71270121E15305A1510127C127800F814
00A7EC3FFEEC01F000781300127C123CA27EA27E6C7E3903C001703900E002309038380C
1090380FF0001F217E9F24>I<39FFF07FF8390F000780AD90B5FCEB0007AF39FFF07FF8
1D1F7E9E22>I<EAFFF0EA0F00B3ABEAFFF00C1F7E9E10>I<3807FFC038003E00131EB3A3
122012F8A3EAF01CEA403CEA6038EA1070EA0FC012207F9E17>I<39FFF007FC390F0003
E0EC0180150014025C5C5C5C5C5C49C7FC5B497E130FEB13C0EB21E01341EB80F0EB0078
A28080A280EC0780A2EC03C015E015F039FFF01FFE1F1F7E9E23>I<EAFFF8EA0F8090C7
FCB21402A414061404A2140C141C147CB512FC171F7E9E1C>I<B46CEB07FE000715C0A2
D805C0130BA2D804E01313A301701323A26D1343A36D1383A290380E0103A3EB0702A3EB
0384A2EB01C8A3EB00F0A21460121FD8FFE0EB7FFE271F7F9E2A>I<B4EB0FF8390F8003
E0EC0080EA0BC0EA09E0A2EA08F01378A27F7FA27FEB0780A2EB03C0EB01E0A2EB00F014
78A2143C141EA2140F1407A214031401123E38FF80001D1F7E9E22>I<EB1FE0EB703838
01C00E48487E39070003804814C0001EEB01E048EB00F0A2007C14F8A20078147800F814
7CA900781478007C14F8A2003C14F0003E1301001E14E06CEB03C06C1480390380070038
01E01E38007038EB1FE01E217E9F23>I<B512E0380F007C141E80EC0780A215C0A41580
A2EC0F00141E147CEBFFE090C8FCAEEAFFF01A1F7E9E1F>I<B57E380F00F0143C8080A2
1580A41500A2141E5C14F0EBFF80EB01C0EB0070A280143CA3143EA31504143F141FEC0F
0839FFF00788C7EA01F01E207E9E21>82 D<3803F040380C0CC0EA1803EA3001EA6000A2
12E01440A36C13007E127CEA7F80EA3FF86CB4FC00071380C613C0EB1FE013031301EB00
F014707EA46C136014E06C13C038F8018038C60300EA81FC14217E9F19>I<007FB512E0
38780F010060EB006000401420A200C0143000801410A400001400B3497E3803FFFC1C1F
7E9E21>I<39FFF00FF8390F0003E0EC0080B3A46CEB01001380120314026C6C5A6C6C5A
EB3830EB0FC01D207E9E22>I<39FFF003FE391F8000F86CC7126015206C6C1340A36C6C
1380A2EBE00100011400A23800F002A213F8EB7804A26D5AA36D5AA2131F6D5AA2EB07C0
A36D5AA36DC7FC1F207F9E22>I<3BFFF07FF81FF03B1F000FC007C06C90390780018017
0015C001805C00071502EC09E013C000035DEC19F01410D801E05CA2EC2078D800F05CA2
EC403C01785CA2EC801E017C1460013C144090383D000F133F6D5CA2011E1307010E91C7
FCA2010C7F010413022C207F9E2F>I<397FF81FF8390FE007C03907C0030000031302EB
E0063801F00400005BEBF818EB78106D5AEB3E60EB1E406D5AA213076D7E497E1305EB08
F0EB18F8EB1078EB207CEB603EEB401EEB801F3901000F801407000214C000061303001F
EB07E039FFC01FFE1F1F7F9E22>I<39FFF001FF391F800078000F146012076D13400003
14807F3901F001001200EBF802EB7C06EB3C04EB3E08131EEB1F10EB0FB0EB07A014E06D
5AACEB3FFC201F7F9E22>I<387FFFFE387E003C127800701378006013F814F0384001E0
130314C0EB07801200EB0F00131EA25B137C13785B1201EBE002EA03C0A2EA0780000F13
061300001E1304003E130C123C48133C14FCB5FC171F7E9E1C>I<12FFA212C0B3B3A512
FFA2082D7CA10D>I<EA0804EA1008EA2010A2EA4020A2EA8040A3EAB85CEAFC7EA2EA7C
3EEA381C0F0E7A9F17>I<12FFA21203B3B3A512FFA2082D80A10D>I<EA1FE0EA3030EA78
18131CEA300E1200A313FEEA078EEA1E0E1238127800F01310A3131E127838386720380F
83C014147E9317>97 D<121C12FC121CAA137CEA1D87381E0180EB00C0001C13E01470A2
1478A6147014F014E0001E13C0381A018038198700EA107C15207E9F19>I<EA01FCEA07
06EA1C0F123813060078C7FC127012F0A61270127800381380A2381C0100EA0706EA01F8
11147F9314>I<EB01C0130F1301AAEA01F1EA070DEA0C03EA180112381278127012F0A6
1270A21238EA1803120CEA070D3801F1F815207F9F19>I<EA03F0EA0E1C487E487EA212
70EB038012F0A2B5FC00F0C7FCA31270A26C1380A2381C0100EA0706EA01F811147F9314
>I<137CEA01C6EA030F1207EA0E061300A7EAFFF0EA0E00B2EA7FE01020809F0E>I<14E0
3803E330EA0E3CEA1C1C38380E00EA780FA5EA380E6C5AEA1E38EA33E00020C7FCA21230
A2EA3FFE381FFF8014C0383001E038600070481330A4006013606C13C0381C03803803FC
00141F7F9417>I<121C12FC121CAA137C1386EA1D03001E1380A2121CAE38FF8FF01420
7E9F19>I<1238127CA31238C7FCA6121C12FC121CB1EAFF80091F7F9E0C>I<13E0EA01F0
A3EA00E01300A61370EA07F012001370B3A31260EAF06013C0EA6180EA3F000C28829E0E
>I<121C12FC121CAAEB1FE0EB0780EB060013045B5B5B136013E0EA1DF0EA1E70EA1C38
133C131C7F130F7F148014C038FF9FF014207E9F18>I<121C12FC121CB3ABEAFF800920
7F9F0C>I<391C3E03E039FCC30C30391D039038391E01E01CA2001C13C0AE3AFF8FF8FF
8021147E9326>I<EA1C7CEAFC86EA1D03001E1380A2121CAE38FF8FF014147E9319>I<EA
01F8EA070E381C0380383801C0A2387000E0A200F013F0A6007013E0A2383801C0A2381C
038038070E00EA01F814147F9317>I<EA1C7CEAFD87381E018014C0381C00E014F01470
1478A6147014F014E0381E01C0EB0380381D8700EA1C7C90C7FCA8B47E151D7E9319>I<
3801F04038070CC0EA0E02EA1C03EA38011278127012F0A6127012781238EA1C03EA0C05
EA0709EA01F1EA0001A8EB0FF8151D7F9318>I<EA1CF0EAFD18EA1E3CA21318EA1C00AE
EAFFC00E147E9312>I<EA0FC8EA3038EA6018EAC008A3EAE000127CEA3FE0EA1FF0EA07
F8EA003CEA800E130612C0A21304EAE00CEAD818EA87E00F147F9312>I<1202A31206A2
120EA2123EEAFFF8EA0E00AB1304A5EA07081203EA01F00E1C7F9B12>I<381C0380EAFC
1FEA1C03AE1307120CEA061B3803E3F014147E9319>I<38FF83F8383E00E0001C13C06C
1380A338070100A21383EA0382A2EA01C4A213E4EA00E8A21370A3132015147F9318>I<
39FF9FE1FC393C078070391C030060EC8020000E1440A214C0D80704138014E0A2390388
61001471A23801D032143A143E3800E01CA2EB6018EB40081E147F9321>I<38FF87F838
1E03C0380E0180EB0300EA0702EA0384EA01C813D8EA00F01370137813F8139CEA010E12
02EA060738040380000C13C0003C13E038FE07FC16147F9318>I<38FF83F8383E00E000
1C13C06C1380A338070100A21383EA0382A2EA01C4A213E4EA00E8A21370A31320A25BA3
EAF080A200F1C7FC1262123C151D7F9318>I<EA7FFFEA700E1260EA401C133813781370
EA00E0120113C0EA038012071301120E121EEA1C03EA3802EA7006130EEAFFFE10147F93
14>I<B512FC1601808C17>I<B812F02C01808C2D>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 1867 60 a Fy(1)238 288 y Fx(Hashed)21 b(and)f(Hierarc)n(hical)i
(Timing)f(Wheels:)29 b(E\016cien)n(t)230 379 y(Data)21
b(Structures)i(for)e(Implemen)n(ting)g(a)g(Timer)h(F)-6
b(acilit)n(y)1690 353 y Fw(\003)474 529 y Fv(George)17
b(V)l(arghese)830 512 y Fu(y)1025 529 y Fv(T)l(on)o(y)f(Lauc)o(k)1276
512 y Fu(z)768 657 y Fv(F)l(ebruary)g(14,)g(1996)869
900 y Ft(Abstract)206 988 y Fs(Con)o(v)o(en)o(tional)e(algorithms)g(to)
i(implemen)o(t)e(an)h(Op)q(erating)i(System)f(timer)f(mo)q(dule)f(tak)o
(e)i Fr(O)q Fs(\()p Fr(n)p Fs(\))144 1038 y(time)f(to)i(start)h(or)f
(main)o(tain)d(a)j(timer,)f(where)j Fr(n)e Fs(is)f(the)i(n)o(um)o(b)q
(er)e(of)h(outstanding)g(timers:)23 b(this)17 b(is)144
1088 y(exp)q(ensiv)o(e)e(for)e(large)g Fr(n)p Fs(.)18
b(This)c(pap)q(er)h(sho)o(ws)f(that)f(b)o(y)h(using)g(a)f(circular)h
(bu\013er)h(or)f(timing)d(wheel,)j(it)144 1137 y(tak)o(es)i
Fr(O)q Fs(\(1\))h(time)e(to)h(start,)h(stop,)g(and)f(main)o(tain)d
(timers)j(within)g(the)h(range)f(of)g(the)h(wheel.)26
b(Tw)o(o)144 1187 y(extensions)18 b(for)e(larger)h(v)n(alues)g(of)f
(the)i(in)o(terv)n(al)e(are)i(describ)q(ed.)29 b(In)17
b(the)h(\014rst,)g(the)f(timer)f(in)o(terv)n(al)144 1237
y(is)i(hashed)h(in)o(to)f(a)g(slot)g(on)g(the)h(timing)d(wheel.)32
b(In)18 b(the)h(second,)h(a)e(hierarc)o(h)o(y)h(of)f(timing)e(wheels)
144 1287 y(with)f(di\013eren)o(t)h(gran)o(ularities)f(is)g(used)h(to)g
(span)f(a)g(greater)i(range)f(of)e(in)o(terv)n(als.)23
b(The)15 b(p)q(erformance)144 1337 y(of)h(these)i(t)o(w)o(o)e(sc)o
(hemes)h(and)g(v)n(arious)f(implem)o(en)o(tation)e(tradeo\013s)j(are)h
(discussed.)28 b(W)m(e)16 b(ha)o(v)o(e)g(used)144 1386
y(one)i(of)g(our)g(sc)o(hemes)h(to)f(replace)i(the)f(curren)o(t)g(BSD)g
(UNIX)f(callout)g(and)g(timer)f(facilities.)31 b(Our)144
1436 y(new)12 b(implemen)o(tation)d(can)k(supp)q(ort)g(thousands)g(of)f
(outstanding)g(timers)f(without)h(m)o(uc)o(h)f(o)o(v)o(erhead.)144
1486 y(Our)17 b(timer)f(sc)o(hemes)h(ha)o(v)o(e)f(also)g(b)q(een)i
(implemen)o(ted)d(in)h(other)h(op)q(erating)g(systems)g(and)f(net)o(w)o
(ork)144 1536 y(proto)q(col)d(pac)o(k)n(ages.)30 1704
y Fq(1)67 b(In)n(tro)r(duction)30 1830 y Fy(In)16 b(a)f(cen)o(tralized)
h(or)f(distributed)i(op)q(erating)e(system,)g(w)o(e)f(need)j(timers)e
(for:)98 1949 y Fp(\017)23 b Fy(F)l(ailure)14 b(Reco)o(v)o(ery:)19
b(Sev)o(eral)14 b(kinds)g(of)f(failures)h(cannot)f(b)q(e)h(detected)g
(async)o(hronously)l(.)20 b(Some)13 b(can)144 2006 y(b)q(e)e(detected)h
(b)o(y)f(p)q(erio)q(dic)i(c)o(hec)o(king)f(\(e.g.)17
b(memory)11 b(corruption\))g(and)g(suc)o(h)g(timers)g(alw)o(a)o(ys)f
(expire.)144 2062 y(Other)16 b(failures)h(can)f(b)q(e)g(only)g(b)q(e)h
(inferred)g(b)o(y)f(the)g(lac)o(k)g(of)f(some)h(p)q(ositiv)o(e)g
(action)g(\(e.g.)21 b(message)144 2119 y(ac)o(kno)o(wledgmen)o(t\))14
b(within)j(a)d(sp)q(eci\014ed)k(p)q(erio)q(d.)j(If)15
b(failures)h(are)f(infrequen)o(t)h(these)g(timers)f(rarely)144
2175 y(expire.)p 30 2215 744 2 v 81 2241 a Fo(\003)99
2257 y Fn(A)j(preliminary)k(v)o(ersion)e(of)e(this)i(pap)q(er)f(app)q
(eared)h(in)g(the)e(Pro)q(c.)34 b(of)19 b(the)g(11th)g(Symp.)34
b(on)19 b(Op)q(erating)h(Systems)30 2303 y(Principles,)c(1987.)83
2334 y Fo(y)99 2350 y Fn(W)m(ashington)g(Univ)o(ersit)o(y)e(in)g(St.)j
(Louis,)d(w)o(ork)f(done)h(while)g(at)f(Digital)i(Equipmen)o(t)g(Corp)q
(oration.)83 2381 y Fo(z)99 2397 y Fn(W)m(ork)f(done)f(while)i(at)e
(Digital)i(Equipmen)o(t)g(Corp)q(oration.)p eop
%%Page: 2 2
2 1 bop 98 106 a Fp(\017)23 b Fy(Algorithms)c(in)h(whic)o(h)g(the)f
(notion)g(of)g(time)g(or)g(relativ)o(e)g(time)h(is)f(in)o(tegral:)28
b(Examples)20 b(include)144 162 y(algorithms)12 b(that)h(con)o(trol)f
(the)h(rate)f(of)h(pro)q(duction)h(of)e(some)h(en)o(tit)o(y)g(\(pro)q
(cess)f(con)o(trol,)h(rate-based)144 219 y(\015o)o(w)e(con)o(trol)h(in)
i(comm)o(unications\),)e(sc)o(heduling)j(algorithms,)d(and)h
(algorithms)f(to)f(con)o(trol)h(pac)o(k)o(et)144 275
y(lifetimes)k(in)g(computer)g(net)o(w)o(orks.)i(These)e(timers)f
(almost)g(alw)o(a)o(ys)f(expire.)101 394 y(The)i(p)q(erformance)h(of)f
(algorithms)h(to)f(implemen)o(t)h(a)g(timer)f(mo)q(dule)i(b)q(ecomes)f
(an)g(issue)g(when)g(an)o(y)30 450 y(of)e(the)g(follo)o(wing)h(are)f
(true:)98 569 y Fp(\017)23 b Fy(The)17 b(algorithm)f(is)i(implemen)o
(ted)g(b)o(y)f(a)g(pro)q(cessor)f(that)g(is)i(in)o(terrupted)f(eac)o(h)
g(time)g(a)g(hardw)o(are)144 625 y(clo)q(c)o(k)f(tic)o(ks,)e(and)i(the)
f(in)o(terrupt)h(o)o(v)o(erhead)e(is)i(substan)o(tial.)98
719 y Fp(\017)23 b Fy(Fine)16 b(gran)o(ularit)o(y)e(timers)i(are)f
(required.)98 813 y Fp(\017)23 b Fy(The)15 b(a)o(v)o(erage)f(n)o(um)o
(b)q(er)i(of)e(outstanding)i(timers)f(is)h(large.)101
932 y(If)d(the)g(hardw)o(are)g(clo)q(c)o(k)h(in)o(terrupts)f(the)g
(host)g(ev)o(ery)g(tic)o(k,)g(and)h(the)f(in)o(terv)m(al)h(b)q(et)o(w)o
(een)g(tic)o(ks)f(is)h(in)g(the)30 988 y(order)e(of)g(microseconds,)h
(then)g(the)g(in)o(terrupt)f(o)o(v)o(erhead)g(is)h(substan)o(tial.)20
b(Most)11 b(host)h(op)q(erating)g(systems)30 1045 y(o\013er)i(timers)i
(of)f(coarse)f(\(milliseconds)k(or)d(seconds\))g(gran)o(ularit)o(y)l(.)
20 b(Alternately)l(,)c(in)g(some)f(systems)f(\014ner)30
1101 y(gran)o(ularit)o(y)i(timers)h(reside)h(in)f(sp)q(ecial)h(purp)q
(ose)g(hardw)o(are.)23 b(In)17 b(either)h(case,)e(the)h(p)q(erformance)
g(of)f(the)30 1158 y(timer)d(algorithms)f(will)i(b)q(e)f(an)g(issue)g
(as)f(they)h(determine)h(the)e(latency)h(incurred)h(in)g(starting)e(or)
g(stopping)30 1214 y(a)j(timer)g(and)h(the)f(n)o(um)o(b)q(er)g(of)g
(timers)g(that)g(can)g(b)q(e)h(sim)o(ultaneously)h(outstanding.)101
1295 y(As)d(an)h(example,)g(consider)h(comm)o(unications)f(b)q(et)o(w)o
(een)g(mem)o(b)q(ers)g(of)f(a)g(distributed)i(system.)j(Since)30
1352 y(messages)g(can)h(b)q(e)g(lost)f(in)i(the)e(underlying)j(net)o(w)
o(ork,)d(timers)h(are)f(needed)i(at)d(some)i(lev)o(el)h(to)d(trigger)30
1408 y(retransmissions.)i(A)13 b(host)g(in)h(a)f(distributed)i(system)e
(can)h(ha)o(v)o(e)f(sev)o(eral)h(timers)f(outstanding.)19
b(Consider)30 1465 y(for)c(example)i(a)f(serv)o(er)f(with)h(200)f
(connections)i(and)f(3)g(timers)g(p)q(er)g(connection.)23
b(F)l(urther,)16 b(as)f(net)o(w)o(orks)30 1521 y(scale)h(to)f(Gigabit)g
(sp)q(eeds,)h(b)q(oth)f(the)h(required)g(resolution)g(and)g(the)f(rate)
g(at)f(whic)o(h)i(timers)g(are)f(started)30 1578 y(and)g(stopp)q(ed)h
(will)g(increase.)21 b(Sev)o(eral)15 b(recen)o(t)h(net)o(w)o(ork)d
(implemen)o(tations)k(\(e.g.,)c([6)o(]\))i(ha)o(v)o(e)f(b)q(een)i
(tuned)30 1634 y(to)f(send)g(pac)o(k)o(ets)g(at)g(a)f(rate)h(of)g
(25,000{40,00)o(0)d(pac)o(k)o(ets)j(p)q(er)g(second.)101
1715 y(Some)i(net)o(w)o(ork)g(implemen)o(tations)i(\(e.g.,)e(the)h(BSD)
g(TCP)g(implemen)o(tation\))h(do)f(not)f(use)h(a)g(timer)30
1772 y(p)q(er)g(pac)o(k)o(et;)f(instead,)h(only)g(a)e(few)i(timers)f
(are)g(used)g(for)g(the)g(en)o(tire)h(net)o(w)o(orking)f(pac)o(k)m
(age.)25 b(The)18 b(BSD)30 1828 y(TCP)e(implemen)o(tation)h(gets)f(a)o
(w)o(a)o(y)f(with)h(t)o(w)o(o)f(timers)i(b)q(ecause)g(the)f(TCP)g
(implemen)o(tation)i(main)o(tains)30 1885 y(its)h(o)o(wn)g(timers)g
(for)g(all)h(outstanding)f(pac)o(k)o(ets,)h(and)f(uses)h(a)f(single)h
(k)o(ernel)g(timer)f(as)g(a)g(clo)q(c)o(k)h(to)f(run)30
1941 y(its)d(o)o(wn)f(timers.)22 b(TCP)15 b(main)o(tains)h(its)g(pac)o
(k)o(et)f(timers)h(in)h(the)f(simplest)g(fashion:)22
b(Whenev)o(er)16 b(its)g(single)30 1998 y(k)o(ernel)k(timer)f(expires,)
h(it)f(tic)o(ks)g(a)o(w)o(a)o(y)f(at)g(all)i(its)f(outstanding)g(pac)o
(k)o(et)f(timers.)31 b(F)l(or)18 b(example,)i(man)o(y)30
2054 y(TCP)15 b(implemen)o(tations)h(use)g(t)o(w)o(o)e(timers:)20
b(a)14 b(200)h(msec)g(timer)g(and)h(a)f(500)f(msec)h(timer.)101
2136 y(The)h(naiv)o(e)h(metho)q(d)g(w)o(orks)e(reasonably)i(w)o(ell)g
(if)g(the)f(gran)o(ularit)o(y)g(of)g(timers)h(is)g(lo)o(w)f(and)h
(losses)f(are)30 2192 y(rare.)28 b(Ho)o(w)o(ev)o(er,)17
b(it)h(is)g(desirable)i(to)d(impro)o(v)o(e)h(the)g(resolution)h(of)e
(the)h(retransmission)g(timer)g(to)g(allo)o(w)30 2248
y(sp)q(eedier)j(reco)o(v)o(ery)l(.)34 b(F)l(or)19 b(example,)i(the)f
(Univ)o(ersit)o(y)h(of)e(Arizona)h(has)g(a)f(new)h(TCP)g(implemen)o
(tation)30 2305 y(called)g(TCP)e(V)l(egas[4])g(that)g(p)q(erforms)g(b)q
(etter)h(than)f(the)h(commonly)g(used)g(TCP)f(Reno.)31
b(One)20 b(of)e(the)30 2361 y(reasons)d(TCP)g(Reno)h(has)g(bad)g(p)q
(erformance)f(when)h(exp)q(eriencing)i(losses)e(is)g(the)g(coarse)f
(gran)o(ularit)o(y)g(of)30 2418 y(the)g(timeouts.)949
2585 y(2)p eop
%%Page: 3 3
3 2 bop 101 106 a Fy(Besides)17 b(faster)e(error)h(reco)o(v)o(ery)l(,)f
(\014ne)i(gran)o(ularit)o(y)f(timers)g(also)g(allo)o(w)h(net)o(w)o(ork)
e(proto)q(cols)h(to)f(more)30 162 y(accurately)d(measure)g(small)g(in)o
(terv)m(als)h(of)e(time.)19 b(F)l(or)11 b(example,)i(accurate)e
(estimates)h(of)f(round-trip)h(dela)o(y)30 219 y(are)j(imp)q(ortan)o(t)
g(for)g(the)h(TCP)f(congestion)h(con)o(trol)f(algorithm)h([14)o(])f
(and)h(the)g(SRM)f(\(Scalable)i(Reliable)30 275 y(Multicast\))22
b(framew)o(ork)e([11)o(])i(that)f(is)h(implemen)o(ted)h(in)g(the)f(Wb)g
(conferencing)h(to)q(ol)e([16)o(].)40 b(Finally)l(,)30
331 y(man)o(y)19 b(m)o(ultimedia)i(applications)g(routinely)f(use)g
(timers,)g(and)g(the)f(n)o(um)o(b)q(er)h(of)f(suc)o(h)g(applications)i
(is)30 388 y(increasing.)f(An)13 b(example)g(can)f(b)q(e)h(found)g(in)g
(Siemens')h(CHANNELS)f(run)f(time)h(system)f(for)g(m)o(ultimedia)30
444 y([3)o(])17 b(where)g(eac)o(h)g(audio)g(stream)f(uses)h(a)g(timer)g
(with)g(gran)o(ularit)o(y)f(that)g(lies)j(b)q(et)o(w)o(een)e(10)f(and)h
(20)f(msec.)30 501 y(F)l(or)d(m)o(ultimedia)j(and)e(other)f(real-time)i
(applications,)g(it)g(is)f(imp)q(ortan)o(t)g(to)f(ha)o(v)o(e)g(w)o
(orst-case)g(b)q(ounds)i(on)30 557 y(the)g(pro)q(cessing)h(time)g(to)e
(start)g(and)i(stop)f(timers.)101 633 y(Besides)h(net)o(w)o(orking)f
(applications,)i(pro)q(cess)f(con)o(trol)f(and)h(other)f(real-time)i
(applications)g(will)g(also)30 689 y(b)q(ene\014t)g(from)f(large)g(n)o
(um)o(b)q(ers)g(of)g(\014ne)h(gran)o(ularit)o(y)f(timers.)23
b(Also,)16 b(the)h(n)o(um)o(b)q(er)f(of)g(users)g(on)g(a)g(system)30
746 y(ma)o(y)h(gro)o(w)g(large)h(enough)g(to)f(lead)i(to)e(a)h(large)g
(n)o(um)o(b)q(er)g(of)f(outstanding)h(timers.)28 b(This)19
b(is)f(the)g(reason)30 802 y(cited)e(\(for)d(redesigning)k(the)e(timer)
g(facilit)o(y\))g(b)o(y)g(the)g(dev)o(elop)q(ers)h(of)e(the)h(IBM)g
(VM/XA)f(SP1)h(op)q(erating)30 859 y(system[10)o(].)101
935 y(In)f(the)f(follo)o(wing)h(sections,)g(w)o(e)f(will)i(describ)q(e)
g(a)e(new)h(family)g(of)f(sc)o(hemes)h(for)f(e\016cien)o(t)h(timer)f
(imple-)30 991 y(men)o(tations)g(based)h(on)f(a)g(data)g(structure)g
(called)i(a)f Fm(timing)g(whe)n(el)p Fy(.)19 b(W)l(e)13
b(will)i(also)f(describ)q(e)h(p)q(erformance)30 1048
y(results)20 b(based)f(on)h(a)f(UNIX)h(implemen)o(tation)g(and)g(surv)o
(ey)f(some)g(of)g(the)h(systems)f(that)f(ha)o(v)o(e)h(imple-)30
1104 y(men)o(ted)c(timer)h(pac)o(k)m(ages)f(based)g(on)g(the)h(ideas)g
(in)g(this)f(pap)q(er.)30 1264 y Fq(2)67 b(Mo)r(del)22
b(and)h(P)n(erformance)f(Measures)30 1385 y Fy(Our)16
b(mo)q(del)g(of)e(a)h(timer)h(mo)q(dule)g(has)f(four)g(comp)q(onen)o(t)
g(routines:)101 1460 y Fl(St)m(ar)m(tTimer)o Fy(\(In)o(terv)m(al,)21
b Fm(R)n(e)n(questId)o Fy(,)f Fm(ExpiryA)n(ction)o Fy(\):)27
b(The)20 b(clien)o(t)g(calls)h(this)e(routine)h(to)e(start)g(a)30
1517 y(timer)e(that)g(will)i(expire)f(after)f(\\In)o(terv)m(al")h
(units)g(of)f(time.)23 b(The)17 b(clien)o(t)g(supplies)i(a)d
Fm(R)n(e)n(questId)f Fy(whic)o(h)i(is)30 1573 y(used)g(to)f
(distinguish)i(this)f(timer)g(from)e(other)h(timers)h(that)f(the)g
(clien)o(t)i(has)e(outstanding.)24 b(Finally)l(,)18 b(the)30
1630 y(clien)o(t)f(can)e(sp)q(ecify)i(what)e(action)h(m)o(ust)e(b)q(e)j
(tak)o(en)e(on)g(expiry:)21 b(for)15 b(instance,)h(calling)h(a)e(clien)
o(t-sp)q(eci\014)q(ed)30 1686 y(routine,)g(or)g(setting)g(an)g(ev)o(en)
o(t)g(\015ag.)101 1762 y Fl(StopTimer)p Fy(\()p Fm(R)n(e)n(questId)n
Fy(\):)30 b(This)21 b(routine)f(uses)h(its)f(kno)o(wledge)h(of)e(the)i
(clien)o(t)g(and)f Fm(R)n(e)n(questId)g Fy(to)30 1818
y(lo)q(cate)c(the)f(timer)g(and)h(stop)e(it.)101 1894
y Fl(PerTickBookkeeping)p Fy(:)19 b(Let)c(the)g(gran)o(ularit)o(y)g(of)
f(the)h(timer)g(b)q(e)h(T)e(units.)21 b(Then)15 b(ev)o(ery)g(T)f(units)
30 1951 y(this)k(routine)g(c)o(hec)o(ks)g(whether)f(an)o(y)h
(outstanding)f(timers)h(ha)o(v)o(e)f(expired;)j(if)e(so,)f(it)h(calls)g
Fl(StopTimer)p Fy(,)30 2007 y(whic)o(h)e(in)g(turn)f(calls)h(the)g
(next)f(routine.)101 2083 y Fl(Expir)m(yPr)o(ocessing)o
Fy(:)30 b(This)21 b(routine)g(do)q(es)g(the)f Fm(ExpiryA)n(ction)g
Fy(sp)q(eci\014ed)j(in)e(the)f Fl(St)m(ar)m(tTimer)30
2139 y Fy(call.)101 2215 y(The)15 b(\014rst)g(t)o(w)o(o)f(routines)i
(are)f(activ)m(ated)h(on)g(clien)o(t)g(calls)h(while)g(the)e(last)h(t)o
(w)o(o)e(are)h(in)o(v)o(ok)o(ed)g(on)h(timer)30 2271
y(tic)o(ks.)k(The)15 b(timer)h(is)f(often)g(an)h(external)f(hardw)o
(are)g(clo)q(c)o(k.)101 2347 y(The)h(follo)o(wing)g(t)o(w)o(o)f(p)q
(erformance)h(measures)g(can)g(b)q(e)g(used)h(to)e(c)o(ho)q(ose)h(b)q
(et)o(w)o(een)g(the)g(v)m(arious)g(algo-)30 2404 y(rithms)g(describ)q
(ed)i(in)e(the)g(rest)g(of)f(this)h(pap)q(er.)23 b(Both)15
b(of)h(them)g(are)f(parameterized)i(b)o(y)e Fk(n)p Fy(,)h(the)g(a)o(v)o
(erage)30 2460 y(\(or)e(w)o(orst-case\))g(n)o(um)o(b)q(er)i(of)e
(outstanding)i(timers.)949 2585 y(3)p eop
%%Page: 4 4
4 3 bop 386 62 1149 2 v 385 111 2 50 v 563 97 a Fs(Routine)p
882 111 V 332 w(Critical)14 b(P)o(arameter)p 1534 111
V 386 113 1149 2 v 386 121 V 385 171 2 50 v 513 156 a
Fj(St)m(ar)m(tTimer)p 882 171 V 151 w Fi(L)n(atency)g
Fs(\(a)o(v)o(erage)g(and)g(w)o(orst-case\))p 1534 171
V 386 173 1149 2 v 385 223 2 50 v 523 208 a Fj(StopTimer)p
882 223 V 161 w Fi(L)n(atency)g Fs(\(a)o(v)o(erage)g(and)g(w)o
(orst-case\))p 1534 223 V 386 224 1149 2 v 385 274 2
50 v 411 259 a Fj(PerTickBookkeeping)p 882 274 V 191
w Fi(L)n(atency)g Fs(\(a)o(v)o(erage\))p 1534 274 V 386
276 1149 2 v 385 326 2 50 v 449 311 a Fj(Expir)m(yPr)o(ocessing)p
882 326 V 342 w Fs(None)p 1534 326 V 386 327 1149 2 v
30 405 a Fy(T)l(able)19 b(1:)27 b Fn(An)15 b(example)j(of)d(the)h
(parameters)h(of)e(the)h(timer)h(mo)q(dule)g(that)f(a)g(net)o(w)o
(orking)h(application)i(w)o(ould)e(consider)30 450 y(imp)q(ortan)o(t.)
86 586 y Fy(1.)22 b Fm(Sp)n(ac)n(e)o Fy(:)e(The)15 b(memory)g(required)
h(for)f(the)g(data)f(structures)h(used)h(b)o(y)f(the)g(timer)h(mo)q
(dule.)86 680 y(2.)22 b Fm(L)n(atency)o Fy(:)g(The)17
b(time)f(b)q(et)o(w)o(een)h(the)g(in)o(v)o(oking)g(of)f(a)g(routine)h
(in)g(the)g(timer)f(mo)q(dule)i(and)e(its)h(com-)144
736 y(pletion,)e(assuming)g(that)f(the)h(caller)h(of)e(the)h(routine)g
(blo)q(c)o(ks)h(un)o(til)g(the)f(routine)g(completes.)20
b(Both)144 793 y(the)15 b(a)o(v)o(erage)f(and)h(w)o(orst)f(case)h
(latency)h(are)f(of)g(in)o(terest.)101 924 y(F)l(or)d(example,)i(a)e
(clien)o(t)i(application)h(that)d(implemen)o(ts)i(a)f(transp)q(ort)f
(proto)q(col)h(ma)o(y)f(\014nd)h(that)g(space)30 981
y(is)g(c)o(heap)g(and)g(the)g(critical)i(parameters)c(for)i(eac)o(h)f
(routine)i(in)f(the)g(timer)g(mo)q(dule)h(are)f(as)f(sho)o(wn)h(in)g(T)
l(able)30 1037 y(1.)101 1118 y(The)j(p)q(erformance)g(measures)f(imp)q
(ortan)o(t)h(for)f(the)h(clien)o(t)h(applications)h(should)f(b)q(e)f
(used)h(to)e(c)o(ho)q(ose)30 1175 y(among)f(timer)i(algorithms.)30
1343 y Fq(3)67 b(Curren)n(tly)25 b(Used)c(Timer)i(Sc)n(hemes)30
1469 y Fy(There)15 b(are)g(t)o(w)o(o)f(sc)o(hemes)i(w)o(e)f(kno)o(w)f
(of:)30 1616 y Fh(3.1)56 b(Sc)n(heme)17 b(1)h(|)h(Straigh)n(tforw)n
(ard)30 1727 y Fy(Here)e([22)o(])f Fl(St)m(ar)m(tTimer)g
Fy(\014nds)h(a)f(memory)g(lo)q(cation)h(and)g(sets)f(that)g(lo)q
(cation)h(to)f(the)g(sp)q(eci\014ed)j(timer)30 1783 y(in)o(terv)m(al.)
33 b(Ev)o(ery)19 b(T)g(units,)h Fl(PerTickBookkeeping)g
Fy(will)g(decremen)o(t)g(eac)o(h)f(outstanding)h(timer;)g(if)30
1840 y(an)o(y)15 b(timer)g(b)q(ecomes)h(zero,)f Fl(Expir)m(yPr)o
(ocessing)o Fy(is)h(called.)101 1921 y(This)g(sc)o(heme)g(is)g
(extremely)g(fast)e(for)h(all)i(but)f Fl(PerTickBookkeeping)p
Fy(.)k(It)c(also)g(uses)f(one)h(record)30 1977 y(p)q(er)h(outstanding)f
(timer,)g(the)h(minim)o(um)g(space)g(p)q(ossible.)25
b(Its)16 b(p)q(erformance)g(is)h(summarized)g(in)g(T)l(able)30
2034 y(2.)j(It)15 b(is)h(appropriate)f(if:)98 2153 y
Fp(\017)23 b Fy(there)15 b(are)g(only)h(a)e(few)i(outstanding)f
(timers.)98 2246 y Fp(\017)23 b Fy(most)14 b(timers)h(are)g(stopp)q(ed)
h(within)g(a)f(few)g(tic)o(ks)h(of)e(the)i(clo)q(c)o(k.)98
2340 y Fp(\017)23 b Fl(PerTickBookkeeping)12 b Fy(is)h(done)f(with)h
(suitable)h(p)q(erformance)e(b)o(y)g(sp)q(ecial-purp)q(ose)j(hardw)o
(are.)949 2585 y(4)p eop
%%Page: 5 5
5 4 bop 270 62 1383 2 v 269 111 2 50 v 312 97 a Fs(Sc)o(heme)p
488 111 V 67 w Fj(St)m(ar)m(tTimer)p 782 111 V 99 w(StopTimer)p
1154 111 V 99 w(PerTickBookkeeping)p 1651 111 V 270 113
1383 2 v 270 121 V 269 171 2 50 v 295 156 a Fs(Sc)o(heme)13
b(1)p 488 171 V 129 w(O\(1\))p 782 171 V 247 w(O\(n\))p
1154 171 V 348 w(O\(n\))p 1651 171 V 270 173 1383 2 v
269 223 2 50 v 295 208 a(Sc)o(heme)g(2)p 488 223 V 128
w(O\(n\))p 782 223 V 247 w(O\(1\))p 1154 223 V 350 w(O\(1\))p
1651 223 V 270 224 1383 2 v 269 274 2 50 v 295 259 a(Sc)o(heme)g(3)p
488 274 V 85 w(O\(log\(n\)\))p 782 274 V 85 w(O\(log\(n\)\))h(or)g
(O\(1\))p 1154 274 V 231 w(O\(1\))p 1651 274 V 270 276
1383 2 v 30 353 a Fy(T)l(able)f(2:)18 b Fn(P)o(erformance)10
b(Metrics)i(for)e(three)g(previously)j(used)e(sc)o(hemes.)17
b(Note)10 b(that)g Fg(StopTimer)g Fn(is)h(O\(1\))f(for)g(un)o(balanced)
30 399 y(trees)j(and)h(O\(log\(n\)\))g(for)e(balanced)j(trees;)e
(balanced)i(tree)e(implemen)o(tations)j(ha)o(v)o(e)e(the)f(slo)o(w)o
(est)h Fg(StopTimer)f Fn(b)q(ecause)h(of)30 444 y(the)f(need)h(to)f
(rebalance)h(the)g(tree)f(after)f(a)h(deletion.)101 567
y Fy(Note)k(that)g(instead)h(of)f(doing)h(a)g(Decremen)o(t,)g(w)o(e)f
(can)h(store)f(the)g(absolute)h(time)g(at)f(whic)o(h)i(timers)30
623 y(expire)f(and)g(do)f(a)h(Compare.)25 b(This)18 b(option)g(is)g(v)m
(alid)h(for)e(all)h(timer)g(sc)o(hemes)g(w)o(e)f(describ)q(e;)j(the)d
(c)o(hoice)30 680 y(b)q(et)o(w)o(een)d(them)f(will)i(dep)q(end)g(on)f
(the)f(size)i(of)e(the)g(time-of-da)o(y)h(\014eld,)g(the)g(cost)f(of)g
(eac)o(h)g(instruction,)i(and)30 736 y(the)k(hardw)o(are)e(on)i(the)f
(mac)o(hine)i(implemen)o(ting)g(these)f(algorithms.)30
b(In)19 b(this)g(pap)q(er)g(w)o(e)f(will)i(use)f(the)30
793 y(Decremen)o(t)c(option,)g(except)h(when)f(describing)i(Sc)o(heme)f
(2.)30 935 y Fh(3.2)56 b(Sc)n(heme)17 b(2)h(|)h(Ordered)f(List/Timer)e
(Queues)30 1042 y Fy(Here)h([22)o(])g Fl(PerTickBookkeeping)g
Fy(latency)g(is)g(reduced)h(at)f(the)g(exp)q(ense)h(of)e
Fl(St)m(ar)m(tTimer)h Fy(p)q(erfor-)30 1099 y(mance.)j(Timers)15
b(are)f(stored)h(in)g(an)g(ordered)g(list.)20 b(Unlik)o(e)c(Sc)o(heme)g
(1,)e(w)o(e)g(will)j(store)d(the)h(absolute)g(time)30
1155 y(at)g(whic)o(h)h(the)f(timer)g(expires,)h(and)f(not)g(the)g(in)o
(terv)m(al)i(b)q(efore)e(expiry)l(.)101 1233 y(The)22
b(timer)h(that)f(is)h(due)g(to)f(expire)h(at)f(the)h(earliest)g(time)g
(is)g(stored)f(at)f(the)i(head)g(of)f(the)h(list.)30
1290 y(Subsequen)o(t)16 b(timers)f(are)g(stored)g(in)h(increasing)h
(order)e(as)f(sho)o(wn)h(in)h(Figure)g(1)o(.)283 1345
y
 21379072 2697052 8880537 35259023 30259609 37956075 startTexFig
 283 1345 a
%%BeginDocument: list.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Courier reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.06667 -0 -0 1.67702 185.333 -78.0125 ] concat
%I
42 449 115 475 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 194 233 ] concat
%I
115 469 172 469 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 192 237 ] concat
%I
169 451 114 451 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 328 236 ] concat
%I
115 469 172 469 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 329 235 ] concat
%I
169 451 114 451 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-14-*-*-*-*-*-*-*
Courier 14 SetF
%I t
[ 1 0 0 1 233 705 ] concat
%I
[
(10:23:12)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.06667 -0 -0 1.67702 319.333 -78.0125 ] concat
%I
42 449 115 475 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1.06667 -0 -0 1.67702 454.333 -77.0125 ] concat
%I
42 449 115 475 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-14-*-*-*-*-*-*-*
Courier 14 SetF
%I t
[ 1 0 0 1 367 705 ] concat
%I
[
(10:23:24)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-courier-medium-r-normal-*-14-*-*-*-*-*-*-*
Courier 14 SetF
%I t
[ 1 0 0 1 502 706 ] concat
%I
[
(10:24:03)
] Text
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 194 232 ] concat
%I
6 465 34 465 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 171 722 ] concat
%I
[
(qhead)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 457 1614 a Fy(Figure)g(1:)j Ff(Timer)13 b(queue)f(example)h(used)f(to)
h(illustrate)d(Scheme)k(2)101 1717 y Fy(In)g(Figure)i(1)d(the)h(lo)o(w)
o(est)g(timer)g(is)g(due)h(to)e(expire)i(at)e(absolute)h(time)h(10)e
(hours,)h(23)f(min)o(utes,)h(and)h(12)30 1774 y(seconds.)101
1852 y(Because)i(the)g(list)h(is)g(sorted,)e Fl(PerTickBookkeeping)h
Fy(need)h(only)g(incremen)o(t)g(the)f(curren)o(t)g(time)30
1908 y(of)c(da)o(y)l(,)f(and)i(compare)e(it)h(with)h(the)f(head)g(of)f
(the)h(list.)20 b(If)14 b(they)f(are)f(equal,)i(or)e(the)h(time)h(of)e
(da)o(y)h(is)g(greater,)30 1965 y(it)18 b(deletes)g(that)f(list)h
(elemen)o(t)g(and)f(calls)i Fl(Expir)m(yPr)o(ocessing)o
Fy(.)26 b(It)18 b(con)o(tin)o(ues)g(to)e(delete)j(elemen)o(ts)f(at)30
2021 y(the)d(head)f(of)g(the)h(list)g(un)o(til)h(the)e(expiry)i(time)e
(of)g(the)h(head)g(of)f(the)g(list)i(is)f(strictly)g(less)g(than)f(the)
h(time)f(of)30 2078 y(da)o(y)l(.)101 2156 y Fl(St)m(ar)m(tTimer)f
Fy(searc)o(hes)g(the)h(list)g(to)f(\014nd)h(the)g(p)q(osition)g(to)f
(insert)h(the)g(new)f(timer.)20 b(In)14 b(the)f(example,)30
2212 y Fl(St)m(ar)m(tTimer)j Fy(will)i(insert)f(a)f(new)g(timer)h(due)g
(to)e(expire)j(at)d(10:24:01)f(b)q(et)o(w)o(een)j(the)f(second)h(and)f
(third)30 2269 y(elemen)o(ts.)101 2347 y(The)21 b(w)o(orst)f(case)h
(latency)h(to)e(start)g(a)h(timer)h(is)f Fk(O)q Fy(\()p
Fk(n)p Fy(\).)38 b(The)21 b(a)o(v)o(erage)f(latency)i(dep)q(ends)h(on)e
(the)30 2404 y(distribution)16 b(of)d(timer)i(in)o(terv)m(als)g(\(from)
e(time)h(started)f(to)h(time)g(stopp)q(ed\),)g(and)g(the)h
(distribution)g(of)f(the)30 2460 y(arriv)m(al)i(pro)q(cess)f(according)
h(to)f(whic)o(h)h(calls)g(to)e Fl(St)m(ar)m(tTimer)h
Fy(are)g(made.)949 2585 y(5)p eop
%%Page: 6 6
6 5 bop 101 106 a Fy(In)o(terestingly)l(,)19 b(this)g(can)f(b)q(e)h(mo)
q(deled)h(\(Figure)15 b(2\))j(as)f(a)h(single)i(queue)f(with)g
(in\014nite)h(serv)o(ers;)f(this)30 162 y(is)g(v)m(alid)i(b)q(ecause)e
(ev)o(ery)g(timer)g(in)g(the)g(queue)h(is)f(essen)o(tially)h(decremen)o
(ted)g(\(or)e(serv)o(ed\))g(ev)o(ery)h(timer)30 219 y(tic)o(k.)28
b(It)18 b(is)g(sho)o(wn)g(in)h([17)o(])e(that)g(w)o(e)h(can)g(use)g
(Little's)h(result)f(to)f(obtain)h(the)g(a)o(v)o(erage)f(n)o(um)o(b)q
(er)h(in)h(the)30 275 y(queue;)h(also)e(the)h(distribution)g(of)f(the)g
(remaining)i(time)e(of)g(elemen)o(ts)h(in)g(the)f(timer)g(queue)h(seen)
g(b)o(y)f(a)30 331 y(new)d(request)h(is)f(the)h(residual)g(life)h
(densit)o(y)f(of)e(the)i(timer)f(in)o(terv)m(al)h(distribution.)262
383 y
 22036890 5723013 9209446 32298844 31246336 38021857 startTexFig
 262 383 a
%%BeginDocument: qmodel.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 51 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.11765 -0 -0 0.990099 199.647 233.911 ] concat
%I
88 397 239 496 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 189 233 ] concat
%I
20 453 107 453 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 189 678 ] concat
%I
[
(Arrivals to)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 177 657 ] concat
%I
[
(timer module)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 181 637 ] concat
%I
[
(with pdf a\(t\))
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
135 473 147 484 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 174 160 ] concat
%I
135 473 147 484 Rect
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 259 324 ] concat
%I
56 353 3 2 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 258 313 ] concat
%I
56 353 3 2 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 259 301 ] concat
%I
56 353 3 2 Elli
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 215 ] concat
%I
135 473 147 484 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 332 714 ] concat
%I
[
(Infinite servers)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 335 694 ] concat
%I
[
(service pdf s\(t\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 449 230 ] concat
%I
20 453 107 453 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 482 677 ] concat
%I
[
(Expired or)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 472 660 ] concat
%I
[
(stopped timers)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 30 833 a Fy(Figure)j(2:)25 b Ff(A)15 b(G/G/Inf/Inf)f(Queuing)h(Mo)q
(del)f(of)i(a)f(Timer)h(Mo)q(dule.)23 b(Note)16 b(that)f(s\(t\))g(is)g
(the)g(densit)o(y)e(function)h(of)i(interval)30 879 y(b)q(et)o(w)o(een)
d(sta)o(rting)f(and)h(stopping)e(\(o)o(r)i(expiration\))e(of)i(a)g
(timer.)101 979 y Fy(If)f(the)g(arriv)m(al)g(distribution)i(is)e(P)o
(oisson,)g(the)g(list)g(is)h(searc)o(hed)f(from)f(the)h(head,)g(and)g
(reads)g(and)g(writes)30 1035 y(b)q(oth)19 b(cost)f(one)i(unit,)g(then)
f(the)g(a)o(v)o(erage)f(cost)g(of)h(insertion)h(for)e(negativ)o(e)h
(exp)q(onen)o(tial)h(and)g(uniform)30 1092 y(timer)15
b(in)o(terv)m(al)i(distributions)f(is)g(sho)o(wn)f(in)h([17)o(])f(to)f
(b)q(e:)144 1196 y(2)9 b(+)i(2)p Fk(=)p Fy(3)p Fk(n)k
Fy(|)g(negativ)o(e)g(exp)q(onen)o(tial)144 1267 y(2)9
b(+)i(1)p Fk(=)p Fy(2)p Fk(n)k Fy(|)g(uniform)101 1371
y(Results)j(for)e(other)g(timer)i(in)o(terv)m(al)g(distributions)g(can)
f(b)q(e)h(computed)f(using)h(a)f(result)g(in)h([17)o(].)25
b(F)l(or)30 1428 y(a)19 b(negativ)o(e)g(exp)q(onen)o(tial)h
(distribution)h(w)o(e)d(can)h(reduce)h(the)f(a)o(v)o(erage)f(cost)g(to)
h(2)12 b(+)h Fk(n=)p Fy(3)19 b(b)o(y)g(searc)o(hing)30
1484 y(the)d(list)h(from)e(the)h(rear.)22 b(In)17 b(fact,)e(if)h
(timers)h(are)e(alw)o(a)o(ys)h(inserted)g(at)g(the)g(rear)f(of)h(the)g
(list,)h(this)f(searc)o(h)30 1541 y(strategy)11 b(yields)j(an)e
Fk(O)q Fy(\(1\))f Fl(St)m(ar)m(tTimer)h Fy(latency)l(.)20
b(This)13 b(happ)q(ens,)h(for)d(instance,)j(if)e(all)i(timers)e(in)o
(terv)m(als)30 1597 y(ha)o(v)o(e)j(the)h(same)f(v)m(alue.)22
b(Ho)o(w)o(ev)o(er,)14 b(for)h(a)g(general)h(distribution)h(of)e(the)h
(timer)f(in)o(terv)m(al,)h(w)o(e)g(assume)f(the)30 1654
y(a)o(v)o(erage)f(latency)i(of)f(insertion)h(is)g Fk(O)q
Fy(\()p Fk(n)p Fy(\).)101 1728 y Fl(StopTimer)c Fy(need)h(not)f(searc)o
(h)g(the)h(list)g(if)g(the)f(list)i(is)f(doubly)g(link)o(ed.)21
b(When)12 b Fl(St)m(ar)m(tTimer)h Fy(inserts)30 1785
y(a)j(timer)h(in)o(to)f(the)h(ordered)g(list)g(it)g(can)f(store)g(a)g
(p)q(oin)o(ter)i(to)d(the)i(elemen)o(t.)25 b Fl(StopTimer)16
b Fy(can)h(then)g(use)30 1841 y(this)f(p)q(oin)o(ter)h(to)e(delete)i
(the)f(elemen)o(t)h(in)g Fk(O)q Fy(\(1\))e(time)h(from)f(the)h(doubly)h
(link)o(ed)h(list.)23 b(This)17 b(can)f(b)q(e)g(used)30
1898 y(b)o(y)f(an)o(y)g(timer)g(sc)o(heme.)101 1972 y(If)h(Sc)o(heme)h
(2)f(is)g(implemen)o(ted)i(b)o(y)e(a)g(host)g(pro)q(cessor,)g(the)g(in)
o(terrupt)h(o)o(v)o(erhead)e(on)h(ev)o(ery)g(tic)o(k)h(can)30
2029 y(b)q(e)j(a)o(v)o(oided)f(if)h(there)f(is)h(hardw)o(are)f(supp)q
(ort)g(to)g(main)o(tain)g(a)g(single)i(timer.)32 b(The)20
b(hardw)o(are)e(timer)h(is)30 2085 y(set)d(to)g(expire)i(at)e(the)g
(time)h(at)f(whic)o(h)h(the)g(the)g(timer)f(at)g(the)h(head)g(of)f(the)
g(list)i(is)f(due)g(to)f(expire.)25 b(The)30 2141 y(hardw)o(are)14
b(in)o(tercepts)h(all)g(clo)q(c)o(k)g(tic)o(ks)g(and)g(in)o(terrupts)g
(the)f(host)g(only)h(when)g(a)f(timer)h(actually)g(expires.)30
2198 y(Unfortunately)l(,)g(some)g(pro)q(cessor)g(arc)o(hitectures)g(do)
h(not)e(o\013er)h(this)g(capabilit)o(y)l(.)101 2273 y(Algorithms)i
(similar)h(to)f(Sc)o(heme)h(2)f(are)g(used)g(b)o(y)h(b)q(oth)f(VMS)g
(and)g(UNIX)h(in)g(implemen)o(ting)h(their)30 2329 y(timer)c(mo)q
(dules.)21 b(The)16 b(p)q(erformance)f(of)g(the)g(t)o(w)o(o)f(sc)o
(hemes)h(is)h(summarized)g(in)g(T)l(able)g(2.)101 2404
y(As)j(for)f(Space,)j(Sc)o(heme)f(1)e(needs)i(the)g(minim)o(um)g(space)
g(p)q(ossible;)i(Sc)o(heme)e(2)f(needs)h Fk(O)q Fy(\()p
Fk(n)p Fy(\))f(extra)30 2460 y(space)c(for)g(the)g(forw)o(ard)f(and)i
(bac)o(k)f(p)q(oin)o(ters)g(b)q(et)o(w)o(een)h(queue)g(elemen)o(ts.)949
2585 y(6)p eop
%%Page: 7 7
7 6 bop 30 106 a Fq(4)67 b(Timer)15 b(Algorithms,)j(Sorting)e(T)-6
b(ec)n(hniques,)17 b(and)f(Time-Flo)n(w)f(Mec)n(h-)131
180 y(anisms)22 b(in)i(Discrete)e(Ev)n(en)n(t)h(Sim)n(ulations)30
308 y Fh(4.1)56 b(Sorting)18 b(Algorithms)f(and)i(Priorit)n(y)f(Queues)
30 419 y Fy(Sc)o(heme)c(2)f(reduced)h Fl(PerTickBookkeeping)g
Fy(latency)f(at)g(the)g(exp)q(ense)i(of)e Fl(St)m(ar)m(tTimer)g
Fy(b)o(y)g(k)o(eeping)30 476 y(the)h(timer)g(list)h(sorted.)k(Consider)
14 b(the)g(relationship)i(b)q(et)o(w)o(een)e(timer)g(and)g(sorting)g
(algorithms)f(depicted)30 532 y(in)j(Figure)f(3.)352
591 y
 19208274 3289088 9209446 34864332 28417720 38153420 startTexFig
 352 591 a
%%BeginDocument: sortanalogy.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1.05674 -0 -0 1.11321 166.872 175.962 ] concat
%I
108 444 247 495 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 295 721 ] concat
%I
[
(Timer Module)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-20-*-*-*-*-*-*-*
Helvetica 20 SetF
%I t
[ 1 0 0 1 287 700 ] concat
%I
[
(\(sorting module\))
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
32 471 106 471 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
249 470 325 470 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 185 723 ] concat
%I
[
(Arrival of)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 189 698 ] concat
%I
[
(unsorted)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 178 681 ] concat
%I
[
(timer requests)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 433 721 ] concat
%I
[
(Ouput in sorted)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 434 698 ] concat
%I
[
(order \(ignoring)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 433 680 ] concat
%I
[
(stopped timers\))
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 401 897 a Fy(Figure)g(3:)20 b Ff(Analogy)12 b(b)q(et)o(w)o(een)g(a)i
(Timer)f(Mo)q(dule)e(and)i(a)g(So)o(rting)g(Mo)q(dule)101
1003 y Fy(Ho)o(w)o(ev)o(er:)98 1122 y Fp(\017)23 b Fy(In)14
b(a)f(t)o(ypical)h(sort)f(all)h(elemen)o(ts)g(are)g(input)g(to)f(the)h
(mo)q(dule)g(when)g(the)g(sort)e(b)q(egins;)j(the)f(sort)e(ends)144
1178 y(b)o(y)17 b(outputting)h(all)h(elemen)o(ts)g(in)f(sorted)g
(order.)28 b(A)17 b(timer)h(mo)q(dule)h(p)q(erforms)f(a)g(more)f
(dynamic)144 1235 y(sort)d(b)q(ecause)i(elemen)o(ts)g(arriv)o(e)f(at)g
(di\013eren)o(t)g(times)g(and)h(are)f(output)g(at)f(di\013eren)o(t)i
(times.)98 1329 y Fp(\017)23 b Fy(In)16 b(a)g(timer)g(mo)q(dule,)h(the)
f(elemen)o(ts)g(to)f(b)q(e)i(\\sorted")e(c)o(hange)h(their)g(v)m(alue)h
(o)o(v)o(er)e(time)i(if)f(w)o(e)g(store)144 1385 y(the)f(in)o(terv)m
(al.)21 b(This)16 b(is)f(not)g(true)g(if)h(w)o(e)f(store)f(the)i
(absolute)f(time)h(of)e(expiry)l(.)101 1504 y(A)j(data)g(structure)h
(that)f(allo)o(ws)h(\\dynamic")g(sorting)f(is)h(a)g(priorit)o(y)g
(queue)g([7)o(].)27 b(A)18 b(priorit)o(y)g(queue)30 1560
y(allo)o(ws)d(elemen)o(ts)h(to)e(b)q(e)h(inserted)h(and)f(deleted;)h
(it)f(also)g(allo)o(ws)g(the)g(smallest)g(elemen)o(t)h(in)g(the)e(set)h
(to)f(b)q(e)30 1617 y(found.)20 b(A)15 b(timer)g(mo)q(dule)h(can)f(use)
g(a)g(priorit)o(y)g(queue,)g(and)g(do)g Fl(PerTickBookkeeping)g
Fy(only)g(on)g(the)30 1673 y(smallest)h(timer)f(elemen)o(t.)30
1818 y Fe(4.1.1)52 b(Sc)o(heme)16 b(3:)23 b(T)l(ree-based)18
b(Algorithms)30 1929 y Fy(A)e(link)o(ed)h(list)f(\(Sc)o(heme)g(2\))f
(is)h(one)g(w)o(a)o(y)f(of)g(implemen)o(ting)i(a)f(priorit)o(y)f
(queue.)22 b(F)l(or)15 b(large)h Fk(n)p Fy(,)g(tree-based)30
1985 y(data)e(structures)g(are)g(b)q(etter.)20 b(These)14
b(include)j(un)o(balanced)f(binary)f(trees,)f(heaps,)g(p)q(ost-order)h
(and)f(end-)30 2042 y(order)21 b(trees,)h(and)g(leftist-trees)f([7,)g
(26)o(].)38 b(They)21 b(attempt)g(to)f(reduce)i(the)g(latency)g(in)g
(Sc)o(heme)g(2)f(for)30 2098 y Fl(St)m(ar)m(tTimer)16
b Fy(from)g Fk(O)q Fy(\()p Fk(n)p Fy(\))g(to)g Fk(O)q
Fy(\()p Fk(l)q(og)r Fy(\()p Fk(n)p Fy(\)\).)21 b(In)c([18)o(])f(it)h
(is)g(rep)q(orted)g(that)e(this)i(di\013erence)h(is)f(signi\014can)o(t)
30 2155 y(for)g(large)h Fk(n)p Fy(,)g(and)g(that)g(un)o(balanced)h
(binary)f(trees)g(are)f(less)i(exp)q(ensiv)o(e)g(than)f(balanced)h
(binary)g(trees.)30 2211 y(Unfortunately)l(,)g(un)o(balanced)h(binary)f
(trees)f(easily)h(degenerate)f(in)o(to)h(a)e(linear)j(list;)g(this)f
(can)f(happ)q(en,)30 2268 y(for)d(instance,)g(if)h(a)f(set)g(of)f
(equal)i(timer)g(in)o(terv)m(als)g(are)f(inserted.)101
2349 y(W)l(e)h(will)i(lump)f(these)f(algorithms)g(together)g(as)f(Sc)o
(heme)i(3:)22 b(T)l(ree-based)17 b(algorithms.)22 b(The)17
b(p)q(erfor-)30 2405 y(mance)e(of)g(Sc)o(heme)h(3)f(is)h(summarized)g
(in)g(T)l(able)g(2.)949 2585 y(7)p eop
%%Page: 8 8
8 7 bop 30 106 a Fh(4.2)56 b(Discrete)17 b(Ev)n(en)n(t)h(Sim)n(ulation)
30 215 y Fy(In)d(discrete)h(ev)o(en)o(t)f(sim)o(ulations)h([19)o(],)e
(all)i(state)e(c)o(hanges)h(in)g(the)g(system)g(tak)o(e)f(place)i(at)e
(discrete)i(p)q(oin)o(ts)30 272 y(in)i(time.)26 b(An)18
b(imp)q(ortan)o(t)f(part)f(of)h(suc)o(h)g(sim)o(ulations)i(are)d(the)i
(ev)o(en)o(t-handling)h(routines)e(or)g(time-\015o)o(w)30
328 y(mec)o(hanisms.)i(When)11 b(an)f(ev)o(en)o(t)g(o)q(ccurs)h(in)g(a)
f(sim)o(ulation,)i(it)f(ma)o(y)e(sc)o(hedule)j(future)f(ev)o(en)o(ts.)
18 b(These)10 b(ev)o(en)o(ts)30 384 y(are)17 b(inserted)h(in)o(to)e
(some)h(list)h(of)e(outstanding)h(ev)o(en)o(ts.)25 b(The)17
b(sim)o(ulation)h(pro)q(ceeds)g(b)o(y)f(pro)q(cessing)h(the)30
441 y(earliest)f(ev)o(en)o(t,)f(whic)o(h)g(in)h(turn)f(ma)o(y)g(sc)o
(hedule)h(further)f(ev)o(en)o(ts.)23 b(The)16 b(sim)o(ulation)h(con)o
(tin)o(ues)g(un)o(til)g(the)30 497 y(ev)o(en)o(t)e(list)h(is)g(empt)o
(y)f(or)f(some)h(condition)i(\(e.g.)i Fk(cl)q(ock)12
b(>)h(M)5 b(axS)s(imul)q(ationT)h(ime)p Fy(\))14 b(holds.)101
577 y(There)h(are)g(t)o(w)o(o)f(w)o(a)o(ys)g(to)g(\014nd)i(the)g
(earliest)g(ev)o(en)o(t)e(and)i(up)q(date)g(the)f(clo)q(c)o(k:)86
703 y(1.)22 b(The)e(earliest)h(ev)o(en)o(t)f(is)g(immediately)i
(retriev)o(ed)f(from)e(some)h(data)f(structure)h(\(e.g.)34
b(a)20 b(priorit)o(y)144 760 y(queue)15 b([7)o(]\))f(and)h(the)f(clo)q
(c)o(k)h(jumps)g(to)f(the)g(time)h(of)f(this)h(ev)o(en)o(t.)20
b(This)15 b(is)g(em)o(b)q(o)q(died)h(in)f(sim)o(ulation)144
816 y(languages)g(lik)o(e)h(GPSS)g([12)o(])e(and)i(SIMULA)g([9)o(].)86
909 y(2.)22 b(In)16 b(the)h(sim)o(ulation)g(of)f(digital)h(circuits,)g
(it)g(is)f(often)g(su\016cien)o(t)h(to)e(consider)j(ev)o(en)o(t)d(sc)o
(heduling)k(at)144 965 y(time)g(instan)o(ts)g(that)f(are)h(m)o
(ultiples)i(of)e(the)g(clo)q(c)o(k)h(in)o(terv)m(al,)g(sa)o(y)f(c.)31
b(Then,)21 b(after)d(the)h(program)144 1021 y(pro)q(cesses)f(an)f(ev)o
(en)o(t,)h(it)g(incremen)o(ts)g(the)g(clo)q(c)o(k)g(v)m(ariable)h(b)o
(y)f(c)g(un)o(til)g(it)g(\014nds)h(an)o(y)e(outstanding)144
1078 y(ev)o(en)o(ts)d(at)g(the)g(curren)o(t)h(time.)20
b(It)15 b(then)f(executes)i(the)e(ev)o(en)o(t\(s\).)19
b(This)c(is)g(em)o(b)q(o)q(died)h(in)g(languages)144
1134 y(for)e(digital)j(sim)o(ulation)f(lik)o(e)g(TEGAS)f([21)o(])g(and)
g(DECSIM)g([15)o(].)101 1260 y(W)l(e)d(ha)o(v)o(e)g(already)g(seen)h
(that)e(algorithms)i(used)f(to)g(implemen)o(t)h(the)g(\014rst)f(metho)q
(d)g(are)g(applicable)j(for)30 1317 y(timer)d(algorithms:)18
b(these)12 b(include)i(link)o(ed)g(lists)e(and)g(tree-based)g
(structures.)19 b(What)11 b(is)h(more)f(in)o(teresting)30
1373 y(is)18 b(that)f(algorithms)g(for)g(the)h(second)g(metho)q(d)f
(are)h(also)f(applicable.)29 b(T)l(ranslated)18 b(in)g(terms)f(of)g
(timers,)30 1430 y(the)f(second)g(metho)q(d)g(for)f Fl
(PerTickBookkeeping)h Fy(is:)22 b(\\Incremen)o(t)16 b(the)f(clo)q(c)o
(k)i(b)o(y)f(the)f(clo)q(c)o(k)i(tic)o(k.)22 b(If)30
1486 y(an)o(y)15 b(timer)g(has)g(expired,)h(call)h Fl(Expir)m(yPr)o
(ocessing)o Fy(.")101 1566 y(An)22 b(e\016cien)o(t)g(and)g(widely)h
(used)f(metho)q(d)g(to)f(implemen)o(t)i(the)f(second)g(metho)q(d)g(is)g
(the)g(so-called)30 1622 y(timing-wheel)h([21)o(,)d(24])g(tec)o
(hnique.)38 b(In)22 b(this)f(metho)q(d,)h(the)f(data)f(structure)h(in)o
(to)g(whic)o(h)g(timers)g(are)30 1679 y(inserted)14 b(is)g(an)g(arra)o
(y)e(of)h(lists,)h(with)g(a)f(single)i(o)o(v)o(er\015o)o(w)d(list)j
(for)d(timers)i(b)q(ey)o(ond)g(the)g(range)f(of)g(the)g(arra)o(y)l(.)
101 1759 y(In)20 b(Figure)15 b(4,)21 b(time)f(is)g(divided)i(in)o(to)e
(cycles;)j(eac)o(h)d(cycle)h(is)g Fk(N)j Fy(units)c(of)g(time.)34
b(Let)20 b(the)g(curren)o(t)30 1815 y(n)o(um)o(b)q(er)f(of)g(cycles)h
(b)q(e)g Fk(S)s Fy(.)31 b(If)19 b(the)g(curren)o(t)g(time)h(p)q(oin)o
(ter)f(p)q(oin)o(ts)h(to)e(elemen)o(t)i(i,)g(the)f(curren)o(t)g(time)g
(is)30 1872 y Fk(S)13 b Fp(\003)d Fk(N)15 b Fy(+)c Fk(i)p
Fy(.)21 b(The)16 b(ev)o(en)o(t)g(notice)g(corresp)q(onding)h(to)e(an)g
(ev)o(en)o(t)h(sc)o(heduled)i(to)d(arriv)o(e)g(within)i(the)f(curren)o
(t)30 1928 y(cycle)i(\(e.g.)23 b(at)16 b(time)h Fk(S)d
Fp(\003)c Fk(N)16 b Fy(+)11 b Fk(j)s Fy(,)16 b(for)g(in)o(teger)h
Fk(j)i Fy(b)q(et)o(w)o(een)e(0)f(and)h Fk(n)p Fy(\))g(is)g(inserted)g
(in)o(to)g(the)g(list)g(p)q(oin)o(ted)30 1985 y(to)f(b)o(y)h(the)f
Fk(j)s Fy(th)g(elemen)o(t)h(of)g(the)f(arra)o(y)l(.)23
b(An)o(y)17 b(ev)o(en)o(t)f(o)q(ccurring)i(b)q(ey)o(ond)f(the)g(curren)
o(t)f(cycle)i(is)f(inserted)30 2041 y(in)o(to)d(the)g(o)o(v)o(er\015o)o
(w)f(list.)21 b(Within)15 b(a)f(cycle,)h(the)f(sim)o(ulation)i
(incremen)o(ts)f(the)f(curren)o(t)g(time)h(un)o(til)g(it)f(\014nds)30
2098 y(a)h(non-empt)o(y)h(list;)h(it)f(then)g(remo)o(v)o(es)f(and)h
(pro)q(cesses)g(all)g(ev)o(en)o(ts)g(in)g(the)g(list.)23
b(If)16 b(these)g(sc)o(hedule)h(future)30 2154 y(ev)o(en)o(ts)d(within)
i(the)f(curren)o(t)g(cycle,)g(suc)o(h)g(ev)o(en)o(ts)g(are)f(inserted)h
(in)o(to)g(the)g(arra)o(y)e(of)i(lists;)g(if)g(not,)f(the)h(new)30
2211 y(ev)o(en)o(ts)g(are)g(inserted)h(in)o(to)f(the)g(o)o(v)o(er\015o)
o(w)f(list.)101 2291 y(The)21 b(curren)o(t)g(time)g(p)q(oin)o(ter)g(is)
h(incremen)o(ted)g(mo)q(dulo)g Fk(N)5 b Fy(.)36 b(When)22
b(it)f(wraps)f(to)h(0,)h(the)f(n)o(um)o(b)q(er)30 2347
y(of)e(cycles)h(is)g(incremen)o(ted,)h(and)e(the)g(o)o(v)o(er\015o)o(w)
f(list)i(is)g(c)o(hec)o(k)o(ed;)h(an)o(y)e(elemen)o(ts)h(due)g(to)e(o)q
(ccur)i(in)g(the)30 2404 y(curren)o(t)e(cycle)h(are)e(remo)o(v)o(ed)g
(from)g(the)h(o)o(v)o(er\015o)o(w)f(list)h(and)g(inserted)h(in)o(to)f
(the)g(arra)o(y)e(of)i(lists.)28 b(This)18 b(is)30 2460
y(implemen)o(ted)f(in)f(TEGAS-2)f([21)o(].)949 2585 y(8)p
eop
%%Page: 9 9
9 8 bop 304 60 a
 20721254 13748387 9735700 25194414 30456954 38942801 startTexFig
 304 60 a
%%BeginDocument: lsim.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
51 251 225 292 Rect
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1.04211 175 210.484 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 174 211 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 183 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 159 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 177 132 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 174 112 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 82 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 224 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 224 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 209 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 209 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 173 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 173 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 158 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 158 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 124 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 124 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 109 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 109 ] concat
%I
295 468 2 3 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 738 ] concat
%I
[
(Element 0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 713 ] concat
%I
[
(Element 1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 663 ] concat
%I
[
(Element i)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 615 ] concat
%I
[
(Element j)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 188 561 ] concat
%I
[
(Element N-1)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
260 430 186 430 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
187 378 256 378 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 434 619 ] concat
%I
[
( List of Timers to)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 437 599 ] concat
%I
[
(Expire at this time)
] Text
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
113 267 113 268 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 239 513 ] concat
%I
[
(Number of Cycles)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 415 514 ] concat
%I
[
(Overflow List)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 286 252 ] concat
%I
243 255 290 255 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 442 675 ] concat
%I
[
(Current Time)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 400 1029 a Fy(Figure)15 b(4:)20 b Ff(Timing)12 b(Wheel)g(Mechanism)g
(Used)h(In)f(Logic)g(Simulation)g([21])101 1155 y Fy(The)17
b(arra)o(y)e(can)i(b)q(e)h(conceptually)g(though)o(t)e(of)h(as)f(a)h
(timing)h(wheel;)g(ev)o(ery)f(time)g(w)o(e)f(step)h(through)30
1212 y Fk(N)j Fy(lo)q(cations,)d(w)o(e)f(rotate)e(the)i(wheel)h(b)o(y)f
(incremen)o(ting)i(the)e(n)o(um)o(b)q(er)g(of)f(cycles.)24
b(A)16 b(problem)g(with)h(this)30 1268 y(implemen)o(tation)c(is)f(that)
e(as)h(time)h(increases)g(within)h(a)e(cycle)h(and)g(w)o(e)f(tra)o(v)o
(el)g(do)o(wn)g(the)h(arra)o(y)e(it)h(b)q(ecomes)30 1325
y(more)j(lik)o(ely)h(that)f(ev)o(en)o(t)f(records)h(will)i(b)q(e)f
(inserted)g(in)g(the)f(o)o(v)o(er\015o)o(w)e(list.)21
b(Other)14 b(implemen)o(tations)h([15)o(])30 1381 y(reduce)k(\(but)e
(do)h(not)g(completely)h(a)o(v)o(oid\))e(this)i(e\013ect)e(b)o(y)h
(rotating)f(the)h(wheel)h(half-w)o(a)o(y)e(through)h(the)30
1438 y(arra)o(y)l(.)101 1513 y(In)e(summary)l(,)f(w)o(e)h(note)g(that)f
(time)h(\015o)o(w)f(algorithms)h(used)g(for)g(digital)h(sim)o(ulation)g
(can)f(b)q(e)g(used)h(to)30 1570 y(implemen)o(t)f(timer)f(algorithms;)f
(con)o(v)o(ersely)l(,)h(timer)g(algorithms)f(can)h(b)q(e)g(used)h(to)e
(implemen)o(t)h(time)g(\015o)o(w)30 1626 y(mec)o(hanisms)h(in)g(sim)o
(ulations.)101 1702 y(Ho)o(w)o(ev)o(er,)d(there)j(are)f(di\013erences)h
(to)e(note:)98 1801 y Fp(\017)23 b Fy(In)18 b(Digital)g(Sim)o
(ulations,)i(most)c(ev)o(en)o(ts)i(happ)q(en)h(within)g(a)e(short)g(in)
o(terv)m(al)i(b)q(ey)o(ond)f(the)g(curren)o(t)144 1857
y(time.)i(Since)c(timing)f(wheel)h(implemen)o(tations)g(rarely)f(place)
g(ev)o(en)o(t)g(notices)g(in)g(the)g(o)o(v)o(er\015o)o(w)f(list,)144
1913 y(they)h(do)g(not)g(optimize)h(this)g(case.)k(This)c(is)f(not)g
(true)g(for)g(a)g(general)g(purp)q(ose)h(timer)f(facilit)o(y)l(.)98
2002 y Fp(\017)23 b Fy(Most)12 b(sim)o(ulations)j(ensure)f(that)f(if)h
(t)o(w)o(o)e(ev)o(en)o(ts)h(are)g(sc)o(heduled)j(to)c(o)q(ccur)i(at)f
(the)h(same)f(time,)h(they)144 2058 y(are)h(remo)o(v)o(ed)f(in)i(FIF)o
(O)f(order.)20 b(Timer)15 b(mo)q(dules)i(need)f(not)e(meet)i(this)f
(restriction.)98 2146 y Fp(\017)23 b Fy(Stepping)16 b(through)f(empt)o
(y)g(buc)o(k)o(ets)h(on)f(the)g(wheel)i(represen)o(ts)e(o)o(v)o(erhead)
g(for)g(a)g(Digital)h(Sim)o(ula-)144 2203 y(tion.)26
b(In)18 b(a)f(timer)h(mo)q(dule)g(w)o(e)f(ha)o(v)o(e)g(to)g(incremen)o
(t)h(the)g(clo)q(c)o(k)g(an)o(yw)o(a)o(y)e(on)h(ev)o(ery)g(tic)o(k.)27
b(Conse-)144 2259 y(quen)o(tly)l(,)19 b(stepping)g(through)e(empt)o(y)h
(buc)o(k)o(ets)g(on)g(a)f(clo)q(c)o(k)i(tic)o(k)f(do)q(es)g(not)g
(represen)o(t)g(signi\014can)o(t)144 2315 y(extra)c(o)o(v)o(erhead)h
Fm(if)g Fy(it)g(is)h(done)g(b)o(y)f(the)g(same)g(en)o(tit)o(y)g(that)g
(main)o(tains)g(the)g(curren)o(t)h(time.)98 2404 y Fp(\017)23
b Fy(Sim)o(ulation)15 b(Languages)g(assume)f(that)g(canceling)i(ev)o
(en)o(t)e(notices)h(is)g(v)o(ery)f(rare.)19 b(If)c(this)g(is)g(so,)f
(it)g(is)144 2460 y(su\016cien)o(t)g(to)f(mark)g(the)h(notice)g(as)f
(\\Canceled")i(and)f(w)o(ait)f(un)o(til)i(the)e(ev)o(en)o(t)h(is)g(sc)o
(heduled;)i(at)d(that)949 2585 y(9)p eop
%%Page: 10 10
10 9 bop 144 106 a Fy(p)q(oin)o(t)18 b(the)f(sc)o(heduler)i(discards)g
(the)e(ev)o(en)o(t.)27 b(In)19 b(a)e(timer)h(mo)q(dule,)h
Fl(StopTimer)e Fy(ma)o(y)g(b)q(e)h(called)144 162 y(frequen)o(tly;)d
(suc)o(h)g(an)g(approac)o(h)f(can)h(cause)g(the)g(memory)f(needs)i(to)e
(gro)o(w)f(un)o(b)q(oundedly)k(b)q(ey)o(ond)144 219 y(the)e(n)o(um)o(b)
q(er)g(of)g(timers)g(outstanding)h(at)e(an)o(y)h(time.)30
315 y(W)l(e)h(will)i(use)e(the)g(timing-wheel)i(metho)q(d)f(b)q(elo)o
(w)f(as)g(a)g(p)q(oin)o(t)g(of)g(departure)g(to)f(describ)q(e)j
(further)e(timer)30 372 y(algorithms.)30 531 y Fq(5)67
b(Sc)n(heme)17 b(4)f(|)h(Basic)f(Sc)n(heme)h(for)g(Timer)g(In)n(terv)l
(als)h(within)h(a)d(Sp)r(ec-)131 605 y(i\014ed)23 b(Range)30
726 y Fy(W)l(e)15 b(describ)q(e)h(a)e(simple)i(mo)q(di\014cation)f(of)f
(the)h(timing)g(wheel)h(algorithm.)j(If)c(w)o(e)f(can)h(guaran)o(tee)e
(that)h(all)30 782 y(timers)k(are)g(set)g(for)f(p)q(erio)q(ds)j(less)f
(than)f Fm(MaxInterval)o Fy(,)g(this)h(mo)q(di\014ed)g(algorithm)f(tak)
o(es)g(O\(1\))f(latency)30 839 y(for)c Fl(St)m(ar)m(tTimer)p
Fy(,)g Fl(StopTimer)p Fy(,)g(and)g Fl(PerTickBookkeeping)q
Fy(.)19 b(Let)13 b(the)h(gran)o(ularit)o(y)f(of)f(the)i(timer)30
895 y(b)q(e)h(1)f(unit.)20 b(The)15 b(curren)o(t)f(time)h(is)g
(represen)o(ted)g(in)g(Figure)g(5)f(b)o(y)h(a)f(p)q(oin)o(ter)g(to)g
(an)g(elemen)o(t)i(in)f(a)f(circular)30 951 y(bu\013er)h(with)h
(dimensions)h([0)p Fk(;)8 b Fm(MaxInterval)f Fp(\000)k
Fy(1].)291 1006 y
 21115945 10656645 9341009 28286156 30456954 38942801 startTexFig
 291 1006 a
%%BeginDocument: basicwheel.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1.04211 175 210.484 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 174 211 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 183 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 159 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 177 132 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 174 112 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 82 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 224 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 224 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 209 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 209 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 173 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 173 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 158 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 158 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 124 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 124 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 109 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 109 ] concat
%I
295 468 2 3 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 738 ] concat
%I
[
(Element 0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 713 ] concat
%I
[
(Element 1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 663 ] concat
%I
[
(Element i)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
260 430 186 430 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
187 378 256 378 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 434 619 ] concat
%I
[
( List of Timers to)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 437 599 ] concat
%I
[
(Expire at this time)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 615 ] concat
%I
[
(Element i +j)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 204 570 ] concat
%I
[
(Element )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 180 555 ] concat
%I
[
(MaxInterval -1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 442 675 ] concat
%I
[
(Current Time)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 278 1779 a Fy(Figure)k(5:)20 b Ff(Arra)o(y)13 b(of)f(Lists)g(Used)g(b)
o(y)h(Scheme)g(4)g(fo)o(r)g(Timer)g(Intervals)e(up)i(to)g(MaxInterval.)
101 1877 y Fy(T)l(o)k(set)h(a)f(timer)h(at)g Fk(j)i Fy(units)e(past)g
(curren)o(t)f(time,)i(w)o(e)f(index)h(\(Figure)c(5)o(\))j(in)o(to)g
(Elemen)o(t)g Fk(i)12 b Fy(+)g Fk(j)j Fy(mo)q(d)43 1933
y Fm(MaxInterval)o Fy(\),)i(and)g(put)h(the)f(timer)h(at)e(the)i(head)f
(of)g(a)g(list)h(of)f(timers)g(that)g(will)i(expire)f(at)f(a)g(time)h
(=)30 1990 y Fk(C)s(ur)q(r)q(entT)6 b(ime)j Fy(+)h Fk(j)17
b Fy(units.)j(Eac)o(h)15 b(tic)o(k)g(w)o(e)f(incremen)o(t)i(the)f
(curren)o(t)g(timer)g(p)q(oin)o(ter)g(\()s(mo)q(d)s Fm(MaxInterval)o
Fy(\))30 2046 y(and)c(c)o(hec)o(k)h(the)f(arra)o(y)f(elemen)o(t)i(b)q
(eing)g(p)q(oin)o(ted)g(to.)18 b(If)12 b(the)f(elemen)o(t)h(is)f(0)g
(\(no)g(list)h(of)f(timers)g(w)o(aiting)g(to)g(ex-)30
2103 y(pire\),)g(no)f(more)g(w)o(ork)f(is)i(done)f(on)h(that)e(timer)h
(tic)o(k.)19 b(But)10 b(if)g(it)h(is)g(non-zero,)g(w)o(e)e(do)i
Fl(Expir)m(yPr)o(ocessing)o Fy(on)30 2159 y(all)g(timers)f(that)g(are)g
(stored)f(in)i(that)f(list.)19 b(Th)o(us)10 b(the)g(latency)h(for)e
Fl(St)m(ar)m(tTimer)h Fy(is)h Fk(O)q Fy(\(1\);)f Fl(PerTickBookkeeping)
30 2216 y Fy(is)17 b Fk(O)q Fy(\(1\))e(except)i(when)g(timers)g
(expire,)g(but)g(this)g(is)g(the)f(b)q(est)h(p)q(ossible.)26
b(If)16 b(the)h(timer)g(lists)g(are)f(doubly)30 2272
y(link)o(ed,)f(and,)e(as)g(b)q(efore,)g(w)o(e)g(store)f(a)h(p)q(oin)o
(ter)g(to)g(eac)o(h)g(timer)g(record,)g(then)h(the)f(latency)g(of)g
Fl(StopTimer)30 2328 y Fy(is)j(also)f Fk(O)q Fy(\(1\).)101
2404 y(This)c(is)h(basically)h(a)e(timing)g(wheel)i(sc)o(heme)e(where)g
(the)h(wheel)g(turns)f(one)g(arra)o(y)f(elemen)o(t)i(ev)o(ery)f(timer)
30 2460 y(unit,)18 b(as)f(opp)q(osed)g(to)g(rotating)f(ev)o(ery)h
Fm(MaxInterval)g Fy(or)f Fm(MaxInterval)o Fk(=)p Fy(2)h(units)h([21)o
(].)25 b(This)18 b(guaran)o(tees)937 2585 y(10)p eop
%%Page: 11 11
11 10 bop 30 106 a Fy(that)13 b(all)h(timers)f(within)i
Fm(MaxInterval)e Fy(of)f(the)i(curren)o(t)f(time)h(will)h(b)q(e)f
(inserted)g(in)h(the)e(arra)o(y)f(of)h(lists;)i(this)30
162 y(is)h(not)f(guaran)o(teed)f(b)o(y)h(con)o(v)o(en)o(tional)h
(timing)g(wheel)g(algorithms)f([21)o(,)g(15].)101 243
y(In)h(sorting)f(terms,)f(this)i(is)g(similar)h(to)d(a)h(buc)o(k)o(et)h
(sort)e([7])h(that)f(trades)h(o\013)g(memory)g(for)f(pro)q(cessing.)30
300 y(Ho)o(w)o(ev)o(er,)e(since)j(the)e(timers)g(c)o(hange)h(v)m(alue)g
(ev)o(ery)f(time)h(instan)o(t,)f(in)o(terv)m(als)h(are)f(en)o(tered)h
(as)f(o\013sets)f(from)30 356 y(the)g(curren)o(t)g(time)h(p)q(oin)o
(ter.)19 b(It)13 b(is)f(su\016cien)o(t)h(if)g(the)f(curren)o(t)g(time)h
(p)q(oin)o(ter)g(increases)g(ev)o(ery)f(time)g(instan)o(t.)101
438 y(A)k(buc)o(k)o(et)g(sort)g(sorts)f Fk(N)21 b Fy(elemen)o(ts)c(in)g
Fk(O)q Fy(\()p Fk(M)5 b Fy(\))15 b(time)i(using)g Fk(M)22
b Fy(buc)o(k)o(ets,)16 b(since)h(all)g(buc)o(k)o(ets)g(ha)o(v)o(e)f(to)
30 494 y(b)q(e)i(examined.)27 b(This)18 b(is)g(ine\016cien)o(t)h(for)e
(large)g Fk(M)k(>)c(N)5 b Fy(.)26 b(In)18 b(timer)f(algorithms,)g(ho)o
(w)o(ev)o(er,)g(the)h(crucial)30 551 y(observ)m(ation)e(is)g(that)f
(some)g(en)o(tit)o(y)h(needs)g(to)f(do)h Fk(O)q Fy(\(1\))f(w)o(ork)f(p)
q(er)i(tic)o(k)g(to)f(up)q(date)i(the)e(curren)o(t)h(time;)g(it)30
607 y(costs)d(only)h(a)f(few)h(more)f(instructions)h(for)f(the)h(same)f
(en)o(tit)o(y)g(to)g(step)h(through)f(an)g(empt)o(y)g(buc)o(k)o(et.)20
b(What)30 664 y(matters,)14 b(unlik)o(e)k(the)e(sort,)f(is)h(not)f(the)
h(total)f(amoun)o(t)g(of)h(w)o(ork)f(to)g(sort)g Fk(N)20
b Fy(elemen)o(ts,)c(but)g(the)g(a)o(v)o(erage)30 720
y(\(and)f(w)o(orst-case\))f(part)g(of)h(the)g(w)o(ork)g(that)f(needs)i
(to)f(b)q(e)h(done)f(p)q(er)h(timer)f(tic)o(k.)101 801
y(Still)20 b(memory)e(is)h(\014nite:)27 b(it)19 b(is)g(di\016cult)h(to)
e(justify)h(2)1062 785 y Fd(32)1117 801 y Fy(w)o(ords)f(of)g(memory)g
(to)g(implemen)o(t)i(32)d(bit)30 858 y(timers.)34 b(One)21
b(solution)g(is)g(to)e(implemen)o(t)i(timers)f(within)i(some)d(range)h
(using)h(this)f(sc)o(heme)h(and)f(the)30 914 y(allo)o(w)o(ed)e(memory)l
(.)27 b(Timers)18 b(greater)f(than)g(this)i(v)m(alue)g(are)e(implemen)o
(ted)i(using,)g(sa)o(y)l(,)f(Sc)o(heme)g(2.)27 b(Al-)30
971 y(ternately)l(,)15 b(this)f(sc)o(heme)h(can)g(b)q(e)g(extended)g
(in)h(t)o(w)o(o)d(w)o(a)o(ys)g(to)h(allo)o(w)h(larger)f(v)m(alues)i(of)
e(the)g(timer)h(in)o(terv)m(al)30 1027 y(with)h(mo)q(dest)f(amoun)o(ts)
f(of)h(memory)l(.)30 1195 y Fq(6)67 b(Extensions)30 1323
y Fh(6.1)56 b(Extension)17 b(1:)25 b(Hashing)30 1434
y Fy(The)20 b(previous)g(sc)o(heme)f(has)h(an)f(ob)o(vious)h(analogy)f
(to)f(inserting)j(an)e(elemen)o(t)h(in)g(an)g(arra)o(y)e(using)i(the)30
1491 y(elemen)o(t)e(v)m(alue)g(as)f(an)g(index.)27 b(If)17
b(there)g(is)h(insu\016cien)o(t)g(memory)l(,)f(w)o(e)g(can)g(hash)g
(the)g(elemen)o(t)h(v)m(alue)h(to)30 1547 y(yield)e(an)e(index.)101
1628 y(F)l(or)f(example,)i(if)f(the)h(table)f(size)h(is)g(a)f(p)q(o)o
(w)o(er)f(of)h(2,)g(an)g(arbitrary)f(size)i(timer)f(can)h(easily)g(b)q
(e)g(divided)30 1685 y(b)o(y)f(the)h(table)g(size;)g(the)g(remainder)g
(\(lo)o(w)f(order)h(bits\))f(is)h(added)h(to)d(the)i(curren)o(t)f(time)
h(p)q(oin)o(ter)g(to)f(yield)30 1741 y(the)d(index)i(within)f(the)f
(arra)o(y)l(.)18 b(The)12 b(result)h(of)e(the)i(division)h(\(high)e
(order)g(bits\))g(is)h(stored)e(in)i(a)f(list)h(p)q(oin)o(ted)30
1798 y(to)i(b)o(y)g(the)g(index.)101 1879 y(In)i(Figure)f(6)o(,)h(let)h
(the)f(table)g(size)h(b)q(e)g(256)e(and)h(the)g(timer)g(b)q(e)g(a)g(32)
f(bit)i(timer.)25 b(The)17 b(remainder)h(on)30 1936 y(division)h(is)f
(the)f(last)g(8)f(bits.)26 b(Let)17 b(the)g(v)m(alue)i(of)d(the)h(last)
g(8)g(bits)g(b)q(e)h(20.)25 b(Then)17 b(the)h(timer)f(index)h(is)g(10)
30 1992 y(\(Curren)o(t)c(Time)h(P)o(oin)o(ter\))f(+)i(20)e
(\(remainder\))h(=)g(30.)k(The)c(24)f(high)i(order)e(bits)i(are)e(then)
h(inserted)h(in)o(to)30 2048 y(a)f(list)h(that)e(is)i(p)q(oin)o(ted)g
(to)f(b)o(y)g(the)g(30th)g(elemen)o(t.)101 2130 y(Other)e(metho)q(ds)h
(of)f(hashing)h(are)f(p)q(ossible.)21 b(F)l(or)13 b(example,)h(an)o(y)f
(function)h(that)f(maps)g(a)g(timer)h(v)m(alue)30 2186
y(to)h(an)g(arra)o(y)f(index)i(could)g(b)q(e)g(used.)21
b(W)l(e)15 b(will)i(defend)f(our)f(c)o(hoice)h(at)f(the)g(end)h(of)e
(Section)j(6.1.)101 2268 y(Next,)d(there)i(are)e(t)o(w)o(o)g(w)o(a)o
(ys)g(to)h(main)o(tain)h(eac)o(h)f(list.)937 2585 y(11)p
eop
%%Page: 12 12
12 11 bop 279 60 a
 21510636 10393518 9933045 28549283 31443681 38942801 startTexFig
 279 60 a
%%BeginDocument: hashwheel.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica-Bold reencodeISO def
/Helvetica reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1.04211 175 210.484 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 174 211 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 183 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 159 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 177 132 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 174 112 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 176 82 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 224 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 224 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 209 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 209 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 173 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 173 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 158 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 158 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 7 124 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 124 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 8 109 ] concat
%I
295 468 2 3 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 39 109 ] concat
%I
295 468 2 3 Elli
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 738 ] concat
%I
[
(Element 0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 713 ] concat
%I
[
(Element 1)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
260 430 186 430 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
187 378 256 378 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 442 675 ] concat
%I
[
(Current Time)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 663 ] concat
%I
[
(Element 10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 196 615 ] concat
%I
[
(Element 30)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-14-*-*-*-*-*-*-*
Helvetica-Bold 14 SetF
%I t
[ 1 0 0 1 191 566 ] concat
%I
[
(Element 256)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 434 619 ] concat
%I
[
( List of Timers that)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-18-*-*-*-*-*-*-*
Helvetica 18 SetF
%I t
[ 1 0 0 1 366 596 ] concat
%I
[
(have hashed into this bucket)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 138 816 a Fy(Figure)16 b(6:)j Ff(Arra)o(y)13 b(of)g(Lists)e(Used)i(b)o
(y)f(Schemes)i(5)f(and)f(6)h(fo)o(r)g(a)o(rbitra)o(ry)g(sized)e
(timers:)16 b(basically)11 b(a)i(hash)g(table.)30 952
y Fe(6.1.1)52 b(Sc)o(heme)16 b(5:)23 b(Hash)18 b(T)l(able)g(with)g
(Sorted)g(Lists)g(in)g(eac)o(h)f(Buc)o(k)o(et)30 1062
y Fy(Here)c(eac)o(h)g(list)h(is)f(main)o(tained)h(as)f(a)f(ordered)h
(list)h(exactly)f(as)g(in)g(Sc)o(heme)h(2.)19 b Fl(St)m(ar)m(tTimer)13
b Fy(can)g(b)q(e)g(slo)o(w)30 1118 y(b)q(ecause)18 b(the)e(24)g(bit)i
(quan)o(tit)o(y)e(m)o(ust)g(b)q(e)h(inserted)h(in)o(to)f(the)f(correct)
h(place)g(in)h(the)f(list.)25 b(Although)17 b(the)30
1175 y(w)o(orst)9 b(case)i(latency)g(for)g Fl(St)m(ar)m(tTimer)f
Fy(is)h(still)h Fk(O)q Fy(\()p Fk(n)p Fy(\),)f(the)g(a)o(v)o(erage)e
(latency)j(can)f(b)q(e)g Fk(O)q Fy(\(1\).)17 b(This)12
b(is)f(true)f(if)30 1231 y Fk(n)j(<)g(T)6 b(abl)q(eS)s(iz)r(e)p
Fy(,)12 b(and)i(if)h(the)f(hash)g(function)h(\()p Fk(T)6
b(imer)q(V)j(al)q(uemodT)d(abl)q(eS)s(iz)r(e)p Fy(\))11
b(distributes)16 b(timer)e(v)m(alues)30 1288 y(uniformly)k(across)f
(the)h(table.)27 b(If)17 b(so,)h(the)f(a)o(v)o(erage)g(size)h(of)f(the)
g(list)i(that)d(the)i(ith)g(elemen)o(t)g(is)g(inserted)30
1344 y(in)o(to)f(is)g Fk(i)10 b Fp(\000)i Fy(1)p Fk(=T)6
b(abl)q(eS)s(iz)r(e)14 b Fy([7].)24 b(Since)18 b Fk(i)c
Fp(\024)i Fk(n)f(<)g(T)6 b(abl)q(eS)s(iz)r(e)p Fy(,)15
b(the)i(a)o(v)o(erage)f(latency)h(of)f Fl(St)m(ar)m(tTimer)g
Fy(is)30 1401 y(O\(1\).)k(Ho)o(w)15 b(w)o(ell)i(this)f(hash)f(actually)
i(distributes)f(dep)q(ends)h(on)f(the)f(arriv)m(al)i(distribution)g(of)
e(timers)h(to)30 1457 y(this)g(mo)q(dule,)g(and)f(the)g(distribution)i
(of)e(timer)g(in)o(terv)m(als.)101 1538 y Fl(PerTickBookkeeping)j
Fy(incremen)o(ts)i(the)f(curren)o(t)g(time)g(p)q(oin)o(ter.)31
b(If)20 b(the)f(v)m(alue)h(stored)e(in)i(the)30 1594
y(arra)o(y)e(elemen)o(t)i(b)q(eing)g(p)q(oin)o(ted)g(to)f(is)h(zero,)f
(there)h(is)f(no)h(more)e(w)o(ork.)31 b(Otherwise,)21
b(as)e(in)h(Sc)o(heme)g(2,)30 1650 y(the)d(top)f(of)g(the)g(list)h(is)g
(decremen)o(ted.)25 b(If)16 b(it)h(expires,)g Fl(Expir)m(yPr)o
(ocessing)p Fy(is)g(called)h(and)f(the)f(top)g(list)30
1707 y(elemen)o(t)j(is)g(deleted.)30 b(Once)19 b(again,)g
Fl(PerTickBookkeeping)f Fy(tak)o(es)g(O\(1\))g(a)o(v)o(erage)f(and)h(w)
o(orst-case)30 1763 y(latency)f(except)g(when)g(m)o(ultiple)h(timers)f
(are)f(due)h(to)f(expire)i(at)e(the)g(same)g(instan)o(t,)h(whic)o(h)g
(is)g(the)g(b)q(est)30 1820 y(w)o(e)e(can)g(do.)101 1900
y(Finally)l(,)e(if)e(eac)o(h)g(list)h(is)f(doubly)h(link)o(ed)h(and)e
Fl(St)m(ar)m(tTimer)g Fy(stores)f(a)h(p)q(oin)o(ter)g(to)f(eac)o(h)h
(timer)h(elemen)o(t,)30 1957 y Fl(StopTimer)j Fy(tak)o(es)g
Fk(O)q Fy(\(1\))f(time.)101 2037 y(A)k(pleasing)i(observ)m(ation)e(is)h
(that)f(the)g(sc)o(heme)h(reduces)g(to)f(Sc)o(heme)h(2)f(if)h(the)f
(arra)o(y)f(size)i(is)g(1.)29 b(In)30 2094 y(terms)15
b(of)f(sorting,)h(Sc)o(heme)h(5)f(is)h(similar)g(to)e(doing)i(a)f(buc)o
(k)o(et)g(sort)g(on)g(the)g(lo)o(w)g(order)g(bits,)g(follo)o(w)o(ed)h
(b)o(y)30 2150 y(an)f(insertion)h(sort)f([7)o(])g(on)g(the)g(lists)h(p)
q(oin)o(ted)g(to)f(b)o(y)g(eac)o(h)g(buc)o(k)o(et.)30
2294 y Fe(6.1.2)52 b(Sc)o(heme)16 b(6:)23 b(Hash)18 b(T)l(able)g(with)g
(Unsorted)f(Lists)h(in)g(eac)o(h)g(Buc)o(k)o(et)30 2404
y Fy(If)13 b(a)f(w)o(orst)f(case)i Fl(St)m(ar)m(tTimer)f
Fy(latency)h(of)f Fk(O)q Fy(\()p Fk(n)p Fy(\))g(is)h(unacceptable,)i(w)
o(e)d(can)h(main)o(tain)g(eac)o(h)f(time)h(list)g(as)30
2460 y(an)i(unordered)i(list)f(instead)g(of)f(an)g(ordered)h(list.)22
b(Th)o(us)15 b Fl(St)m(ar)m(tTimer)g Fy(has)h(a)f(w)o(orst)f(case)h
(and)h(a)o(v)o(erage)937 2585 y(12)p eop
%%Page: 13 13
13 12 bop 30 106 a Fy(latency)12 b(of)f Fk(O)q Fy(\(1\).)18
b(But)11 b Fl(PerTickBookkeeping)h Fy(no)o(w)f(tak)o(es)g(longer.)19
b(Ev)o(ery)11 b(timer)g(tic)o(k)h(w)o(e)f(incremen)o(t)30
162 y(the)j(p)q(oin)o(ter)f(\(mo)q(d)h Fk(T)6 b(abl)q(eS)s(iz)r(e)p
Fy(\);)11 b(if)j(there)g(is)g(a)f(list)h(there,)g(w)o(e)f(m)o(ust)g
(decremen)o(t)h(the)f(high)h(order)g(bits)g(for)30 219
y(ev)o(ery)f(elemen)o(t)g(in)h(the)f(arra)o(y)l(,)f(exactly)h(as)g(in)h
(Sc)o(heme)f(1.)19 b(Ho)o(w)o(ev)o(er,)12 b(if)h(the)g(hash)g(table)h
(has)e(the)h(prop)q(ert)o(y)30 275 y(describ)q(ed)k(ab)q(o)o(v)o(e,)e
(then)g(the)g(a)o(v)o(erage)f(size)i(of)f(the)h(list)g(will)g(b)q(e)g
Fk(O)q Fy(\(1\).)101 356 y(W)l(e)f(can)g(mak)o(e)g(a)g(stronger)f
(statemen)o(t)g(ab)q(out)h(the)g(a)o(v)o(erage)f(b)q(eha)o(vior)i
(regardless)f(of)g(ho)o(w)g(the)g(hash)30 412 y(distributes.)20
b(Notice)12 b(that)f(ev)o(ery)h Fk(T)6 b(abl)q(eS)s(iz)r(e)k
Fy(tic)o(ks)i(w)o(e)g(decremen)o(t)g(once)g(all)h(timers)f(that)f(are)g
(still)j(living.)30 468 y(Th)o(us)h(for)g Fk(n)h Fy(timers)f(w)o(e)g
(do)g Fk(n=T)6 b(abl)q(eS)s(iz)r(e)14 b Fy(w)o(ork)h(on)g(a)o(v)o
(erage)f(p)q(er)i(tic)o(k.)k(If)c Fk(n)d(<)g(T)6 b(abl)q(eS)s(iz)r(e)14
b Fy(then)i(w)o(e)f(do)30 525 y Fk(O)q Fy(\(1\))d(w)o(ork)g(on)h(a)o(v)
o(erage)e(p)q(er)j(tic)o(k.)19 b(If)13 b(all)h Fk(n)f
Fy(timers)g(hash)g(in)o(to)g(the)g(same)g(buc)o(k)o(et,)g(then)g(ev)o
(ery)g Fk(T)6 b(abl)q(eS)s(iz)r(e)30 581 y Fy(tic)o(ks)15
b(w)o(e)g(do)g Fk(O)q Fy(\()p Fk(n)p Fy(\))g(w)o(ork,)f(but)h(for)g(in)
o(termediate)h(tic)o(ks)f(w)o(e)g(do)g Fk(O)q Fy(\(1\))f(w)o(ork.)101
662 y(Th)o(us)19 b(the)g(hash)g(distribution)i(in)f(Sc)o(heme)g(6)f
(only)h(con)o(trols)f(the)g(\\burstiness")h(\(v)m(ariance\))f(of)g(the)
30 718 y(latency)c(of)f Fl(PerTickBookkeeping)p Fy(,)g(and)h(not)f(the)
h(a)o(v)o(erage)e(latency)l(.)20 b(Since)c(the)f(w)o(orst-case)e
(latency)30 775 y(of)f Fl(PerTickBookkeeping)g Fy(is)h(alw)o(a)o(ys)f
Fk(O)q Fy(\()p Fk(n)p Fy(\))g(\(all)h(timers)g(expire)g(at)f(the)g
(same)g(time\),)h(w)o(e)f(b)q(eliev)o(e)j(that)30 831
y(that)h(the)h(c)o(hoice)g(of)g(hash)f(function)i(for)e(Sc)o(heme)i(6)e
(is)h(insigni\014can)o(t.)26 b(Obtaining)19 b(the)d(remainder)i(after)
30 888 y(dividing)d(b)o(y)f(a)e(p)q(o)o(w)o(er)h(of)g(2)g(is)g(c)o
(heap,)h(and)f(consequen)o(tly)i(recommended.)20 b(F)l(urther,)13
b(using)g(an)h(arbitrary)30 944 y(hash)f(function)h(to)e(map)h(a)g
(timer)g(v)m(alue)h(in)o(to)f(an)g(arra)o(y)f(index)i(w)o(ould)f
(require)h Fl(PerTickBookkeeping)30 1001 y Fy(to)h(compute)g(the)g
(hash)g(on)h(eac)o(h)f(timer)g(tic)o(k,)g(whic)o(h)h(w)o(ould)g(mak)o
(e)f(it)g(more)g(exp)q(ensiv)o(e.)101 1081 y(W)l(e)g(discuss)h
(implemen)o(tation)h(strategies)d(for)h(Sc)o(heme)h(6)f(in)h(App)q
(endix)h(A.)30 1227 y Fh(6.2)56 b(Extension)17 b(2:)25
b(Exploiting)16 b(Hierarc)n(h)n(y)-5 b(,)18 b(Sc)n(heme)g(7)30
1337 y Fy(The)i(last)g(extension)h(of)e(the)h(basic)h(sc)o(heme)f
(exploits)h(the)f(concept)h(of)e(hierarc)o(h)o(y)l(.)35
b(T)l(o)20 b(represen)o(t)g(the)30 1393 y(n)o(um)o(b)q(er)15
b(1000000)e(w)o(e)i(need)h(only)f(7)g(digits)h(instead)f(of)g(1000000)e
(b)q(ecause)j(w)o(e)f(represen)o(t)g(n)o(um)o(b)q(ers)g(hier-)30
1449 y(arc)o(hically)g(in)f(units)g(of)f(1's,)g(10's,)f(100's)h(etc.)19
b(Similarly)l(,)d(to)c(represen)o(t)i(all)g(p)q(ossible)i(timer)d(v)m
(alues)i(within)30 1506 y(a)i(32)g(bit)g(range,)h(w)o(e)f(do)g(not)g
(need)h(a)f(2)733 1489 y Fd(32)787 1506 y Fy(elemen)o(t)h(arra)o(y)l(.)
25 b(Instead)18 b(w)o(e)f(can)h(use)f(a)g(n)o(um)o(b)q(er)h(of)f(arra)o
(ys,)30 1562 y(eac)o(h)e(of)g(di\013eren)o(t)g(gran)o(ularit)o(y)l(.)20
b(F)l(or)15 b(instance,)g(w)o(e)g(can)h(use)f(4)g(arra)o(ys)f(as)h
(follo)o(ws:)98 1690 y Fp(\017)23 b Fy(A)15 b(100)f(elemen)o(t)i(arra)o
(y)e(in)i(whic)o(h)g(eac)o(h)f(elemen)o(t)h(represen)o(ts)g(a)e(da)o(y)
98 1783 y Fp(\017)23 b Fy(A)15 b(24)f(elemen)o(t)i(arra)o(y)e(in)i
(whic)o(h)g(eac)o(h)g(elemen)o(t)g(represen)o(ts)f(an)g(hour)98
1876 y Fp(\017)23 b Fy(A)15 b(60)f(elemen)o(t)i(arra)o(y)e(in)i(whic)o
(h)g(eac)o(h)g(elemen)o(t)g(represen)o(ts)f(a)g(min)o(ute)98
1969 y Fp(\017)23 b Fy(A)15 b(60)f(elemen)o(t)i(arra)o(y)e(in)i(whic)o
(h)g(eac)o(h)g(elemen)o(t)g(represen)o(ts)f(a)g(second)101
2097 y(Th)o(us)f(instead)h(of)f(100)g(*)g(24)g(*)g(60)g(*)g(60)g(=)h
(8.64)e(million)k(lo)q(cations)e(to)f(store)g(timers)g(up)h(to)f(100)g
(da)o(ys,)30 2154 y(w)o(e)h(need)h(only)g(100)e(+)i(24)e(+)i(60)e(+)i
(60)e(=)i(244)e(lo)q(cations.)101 2234 y(As)i(an)g(example,)h(consider)
g(Figure)f(7)o(.)23 b(Let)17 b(the)f(curren)o(t)g(time)h(b)q(e)g(11)f
(da)o(ys)f(10)h(hours,)g(24)g(min)o(utes,)30 2291 y(30)f(seconds.)22
b(Then)16 b(to)f(set)h(a)f(timer)h(of)g(50)f(min)o(utes)h(and)g(45)f
(seconds,)h(w)o(e)f(\014rst)h(calculate)h(the)f(absolute)30
2347 y(time)g(at)g(whic)o(h)h(the)f(timer)g(will)i(expire.)23
b(This)17 b(is)f(11)g(da)o(ys,)f(11)h(hours,)f(15)h(min)o(utes,)g(15)g
(seconds.)22 b(Then)30 2404 y(w)o(e)16 b(insert)h(the)g(timer)g(in)o
(to)f(a)h(list)g(b)q(eginning)i(1)d(\(11)g(-)g(10)g(hours\))h(elemen)o
(t)g(ahead)g(of)f(the)g(curren)o(t)h(hour)30 2460 y(p)q(oin)o(ter)i(in)
g(the)f(hour)g(arra)o(y)l(.)27 b(W)l(e)18 b(also)g(store)g(the)g
(remainder)h(\(15)e(min)o(utes)i(and)f(15)f(seconds\))i(in)g(this)937
2585 y(13)p eop
%%Page: 14 14
14 13 bop 148 60 a
 25654887 16511222 6380830 25786449 32035717 42297671 startTexFig
 148 60 a
%%BeginDocument: hierwheels.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.592593 -0 -0 1.03685 153.185 215.173 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 173 252 ] concat
%I
16 426 39 426 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 336 187 ] concat
%I
16 426 39 426 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 124 706 ] concat
%I
[
(pointer = 10)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 127 723 ] concat
%I
[
(current hour)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 277 648 ] concat
%I
[
(current minute)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 282 632 ] concat
%I
[
(pointer = 24)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 149.259 164 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 149.259 199 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 148.259 181 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.592593 -0 -0 1.03685 319.185 214.173 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 316.259 134 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 495 161 ] concat
%I
16 426 39 426 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.592593 -0 -0 1.03685 483.185 213.173 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 479.259 88 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 314.259 115 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 477.259 104 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 437 626 ] concat
%I
[
(current second)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 447 610 ] concat
%I
[
(pointer = 30)
] Text
End

Begin %I MLine
%I b 65520
0 0 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I 4
41 427
12 427
12 291
67 291
4 MLine
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 255 509 ] concat
%I
[
(and 15 seconds)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 251 529 ] concat
%I
[
(Timer Record with remaining time = 15 minutes)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 216 805 ] concat
%I
[
(HOUR)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 212 780 ] concat
%I
[
(ARRAY)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 368 803 ] concat
%I
[
(MINUTE)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 530 801 ] concat
%I
[
(SECOND)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 368 782 ] concat
%I
[
(ARRAY)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 529 781 ] concat
%I
[
(ARRAY)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 188 1204 a Fy(Figure)15 b(7:)20 b Ff(Hiera)o(rchical)11
b(set)i(of)f(a)o(rra)o(ys)i(of)e(lists)f(used)h(b)o(y)g(Scheme)i(7)f
(to)g("map")h(time)e(mo)o(re)i(e\016ciently)m(.)30 1341
y Fy(lo)q(cation.)23 b(W)l(e)16 b(sho)o(w)f(this)h(in)h(Figure)f(7)o(,)
g(ignoring)h(the)e(da)o(y)h(arra)o(y)f(whic)o(h)h(do)q(es)h(not)e(c)o
(hange)h(during)h(the)30 1398 y(example.)101 1479 y(The)g(seconds)g
(arra)o(y)f(w)o(orks)g(as)h(usual:)24 b(ev)o(ery)17 b(time)h(the)f
(hardw)o(are)f(clo)q(c)o(k)i(tic)o(ks)f(w)o(e)g(incremen)o(t)h(the)30
1536 y(second)11 b(p)q(oin)o(ter.)19 b(If)10 b(the)h(list)g(p)q(oin)o
(ted)h(to)d(b)o(y)i(the)f(elemen)o(t)h(is)g(non-empt)o(y)l(,)h(w)o(e)e
(do)g Fl(Expir)m(yPr)o(ocessing)p Fy(for)30 1592 y(elemen)o(ts)16
b(in)g(that)e(list.)21 b(Ho)o(w)o(ev)o(er,)14 b(the)h(other)g(3)g(arra)
o(ys)f(w)o(ork)g(sligh)o(tly)i(di\013eren)o(tly)l(.)101
1673 y(Ev)o(en)g(if)g(there)g(are)g(no)g(timers)g(requested)g(b)o(y)g
(the)g(user)g(of)g(the)g(service,)g(there)g(will)i(alw)o(a)o(ys)d(b)q
(e)i(a)f(60)30 1730 y(second)h(timer)g(that)f(is)h(used)h(to)e(up)q
(date)h(the)g(min)o(ute)g(arra)o(y)l(,)f(a)g(60)h(min)o(ute)g(timer)g
(to)f(up)q(date)h(the)g(hour)30 1786 y(arra)o(y)l(,)10
b(and)h(a)g(24)f(hour)h(timer)g(to)f(up)q(date)h(the)g(da)o(y)g(arra)o
(y)l(.)17 b(F)l(or)10 b(instance,)i(ev)o(ery)f(time)g(the)g(60)f
(second)i(timer)30 1843 y(expires,)18 b(w)o(e)e(will)j(incremen)o(t)f
(the)f(curren)o(t)f(min)o(ute)i(timer,)f(do)g(an)o(y)f(required)i
Fl(Expir)m(yPr)o(ocessing)p Fy(for)30 1899 y(the)d(min)o(ute)h(timers,)
f(and)g(re-insert)h(another)f(60)g(second)g(timer.)101
1981 y(Returning)g(to)e(the)i(example,)f(if)h(the)f(timer)h(is)f(not)g
(stopp)q(ed,)h(ev)o(en)o(tually)g(the)f(hour)g(timer)g(will)i(reac)o(h)
30 2037 y(11.)38 b(When)22 b(the)f(hour)h(timer)f(reac)o(hes)h(11,)g
(the)f(list)i(is)f(examined;)j Fl(Expir)m(yPr)o(ocessing)o
Fy(will)f(insert)30 2094 y(the)18 b(remainder)g(of)f(the)h(seconds)g
(\(15\))e(in)j(the)e(min)o(ute)h(arra)o(y)l(,)f(15)g(elemen)o(ts)h
(after)f(the)h(curren)o(t)f(min)o(ute)30 2150 y(p)q(oin)o(ter\(0\).)22
b(Of)16 b(course,)g(if)h(the)f(min)o(utes)g(remaining)i(w)o(ere)d
(zero,)h(w)o(e)g(could)h(go)e(directly)j(to)d(the)h(second)30
2206 y(arra)o(y)l(.)j(A)o(t)14 b(this)i(p)q(oin)o(t,)f(the)h(table)f
(will)i(lo)q(ok)f(lik)o(e)g(Figure)f(8.)101 2288 y(Ev)o(en)o(tually)l
(,)e(the)g(min)o(ute)g(arra)o(y)e(will)k(reac)o(h)d(the)h(15th)f
(elemen)o(t;)h(as)g(part)f(of)g Fl(Expir)m(yPr)o(ocessing)o
Fy(w)o(e)30 2344 y(will)18 b(mo)o(v)o(e)d(the)h(timer)g(in)o(to)g(the)g
(second)g(arra)o(y)f(15)g(seconds)i(after)e(the)h(curren)o(t)g(v)m
(alue.)23 b(Fifteen)17 b(seconds)30 2401 y(later,)i(the)f(timer)g(will)
i(actually)g(expire,)f(at)f(whic)o(h)h(p)q(oin)o(t)g(the)f(user-sp)q
(eci\014ed)j Fl(Expir)m(yPr)o(ocessing)o Fy(is)30 2457
y(p)q(erformed.)937 2585 y(14)p eop
%%Page: 15 15
15 14 bop 156 60 a
 25391759 15721840 6512394 26838958 31904153 42560798 startTexFig
 156 60 a
%%BeginDocument: hier2.ps

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 52 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Helvetica reencodeISO def
/Helvetica-Bold reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


%I Idraw 10 Grid 8 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.592593 -0 -0 1.03685 153.185 215.173 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 170 232 ] concat
%I
16 426 39 426 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 345 302 ] concat
%I
16 426 39 426 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 127 695 ] concat
%I
[
(current hour)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 272 751 ] concat
%I
[
(current minute)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 149.259 164 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 149.259 199 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 148.259 181 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.592593 -0 -0 1.03685 319.185 214.173 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 316.259 134 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.592593 -0 -0 1.03685 483.185 213.173 ] concat
%I
106 323 185 511 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 314.259 115 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 437 745 ] concat
%I
[
(current second)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 126 677 ] concat
%I
[
(pointer = 11)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 314.259 233 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 252 529 ] concat
%I
[
(Timer Record with remaining time = 15 seconds)
] Text
End

Begin %I MLine
%I b 65520
0 0 1 [12 4] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 227 232 ] concat
%I 3
155 379
119 379
119 301
3 MLine
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 508 296 ] concat
%I
16 426 39 426 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 439 728 ] concat
%I
[
(pointer = 0)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.62963 -0 -0 1 479.259 229 ] concat
%I
106 488 185 488 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 271 735 ] concat
%I
[
(pointer = 0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-medium-r-normal-*-16-*-*-*-*-*-*-*
Helvetica 16 SetF
%I t
[ 1 0 0 1 274 627 ] concat
%I
[
(Element 15)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 213 810 ] concat
%I
[
(HOUR)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 209 785 ] concat
%I
[
(ARRAY)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 365 808 ] concat
%I
[
(MINUTE)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 527 806 ] concat
%I
[
(SECOND)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 365 787 ] concat
%I
[
(ARRAY)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-helvetica-bold-r-normal-*-18-*-*-*-*-*-*-*
Helvetica-Bold 18 SetF
%I t
[ 1 0 0 1 526 786 ] concat
%I
[
(ARRAY)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 149 1154 a Fy(Figure)15 b(8:)20 b Ff(The)13 b(p)o(revious)e(example,)h
(after)h(the)g(hour)f(comp)q(onent)i(of)e(the)h(timer)g(expires)e
(\(using)h(scheme)h(7\).)101 1292 y Fy(What)h(are)h(the)g(p)q
(erformance)h(parameters)e(of)h(this)g(sc)o(heme?)101
1373 y Fl(St)m(ar)m(tTimer)o Fy(:)j(Dep)q(ending)12 b(on)f(the)f
(algorithm,)h(w)o(e)g(ma)o(y)e(need)j(0\()p Fk(m)p Fy(\))d(time,)j
(where)f Fk(m)f Fy(is)h(the)g(n)o(um)o(b)q(er)30 1430
y(of)j(arra)o(ys)g(in)h(the)g(hierarc)o(h)o(y)l(,)g(to)f(\014nd)i(the)f
(righ)o(t)f(table)h(to)g(insert)g(the)g(timer)f(and)h(to)g(\014nd)g
(the)g(remaining)30 1486 y(time.)20 b(A)15 b(small)g(n)o(um)o(b)q(er)g
(of)f(lev)o(els)i(should)f(b)q(e)g(su\016cien)o(t)h(to)d(co)o(v)o(er)h
(the)h(timer)g(range)f(with)h(an)f(allo)o(w)o(able)30
1543 y(amoun)o(t)g(of)h(memory;)f(th)o(us)h Fk(m)g Fy(should)i(b)q(e)f
(small)f(\(2)e Fp(\024)g Fk(m)f Fp(\024)h Fy(5)i(sa)o(y)l(.\))101
1624 y Fl(StopTimer)p Fy(:)k(Once)e(again)e(this)g(can)h(b)q(e)g(done)f
(in)h Fk(O)q Fy(\(1\))e(time)i(if)g(all)g(lists)g(are)f(doubly)h(link)o
(ed.)101 1705 y Fl(PerTickBookkeeping)p Fy(:)i(It)13
b(is)g(useful)h(to)e(compare)h(this)g(to)f(the)h(corresp)q(onding)h(v)m
(alue)g(in)f(Sc)o(heme)30 1762 y(6.)18 b(Both)11 b(ha)o(v)o(e)f(the)h
(same)g(a)o(v)o(erage)e(latency)j(of)e Fk(O)q Fy(\(1\))g(for)g
(su\016cien)o(tly)j(large)e(arra)o(y)e(sizes)j(but)f(the)g(constan)o
(ts)30 1818 y(of)k(complexit)o(y)h(are)f(di\013eren)o(t.)20
b(More)14 b(precisely:)101 1900 y(let)h Fk(T)21 b Fy(b)q(e)16
b(the)f(a)o(v)o(erage)f(timer)i(in)o(terv)m(al)g(\(from)e(start)g(to)h
(stop)f(or)h(expiry\).)101 1981 y(Let)g Fk(M)20 b Fy(b)q(e)c(the)f
(total)g(amoun)o(t)f(of)h(arra)o(y)f(elemen)o(ts)i(a)o(v)m(ailable.)101
2062 y(Let)f Fk(m)g Fy(b)q(e)h(the)f(total)g(n)o(um)o(b)q(er)g(of)g
(lev)o(els)i(in)f(the)f(hierarc)o(h)o(y)l(.)101 2144
y(The)g(total)g(w)o(ork)f(done)h(in)h(Sc)o(heme)g(6)f(for)g(suc)o(h)g
(an)g(a)o(v)o(erage)f(sized)j(timer)e(is:)178 2225 y(c\(6\)*)f(T/M)101
2306 y(where)k Fk(c)p Fy(\(6\))f(is)h(a)g(constan)o(t)f(denoting)i(the)
f(cost)g(of)f(decremen)o(ting)i(the)g(high)f(order)g(bits,)h(indexing)
30 2363 y(etc.)h(in)c(Sc)o(heme)g(6.)j(If)d(a)f(timer)g(liv)o(es)h(for)
f Fk(T)21 b Fy(units)16 b(of)f(time,)g(it)g(will)i(b)q(e)f(decremen)o
(ted)g Fk(T)5 b(=)m(M)20 b Fy(times.)101 2444 y(And)15
b(in)h(Sc)o(heme)g(7)f(it)h(is)f(b)q(ounded)i(from)d(ab)q(o)o(v)o(e)h
(b)o(y:)937 2585 y(15)p eop
%%Page: 16 16
16 15 bop 178 106 a Fy(c\(7\))14 b(*)h(m)101 182 y(where)f
Fk(c)p Fy(\(7\))f(represen)o(ts)i(the)f(cost)g(of)g(\014nding)i(the)f
(next)f(list)h(to)f(migrate)g(to,)g(and)h(the)f(cost)g(of)g(migra-)30
239 y(tion,)h(in)h(Sc)o(heme)g(7;)e Fk(m)i Fy(is)f(the)h(maxim)o(um)f
(n)o(um)o(b)q(er)g(of)g(lists)h(to)e(migrate)h(b)q(et)o(w)o(een.)101
315 y(The)g(a)o(v)o(erage)f(cost)h(p)q(er)g(unit)h(time)g(for)e(an)i(a)
o(v)o(erage)e(of)g Fk(n)i Fy(timers)f(then)h(b)q(ecomes:)178
388 y(n)f(*)g(c\(6\))g(/)g(M)123 b Fp(\000)10 b(\000)h(\000)51
b Fk(S)s(cheme)12 b Fy(6)178 444 y(n)j(*)g(c\(7\))g(*)g(m)g(/)f(T)42
b Fp(\000)10 b(\000)h(\000)51 b Fk(S)s(cheme)12 b Fy(7)101
517 y(The)17 b(c)o(hoice)g(b)q(et)o(w)o(een)g(Sc)o(heme)h(6)e(and)h(Sc)
o(heme)h(7)e(will)i(dep)q(end)h(on)e(the)f(parameters)g(ab)q(o)o(v)o
(e.)24 b(Since)30 573 y Fk(c)p Fy(\(6\))18 b(and)i Fk(c)p
Fy(\(7\))f(will)i(not)f(b)q(e)g(drastically)h(di\013eren)o(t,)g(for)e
(small)i(v)m(alues)g(of)e(T)h(and)g(large)f(v)m(alues)i(of)f(M,)30
630 y(Sc)o(heme)e(6)f(can)g(b)q(e)h(b)q(etter)f(than)g(Sc)o(heme)h(7)e
(for)h(b)q(oth)g Fl(St)m(ar)m(tTimer)g Fy(and)g Fl(PerTickBookkeeping)p
Fy(.)30 686 y(Ho)o(w)o(ev)o(er,)c(for)f(large)i(v)m(alues)h(of)e
Fk(T)19 b Fy(and)14 b(small)g(v)m(alues)h(of)e Fk(M)5
b Fy(,)14 b(Sc)o(heme)g(7)f(will)i(ha)o(v)o(e)e(a)h(b)q(etter)f(a)o(v)o
(erage)f(cost)30 743 y(\(latency\))j(for)g Fl(PerTickBookkeeping)g
Fy(but)g(a)g(greater)f(cost)h(for)g Fl(St)m(ar)m(tTimer)g
Fy(latency)l(.)101 819 y(Wic)o(k)k(Nic)o(hols)h(has)f(p)q(oin)o(ted)h
(out)f(that)f(if)i(the)f(timer)g(precision)i(is)e(allo)o(w)o(ed)h(to)e
(decrease)i(with)f(in-)30 875 y(creasing)c(lev)o(els)h(in)f(the)g
(hierarc)o(h)o(y)l(,)g(then)f(w)o(e)h(need)g(not)f(migrate)g(timers)h
(b)q(et)o(w)o(een)g(lev)o(els.)21 b(F)l(or)14 b(instance,)30
932 y(in)i(the)f(example)h(ab)q(o)o(v)o(e)e(w)o(e)h(w)o(ould)g(round)h
(o\013)e(to)g(the)h(nearest)g(hour)g(and)g(only)h(set)e(the)h(timer)h
(in)f(hours.)30 988 y(When)g(the)f(hour)g(timer)h(go)q(es)f(o\013,)f(w)
o(e)h(do)g(the)g(user)h(sp)q(eci\014ed)h Fl(Expir)m(yPr)o(ocessing)p
Fy(without)e(migrating)30 1045 y(to)h(the)g(min)o(ute)h(arra)o(y)l(.)k
(Essen)o(tially)l(,)c(w)o(e)f(no)o(w)g(ha)o(v)o(e)g(di\013eren)o(t)h
(timer)g(mo)q(des,)f(one)g(for)g(hour)h(timers,)f(one)30
1101 y(for)h(min)o(ute)h(timers,)f(etc.)24 b(This)17
b(reduces)g Fl(PerTickBookkeeping)f Fy(o)o(v)o(erhead)g(further)g(at)g
(the)h(cost)e(of)30 1158 y(a)j(loss)h(in)g(precision)h(of)e(up)h(to)e
(50\045)h(\(e.g.)29 b(a)18 b(1)g(min)o(ute)h(and)g(30)e(second)i(timer)
g(that)f(is)g(rounded)i(to)d(1)30 1214 y(min)o(ute\).)31
b(Alternately)l(,)20 b(w)o(e)e(can)h(impro)o(v)o(e)g(the)f(precision)j
(b)o(y)d(allo)o(wing)i(just)e(one)h(migration)g(b)q(et)o(w)o(een)30
1271 y(adjacen)o(t)c(lists.)101 1347 y(Sc)o(heme)f(7)g(has)g(an)g(ob)o
(vious)h(analogy)f(to)f(a)h(radix)h(sort)e([7)o(].)19
b(W)l(e)c(discuss)g(implemen)o(tation)h(strategies)30
1404 y(for)f(Sc)o(heme)g(7)g(in)h(App)q(endix)i(A.)30
1565 y Fq(7)67 b(UNIX)21 b(Implemen)n(tation)30 1686
y Fy(Adam)13 b(Costello)h(of)f(W)l(ashington)g(Univ)o(ersit)o(y)h(has)g
(implemen)o(ted)h([8)o(])e(a)g(new)h(v)o(ersion)f(of)g(the)h(BSD)f
(UNIX)30 1742 y(callout)21 b(and)f(timer)h(facilities.)37
b(Curren)o(t)20 b(BSD)g(k)o(ernels)h(tak)o(e)f(time)g(prop)q(ortional)h
(to)e(the)i(n)o(um)o(b)q(er)f(of)30 1799 y(outstanding)12
b(timers)g(to)f(set)h(or)g(cancel)h(timers.)19 b(The)12
b(new)g(implemen)o(tation,)i(whic)o(h)f(is)f(based)g(on)g(Sc)o(heme)30
1855 y(6,)g(tak)o(es)g(constan)o(t)g(time)h(to)f(start,)f(stop,)h(and)h
(main)o(tain)g(timers;)g(this)g(leads)g(to)f(a)g(highly)i(scalable)g
(design)30 1912 y(that)g(can)i(supp)q(ort)f(thousands)g(of)g
(outstanding)g(timers)h(without)f(m)o(uc)o(h)g(o)o(v)o(erhead.)101
1988 y(In)k(the)f(existing)i(BSD)e(implemen)o(tation,)i(eac)o(h)f
(callout)g(is)g(represen)o(ted)g(b)o(y)g(a)f Fc(callout)f
Fy(structure)30 2045 y(con)o(taining)c(a)g(p)q(oin)o(ter)g(to)f(the)g
(function)i(to)e(b)q(e)h(called)h(\()p Fc(c)p 1025 2045
15 2 v 17 w(func)p Fy(\),)e(a)g(p)q(oin)o(ter)h(to)f(the)h(function's)g
(argumen)o(t)30 2101 y(\()p Fc(c)p 75 2101 V 17 w(arg)p
Fy(\),)i(and)h(a)g(time)g(\()p Fc(c)p 484 2101 V 17 w(time)p
Fy(\))f(expressed)i(in)g(units)g(of)e(clo)q(c)o(k)i(tic)o(ks.)23
b(Outstanding)17 b(callouts)f(are)g(k)o(ept)30 2158 y(in)f(a)e(link)o
(ed)j(list,)e(sorted)g(b)o(y)f(their)i(expiration)f(times.)20
b(The)14 b Fc(c)p 1115 2158 V 17 w(time)f Fy(mem)o(b)q(er)h(of)g(eac)o
(h)g(callout)g(structure)30 2214 y(is)k(di\013eren)o(tial,)h(not)e
(absolute|the)i(\014rst)e(callout)i(in)f(the)g(list)g(stores)f(the)h(n)
o(um)o(b)q(er)g(of)f(tic)o(ks)h(from)e(no)o(w)30 2271
y(un)o(til)g(expiration,)f(and)f(eac)o(h)h(subsequen)o(t)g(callout)g
(in)h(the)e(list)h(stores)f(the)h(n)o(um)o(b)q(er)f(of)g(tic)o(ks)h(b)q
(et)o(w)o(een)g(its)30 2327 y(o)o(wn)g(expiration)h(and)f(the)g
(expiration)h(of)f(its)h(predecessor.)101 2404 y(In)h(BSD)f(UNIX,)h
(Callouts)g(are)f(set)g(and)h(canceled)h(using)g Fc(timeout\(\))d
Fy(and)i Fc(untimeout\(\))p Fy(,)e(resp)q(ec-)30 2460
y(tiv)o(ely)l(.)36 b Fc(timeout\(func,)22 b(arg,)h(time\))c
Fy(registers)h Fc(func\(arg\))f Fy(to)h(b)q(e)g(called)i(at)e(the)g(sp)
q(eci\014ed)i(time.)937 2585 y(16)p eop
%%Page: 17 17
17 16 bop 30 106 a Fc(untimeout\(func,)22 b(arg\))c Fy(cancels)i(the)e
(callout)i(with)f(matc)o(hing)g(function)g(and)g(argumen)o(t.)29
b(Because)30 162 y(the)20 b Fc(calltodo)e Fy(list)j(m)o(ust)e(b)q(e)h
(searc)o(hed)g(linearly)l(,)i(b)q(oth)e(op)q(erations)g(tak)o(e)f(time)
h(prop)q(ortional)g(to)f(the)30 219 y(n)o(um)o(b)q(er)d(of)e
(outstanding)i(callouts.)k(In)o(terrupts)15 b(are)g(lo)q(c)o(k)o(ed)h
(out)f(for)f(the)i(duration)f(of)g(the)g(searc)o(h.)101
300 y(The)k(Costello)g(implemen)o(tation)h(is)f(based)g(on)g(Sc)o(heme)
g(6)f(describ)q(ed)j(ab)q(o)o(v)o(e.)30 b(Unfortunately)l(,)20
b(the)30 356 y(existing)12 b Fc(timeout\(\))p Fy(/)p
Fc(untimeout\(\))c Fy(in)o(terface)j(in)h(BSD)f(do)q(es)g(not)g(allo)o
(w)g(the)g(passing)g(of)g(handles,)h(whic)o(h)30 413
y(w)o(as)j(used)h(in)g(all)h(our)e(sc)o(hemes)h(to)f(quic)o(kly)i
(cancel)f(a)g(timer.)21 b(The)15 b(Costello)h(implemen)o(tation)h(used)
f(t)o(w)o(o)30 469 y(t)o(w)o(o)j(solutions)h(to)g(this)g(problem.)35
b(F)l(or)20 b(calls)h(using)f(the)g(existing)h(in)o(terface,)h(a)d
(searc)o(h)h(for)f(a)h(callout)30 526 y(giv)o(en)15 b(a)g(function)h(p)
q(oin)o(ter)f(and)h(argumen)o(t)e(is)h(done)h(using)f(a)g(hash)g
(table.)21 b(A)15 b(second)g(solution)h(w)o(as)e(also)30
582 y(implemen)o(ted:)24 b(a)16 b(new)g(in)o(terface)h(function)g(w)o
(as)e(de\014ned)j(for)d(remo)o(ving)i(a)f(callout)h(\()p
Fc(unsetcallout\(\))p Fy(\))30 639 y(that)g(tak)o(es)h(a)f(handle)j(as)
d(its)h(only)h(argumen)o(t.)28 b(This)18 b(allo)o(ws)h(existing)g(co)q
(de)f(to)g(use)g(the)g(old)h(in)o(terface)30 695 y(and)c(new)g
(applications)i(to)d(use)i(the)f(new)g(in)o(terface.)20
b(The)15 b(p)q(erformance)h(di\013erence)g(b)q(et)o(w)o(een)f(these)g
(t)o(w)o(o)30 752 y(approac)o(hes)g(app)q(ears)g(to)g(b)q(e)h(sligh)o
(t,)f(so)g(the)g(hash)g(table)h(approac)o(h)f(app)q(ears)g(to)g(b)q(e)h
(preferable.)101 833 y(In)g(the)h(new)f(implemen)o(tation,)h(the)g
(timer)f(routines)h(are)e(guaran)o(teed)h(to)g(lo)q(c)o(k)g(out)g(in)o
(terrupts)g(only)30 889 y(for)e(a)f(small,)i(b)q(ounded)h(amoun)o(t)d
(of)h(time.)20 b(The)14 b(new)h(implemen)o(tation)g(also)g(extends)f
(the)h Fc(setitimer\(\))30 946 y Fy(in)o(terface)f(to)f(allo)o(w)h(a)f
(pro)q(cess)h(to)f(ha)o(v)o(e)g(m)o(ultiple)j(outstanding)d(timers,)h
(thereb)o(y)g(reducing)g(the)g(need)h(for)30 1002 y(users)d(to)f(main)o
(tain)h(their)h(o)o(wn)e(timer)h(pac)o(k)m(ages.)19 b(The)12
b(c)o(hanges)g(to)f(the)h(BSD)g(k)o(ernel)h(are)e(small)i(\(548)d
(lines)30 1059 y(of)18 b(co)q(de)i(added,)g(80)e(remo)o(v)o(ed\))g(and)
h(are)f(a)o(v)m(ailable)i(on)f(the)g(W)l(orld)g(Wide)h(W)l(eb.)30
b(The)19 b(details)h(of)f(this)30 1115 y(new)14 b(implemen)o(tation)h
(are)e(describ)q(ed)j(elsewhere)f([8)o(];)f(the)g(written)f(rep)q(ort)h
(con)o(tains)f(sev)o(eral)h(imp)q(ortan)o(t)30 1172 y(implemen)o
(tation)i(details)h(that)d(are)h(not)g(describ)q(ed)i(here.)30
1318 y Fh(7.1)56 b(P)n(erformance)17 b(of)i(the)f(Costello)g(Implem)o
(en)n(tation)30 1429 y Fy(The)k(p)q(erformance)h(of)f(Sc)o(heme)g(6)g
(w)o(as)g(tested)g(\(using)g(the)h(Costello)f(implemen)o(tation\).)42
b(The)23 b(tests)30 1485 y(to)q(ok)18 b(adv)m(an)o(tage)h(of)f(the)h
(new)h(in)o(terface)f(extensions)h(that)e(allo)o(w)h(a)g(single)h(pro)q
(cess)f(to)g(ha)o(v)o(e)f(m)o(ultiple)30 1542 y(outstanding)d
(callouts.)21 b(W)l(e)15 b(quote)g(the)g(follo)o(wing)h(results)g(from)
e([8].)101 1623 y(Three)f(k)o(ernels)h(w)o(ere)f(tested)g(on)g(a)g(Sun)
g(4/360.)18 b(The)c(\014rst)e(k)o(ernel)i(used)g(the)f
Fc(timeout\(\))f Fy(in)o(terface)i(to)30 1680 y(the)h(old)g(callout)g
(facilit)o(y)l(.)21 b(The)15 b(second)g(k)o(ernel)g(used)h(the)e
(existing)i(in)o(terface)f(but)f(used)i(the)e(new)h(callout)30
1736 y(facilit)o(y)f(\(and)e(a)h(hash)g(table\).)19 b(The)13
b(last)f(k)o(ernel)i(used)f(the)g(new)h Fc(setcallout\(\))d
Fy(in)o(terface)i(\(whic)o(h)g(allo)o(ws)30 1793 y(handles\))j(to)f
(the)g(new)g(callout)h(facilit)o(y)l(.)101 1874 y(In)f(eac)o(h)h(test,)
e(one)h(pro)q(cess)h(created)f(a)g(n)o(um)o(b)q(er)g(of)g(outstanding)g
(timers)h(set)f(for)f(random)h(times)h(far)30 1930 y(in)h(the)f
(future,)g(causing)g(a)g(n)o(um)o(b)q(er)g(of)f(outstanding)h
(callouts.)23 b(It)16 b(then)g(created)g(one)g(more)g(timer,)g(and)30
1987 y(rep)q(eatedly)k(set)f(it)h(for)e(a)h(random)g(time)g(farther)g
(in)h(the)f(future)g(than)g(the)g(others,)h(causing)f(rep)q(eated)30
2043 y(calls)f(to)e Fc(untimeout\(\))f Fy(and)i Fc(timeout\(\))e
Fy(\(or)h Fc(unsetcallout\(\))f Fy(and)i Fc(setcallout\(\))p
Fy(,)e(dep)q(ending)k(on)30 2100 y(whic)o(h)13 b(k)o(ernel)g(w)o(as)e
(b)q(eing)i(used\).)19 b(The)12 b(results)g(\(Figure)k(9)o(\))c(sho)o
(w)f(that)g(the)i(time)f(for)f(the)h(original)h(callout)30
2156 y(facilit)o(y)19 b(increases)g(linearly)i(with)d(the)h(n)o(um)o(b)
q(er)f(of)g(outstanding)h(callouts,)g(whereas)f(the)h(time)f(for)g(the)
30 2213 y(replacemen)o(t)d(callout)f(facilit)o(y)h(is)g(constan)o(t)e
(with)h(resp)q(ect)g(to)f(the)h(n)o(um)o(b)q(er)h(of)e(outstanding)h
(callouts,)h(for)30 2269 y(b)q(oth)d(the)g(old)g(in)o(terface)h
(\(using)f(hashing\))g(and)g(the)g(new)g(in)o(terface)g(\(using)h
(handles\).)19 b(The)13 b(new)f(in)o(terface)30 2326
y(p)q(erforms)k(v)o(ery)h(sligh)o(tly)g(b)q(etter,)g(and)g(pro)o(vides)
g(guaran)o(teed)f(constan)o(t)g(time)h(op)q(erations,)g(but)g(the)f
(old)30 2382 y(in)o(terface)f(is)h(needed)h(for)d(compatibilit)o(y)j
(with)f(the)f(rest)g(of)f(the)i(k)o(ernel.)937 2585 y(17)p
eop
%%Page: 18 18
18 17 bop 309 60 a
 20555384 14388766 3289088 -36443095 50651955 -3289088 startTexFig

 -90 rotate
 309 60 a
%%BeginDocument: comparison.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
840 351 M
6129 0 V
840 351 M
0 4618 V
LTb
840 351 M
63 0 V
6066 0 R
-63 0 V
756 351 M
(0) Rshow
840 967 M
63 0 V
6066 0 R
-63 0 V
756 967 M
(2) Rshow
840 1582 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(4) Rshow
840 2198 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(6) Rshow
840 2814 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(8) Rshow
840 3430 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(10) Rshow
840 4045 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(12) Rshow
840 4661 M
63 0 V
6066 0 R
-63 0 V
-6150 0 R
(14) Rshow
840 351 M
0 63 V
0 4555 R
0 -63 V
840 211 M
(0) Cshow
2066 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(200) Cshow
3292 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(400) Cshow
4517 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(600) Cshow
5743 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(800) Cshow
6969 351 M
0 63 V
0 4555 R
0 -63 V
0 -4695 R
(1000) Cshow
840 351 M
6129 0 V
0 4618 V
-6129 0 V
840 351 L
140 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(elapsed time \(seconds\) for 10,000 set/cancel iterations) Cshow
grestore
3904 71 M
(number of outstanding timers) Cshow
3905 5277 M
(Set/cancel time vs. number of outstanding timers) Cshow
LT0
3905 4353 M
(new callout implementation with handles) Rshow
4073 4353 D
840 757 D
901 759 D
963 758 D
1024 759 D
1085 759 D
1146 759 D
1208 759 D
1269 759 D
1330 766 D
1392 759 D
1453 765 D
1514 768 D
1575 759 D
1637 759 D
1698 760 D
1759 759 D
1821 759 D
1882 762 D
1943 759 D
2005 759 D
2066 759 D
2127 759 D
2188 760 D
2250 759 D
2311 759 D
2372 764 D
2434 759 D
2495 759 D
2556 759 D
2617 759 D
2679 760 D
2740 759 D
2801 759 D
2863 760 D
2924 759 D
2985 759 D
3046 776 D
3108 759 D
3169 759 D
3230 760 D
3292 760 D
3353 759 D
3414 761 D
3475 760 D
3537 759 D
3598 759 D
3659 759 D
3721 760 D
3782 759 D
3843 759 D
3905 762 D
3966 760 D
4027 759 D
4088 759 D
4150 759 D
4211 760 D
4272 863 D
4334 759 D
4395 759 D
4456 768 D
4517 760 D
4579 759 D
4640 759 D
4701 759 D
4763 761 D
4824 764 D
4885 760 D
4946 760 D
5008 760 D
5069 760 D
5130 776 D
5192 759 D
5253 760 D
5314 760 D
5375 759 D
5437 759 D
5498 765 D
5559 760 D
5621 759 D
5682 759 D
5743 759 D
5804 760 D
5866 760 D
5927 759 D
5988 762 D
6050 760 D
6111 759 D
6172 760 D
6234 759 D
6295 761 D
6356 760 D
6417 760 D
6479 766 D
6540 759 D
6601 760 D
6663 760 D
6724 760 D
6785 760 D
6846 759 D
6908 760 D
6969 760 D
LT1
3905 4213 M
(old callout implementation) Rshow
4073 4213 A
840 772 A
901 814 A
963 854 A
1024 903 A
1085 933 A
1146 973 A
1208 1014 A
1269 1053 A
1330 1093 A
1392 1134 A
1453 1175 A
1514 1213 A
1575 1253 A
1637 1293 A
1698 1333 A
1759 1372 A
1821 1412 A
1882 1453 A
1943 1494 A
2005 1536 A
2066 1573 A
2127 1618 A
2188 1652 A
2250 1691 A
2311 1732 A
2372 1772 A
2434 1812 A
2495 1856 A
2556 1891 A
2617 1931 A
2679 1973 A
2740 2015 A
2801 2051 A
2863 2094 A
2924 2131 A
2985 2172 A
3046 2211 A
3108 2255 A
3169 2311 A
3230 2330 A
3292 2395 A
3353 2427 A
3414 2471 A
3475 2489 A
3537 2532 A
3598 2589 A
3659 2614 A
3721 2666 A
3782 2837 A
3843 2792 A
3905 2847 A
3966 2889 A
4027 2948 A
4088 2971 A
4150 3008 A
4211 3051 A
4272 3094 A
4334 3127 A
4395 3168 A
4456 3211 A
4517 3246 A
4579 3289 A
4640 3335 A
4701 3367 A
4763 3408 A
4824 3451 A
4885 3488 A
4946 3531 A
5008 3598 A
5069 3608 A
5130 3652 A
5192 3686 A
5253 3730 A
5314 3776 A
5375 3806 A
5437 3846 A
5498 3886 A
5559 4156 A
5621 3980 A
5682 4007 A
5743 4051 A
5804 4085 A
5866 4128 A
5927 4175 A
5988 4207 A
6050 4250 A
6111 4287 A
6172 4334 A
6234 4367 A
6295 4437 A
6356 4447 A
6417 4491 A
6479 4525 A
6540 4572 A
6601 4605 A
6663 4647 A
6724 4688 A
6785 4747 A
6846 4764 A
6908 4811 A
6969 4848 A
LT2
3905 4073 M
(new callout implementation with hash table) Rshow
4073 4073 B
840 772 B
901 770 B
963 770 B
1024 770 B
1085 774 B
1146 775 B
1208 770 B
1269 769 B
1330 770 B
1392 774 B
1453 774 B
1514 770 B
1575 777 B
1637 770 B
1698 769 B
1759 770 B
1821 791 B
1882 770 B
1943 771 B
2005 770 B
2066 770 B
2127 770 B
2188 769 B
2250 771 B
2311 770 B
2372 771 B
2434 773 B
2495 770 B
2556 770 B
2617 770 B
2679 777 B
2740 769 B
2801 770 B
2863 793 B
2924 772 B
2985 777 B
3046 774 B
3108 770 B
3169 769 B
3230 770 B
3292 774 B
3353 775 B
3414 770 B
3475 771 B
3537 773 B
3598 775 B
3659 775 B
3721 775 B
3782 771 B
3843 770 B
3905 775 B
3966 774 B
4027 771 B
4088 770 B
4150 770 B
4211 773 B
4272 770 B
4334 770 B
4395 771 B
4456 771 B
4517 771 B
4579 796 B
4640 770 B
4701 771 B
4763 777 B
4824 770 B
4885 770 B
4946 771 B
5008 770 B
5069 771 B
5130 770 B
5192 770 B
5253 770 B
5314 770 B
5375 770 B
5437 792 B
5498 775 B
5559 780 B
5621 775 B
5682 770 B
5743 776 B
5804 779 B
5866 775 B
5927 770 B
5988 787 B
6050 770 B
6111 776 B
6172 776 B
6234 780 B
6295 771 B
6356 770 B
6417 775 B
6479 776 B
6540 786 B
6601 771 B
6663 773 B
6724 770 B
6785 778 B
6846 794 B
6908 771 B
6969 771 B
stroke
grestore
end
showpage
%%EndDocument

 endTexFig
 30 1069 a Fy(Figure)20 b(9:)28 b(Real-time)21 b(p)q(erformance)f
(comparison)f(of)g(BSD)h(UNIX)g(callout)g(implemen)o(tations.)34
b(Note)30 1126 y(that)18 b(the)g(new)h(callout)g(implemen)o(tations)g
(using)g(timing)g(wheels)h(tak)o(e)d(constan)o(t)h(time.)29
b(By)19 b(con)o(trast,)30 1182 y(the)i(traditional)h(BSD)f(implemen)o
(tation)h(tak)o(es)e(time)i(that)e(increases)i(linearly)h(with)e(the)g
(n)o(um)o(b)q(er)g(of)30 1239 y(outstanding)15 b(callouts.)30
1376 y Fq(8)67 b(Later)23 b(W)-6 b(ork)30 1503 y Fy(A)19
b(preliminary)h(v)o(ersion)f(of)f(the)h(w)o(ork)e(describ)q(ed)k(in)e
(this)h(pap)q(er)f(w)o(as)e(\014rst)i(describ)q(ed)h(in)g([25)o(].)29
b(Since)30 1559 y(then,)13 b(a)g(n)o(um)o(b)q(er)g(of)f(systems)g(ha)o
(v)o(e)h(built)h(timer)f(implemen)o(tations)h(based)f(on)f(this)h
(approac)o(h,)g(and)g(there)30 1616 y(ha)o(v)o(e)i(b)q(een)h(a)f(few)g
(extensions)h(of)f(the)g(basic)h(approac)o(h.)30 1761
y Fe(Systems)h(that)j(use)e(Timing)i(Wheels:)45 b Fy(Some)16
b(w)o(ell)h(kno)o(wn)f(net)o(w)o(ork)g(proto)q(col)g(implemen)o
(tations)30 1817 y(ha)o(v)o(e)10 b(used)h(the)f(timing)h(wheel)g(ideas)
g(describ)q(ed)h(in)f(this)g(pap)q(er.)18 b(These)11
b(include)i(the)d(fast)f(TCP)h(implemen-)30 1873 y(tation)i(in)h([6)o
(])f(and)g(the)g(X-k)o(ernel)h(timer)g(facilit)o(y)g([1)o(].)19
b(The)12 b(e\016cien)o(t)h(user)f(lev)o(el)i(proto)q(col)e(implemen)o
(tation)30 1930 y(in)k([23)o(])e(men)o(tions)h(the)g(p)q(ossible)i(use)
e(of)g(timing)g(wheels)h(but)f(did)h(not)e(do)h(an)g(implemen)o
(tation.)21 b(W)l(e)15 b(also)30 1986 y(kno)o(w)k(of)h(commercial)g
(net)o(w)o(orking)f(pro)q(ducts)h(that)f(use)h(timing)h(wheels)g(as)e
(part)g(of)g(their)i(op)q(erating)30 2043 y(system.)e(These)d(include)h
(DEC's)d(Gigaswitc)o(h)h([20)o(])f(and)h(Siemens')h(CHANNELS)g(run)f
(time)g(system)f([2].)30 2188 y Fe(Timing)19 b(Wheel)f(Extensions:)45
b Fy(Bro)o(wn[5)o(])15 b(extended)i(the)e(idea)i(of)e(hashed)h(timing)g
(wheels)h(to)e(what)30 2244 y(he)21 b(calls)h(calendar)f(queues;)i(the)
e(ma)s(jor)e(di\013erence)j(is)f(that)f(calendar)h(queue)g(implemen)o
(tations)h(also)30 2301 y(p)q(erio)q(dically)k(resize)d(the)g(wheel)g
(in)h(order)e(to)g(reduce)h(the)g(o)o(v)o(erhead)1297
2284 y Fd(1)1339 2301 y Fy(of)f(stepping)h(through)f(empt)o(y)30
2357 y(buc)o(k)o(ets.)42 b(F)l(or)22 b(timer)g(applications,)k(the)d
(clo)q(c)o(k)g(time)g(m)o(ust)f(b)q(e)h(incremen)o(ted)h(on)e(ev)o(ery)
h(clo)q(c)o(k)g(tic)o(k)p 30 2397 744 2 v 82 2424 a Fb(1)99
2439 y Fn(The)13 b(impro)o(v)o(emen)o(t)i(is)e(not)g(w)o(orst-case)g
(and)h(is)g(only)g(demonstrated)g(empiricall)q(y)i(for)d(certain)h(b)q
(enc)o(hmarks.)937 2585 y Fy(18)p eop
%%Page: 19 19
19 18 bop 30 106 a Fy(an)o(yw)o(a)o(y;)25 b(th)o(us)d(adding)i(a)e(few)
h(instructions)h(to)e(step)g(through)h(empt)o(y)f(buc)o(k)o(ets)h(is)g
(not)f(signi\014can)o(t.)30 162 y(Da)o(vison)d([10)o(])h(describ)q(es)h
(a)f(timer)f(implemen)o(tation)j(for)d(the)g(IBM)h(VM/XA)g(SP1)f(op)q
(erating)h(system)30 219 y(based)14 b(on)g(calendar)h(queues.)20
b(empirical)c(impro)o(v)o(emen)o(t)d(in)i(p)q(er)f(tic)o(k)g(b)q(o)q
(okk)o(eeping)h(\(due)f(to)g(resizing)h(the)30 275 y(wheel)h(p)q(erio)q
(dically\))i(do)q(es)e(not)f(app)q(ear)g(to)g(w)o(arran)o(t)e(the)i
(extra)g(complexit)o(y)h(of)f(resizing.)30 443 y Fq(9)67
b(Timing)23 b(Wheels)g(and)g(Priorit)n(y)i(Queues:)k(an)22
b(algorithmic)j(view)30 570 y Fy(F)l(rom)19 b(an)h(algorithmic)h(p)q
(oin)o(t)g(of)f(view,)h(a)f(timing)h(wheel)g(is)g(just)f(a)g(priorit)o
(y)g(queue)h([7)o(].)35 b(It)20 b(app)q(ears)30 626 y(to)f(b)q(e)i
(just)e(an)h(application)i(of)d(buc)o(k)o(et)h(sorting)g(tec)o(hniques)
h(to)e(priorit)o(y)h(queues.)35 b(Ho)o(w)o(ev)o(er,)20
b(buc)o(k)o(et)30 682 y(sorting)15 b(cannot)g(b)q(e)h(used)g(e\016cien)
o(tly)h(for)d Fm(al)r(l)h Fy(priorit)o(y)h(queue)g(implemen)o(tations.)
21 b(Timing)c(wheels)f(w)o(ork)30 739 y(e\016cien)o(tly)f(only)f(for)f
(priorit)o(y)h(queue)g(applications)i(that)c(satisfy)i(the)g(follo)o
(wing)g(b)q(ounded)h(monotonicit)o(y)30 795 y(prop)q(ert)o(y:)23
b(an)o(y)17 b(elemen)o(ts)g(inserted)h(in)o(to)f(the)g(priorit)o(y)g
(queue)h(are)e(within)j Fm(Max)e Fy(of)f(the)h(last)g(minim)o(um)30
852 y(extracted.)101 933 y(If)d(this)g(condition)h(is)f(satis\014ed)h
(and)f(the)f(inserted)i(v)m(alues)g(are)f(all)g(in)o(tegers,)g(then)g
(w)o(e)g(can)g(implemen)o(t)30 990 y(the)21 b(priorit)o(y)g(queue)h
(using)g(a)f(circular)h(arra)o(y)e(of)h(size)h Fm(Max)p
Fy(.)37 b(New)21 b(elemen)o(ts)h(are)f(inserted)h(in)o(to)f(the)30
1046 y(circular)c(arra)o(y)e(based)h(on)g(the)g(di\013erence)h(b)q(et)o
(w)o(een)g(their)f(v)m(alue)h(and)g(the)f(curren)o(t)g(minim)o(um)h
(elemen)o(t.)30 1103 y(A)f(p)q(oin)o(ter)g(is)g(k)o(ept)f(to)g(the)h
(last)g(minim)o(um)g(extracted.)21 b(T)l(o)15 b(\014nd)i(the)f(new)f
(minim)o(um)i(at)e(an)o(y)g(p)q(oin)o(t,)h(w)o(e)30 1159
y(simply)h(adv)m(ance)f(the)g(p)q(oin)o(ter)g(till)i(an)d(arra)o(y)g
(lo)q(cation)h(is)h(found)f(that)f(con)o(tains)g(a)h(v)m(alid)h(elemen)
o(t.)22 b(This)30 1215 y(is)16 b(exactly)f(what)g(is)h(done)f(in)h(Sc)o
(heme)g(4,)f(where)g Fm(Max)g Fy(corresp)q(onds)h(to)e
Fm(MaxInterval)o Fy(.)101 1297 y(It)i(is)h(easy)f(to)g(see)g(what)g(go)
q(es)g(wrong)g(if)g(the)h(monotonicit)o(y)f(condition)i(is)f(not)e
(satis\014ed.)24 b(If)17 b(w)o(e)f(can)30 1353 y(insert)i(an)g(elemen)o
(t)g(that)f(is)i(smaller)f(than)g(the)g(last)f(minim)o(um)i(extracted,)
f(then)g(w)o(e)g(cannot)f(adv)m(ance)30 1410 y(the)g(p)q(oin)o(ter)g
(to)f(\014nd)h(the)g(new)g(minim)o(um)h(v)m(alue;)g(the)f(p)q(oin)o
(ter)g(ma)o(y)f(ha)o(v)o(e)g(to)g(bac)o(ktrac)o(k,)g(leading)i(to)e(a)
30 1466 y(p)q(oten)o(tial)g(searc)o(h)f(of)g(the)g(en)o(tire)h(arra)o
(y)l(.)101 1548 y(Ev)o(en)e(with)h(the)g(monotonicit)o(y)g(condition,)g
(the)g(wheel)h(approac)o(h)e(to)g(priorit)o(y)h(queues)g(still)h
(requires)30 1604 y(stepping)21 b(through)e(empt)o(y)h(buc)o(k)o(ets.)
34 b(Ho)o(w)o(ev)o(er,)20 b(the)f(nice)j(thing)e(ab)q(out)g(timer)g
(applications)h(is)g(that)30 1660 y(man)o(y)16 b(systems)g(m)o(ust)g
(main)o(tain)i(the)e(time)h(of)g(da)o(y)f(an)o(yw)o(a)o(y)l(,)f(and)i
(th)o(us)g(the)f(cost)h(of)f(stepping)h(through)30 1717
y(empt)o(y)e(buc)o(k)o(ets)g(is)g(amortized)g(o)o(v)o(er)g(the)g
(existing)h(cost)f(of)f(incremen)o(ting)j(the)e(time-of-da)o(y)g(clo)q
(c)o(k.)20 b(This)30 1773 y(example)j(illustrates)h(ho)o(w)e(an)g
(algorithm)g(that)g(ma)o(y)g(ha)o(v)o(e)g(a)g(p)q(o)q(or)g(algorithmic)
h(complexit)o(y)g(when)30 1830 y(considered)16 b(in)g(isolation,)f(can)
g(b)q(e)h(v)o(ery)e(e\016cien)o(t)i(when)f(considered)i(as)d(part)g(of)
h(a)f(system,)h(where)g(parts)30 1886 y(of)g(the)g(algorithms)g(cost)g
(can)g(b)q(e)h(c)o(harged)f(to)g(other)f(system)h(comp)q(onen)o(ts.)101
1968 y(The)20 b(b)q(ounded)h(monotonicit)o(y)f(condition)h(is)g
(satis\014ed)f(b)o(y)g(other)f(algorithmic)i(applications.)36
b(F)l(or)30 2024 y(example)18 b(for)g(graphs)f(with)h(in)o(teger)g
(edge)g(w)o(eigh)o(ts,)f(the)h(Dijkstra)f(algorithm)h(for)f(shortest)f
(paths)i(and)30 2081 y(Prim's)13 b(algorithm)h(for)f(minim)o(um)h
(spanning)h(trees)e([7])g(b)q(oth)g(satisfy)h(the)f(monotonicit)o(y)h
(condition)h(with)30 2137 y Fm(Max)20 b Fy(equal)g(to)f(the)h(maxim)o
(um)f(edge)h(w)o(eigh)o(t.)33 b(While)21 b(it)f(has)g(b)q(een)h(observ)
o(ed)e(b)q(efore)h([7])f(that)g(these)30 2193 y(t)o(w)o(o)e(algorithms)
h(can)g(b)q(ene\014t)h(from)e(buc)o(k)o(et)h(sorting)g(using)g(a)g
(linear)h(arra)o(y)l(,)e(the)h(required)h(size)g(of)f(the)30
2250 y(linear)d(arra)o(y)e(w)o(as)g(supp)q(osed)i(to)e(b)q(e)i(the)f
(equal)g(to)g(the)g(cost)f(of)h(the)g(largest)f(shortest)g(cost)h(path)
g(b)q(et)o(w)o(een)30 2306 y(an)o(y)19 b(t)o(w)o(o)f(no)q(des.)32
b(Our)20 b(observ)m(ation)g(sho)o(ws)e(that)h(a)g(circular)h(arra)o(y)e
(of)h(size)h(equal)g(to)f(the)g(maxim)o(um)30 2363 y(edge)h(w)o(eigh)o
(t)f(su\016ces.)32 b(While)21 b(this)f(is)g(a)f(mild)h(observ)m(ation,)
h(it)e(do)q(es)h(reduce)g(the)g(memory)e(needs)i(of)30
2419 y(net)o(w)o(orking)d(implemen)o(tations)i(that)e(use)h(Dijkstra's)
f(algorithm)h(and)g(in)o(teger)g(edge)g(w)o(eigh)o(ts)f([13)o(].)27
b(T)l(o)937 2585 y(19)p eop
%%Page: 20 20
20 19 bop 30 106 a Fy(the)14 b(b)q(est)h(of)f(our)g(kno)o(wledge,)h
(the)f(b)q(ounded)i(monotonicit)o(y)e(condition)i(has)e(not)g(b)q(een)h
(describ)q(ed)i(b)q(efore)30 162 y(in)f(the)f(literature.)101
243 y(The)h(e\016ciency)h(of)e(the)h(hashed)g(wheel)h(solution)g(\(Sc)o
(heme)f(6\))f(for)g(larger)h(timer)g(v)m(alues)h(is)f(based)g(on)30
300 y(b)q(ounding)21 b(the)f(n)o(um)o(b)q(er)g(of)f(timers)h(and)f
(doing)i(an)e(amortized)h(analysis.)34 b(This)20 b(do)q(es)g(not)f(app)
q(ear)h(to)30 356 y(ha)o(v)o(e)c(an)o(y)g(direct)i(direct)f(corresp)q
(ondence)h(with)e(buc)o(k)o(et)h(sorting.)24 b(The)16
b(hierarc)o(hical)j(sc)o(heme)e(\(Sc)o(heme)30 413 y(7\))f(uses)h
(essen)o(tially)g(logarithmic)h(time)f(to)e(insert)i(an)g(elemen)o(t;)g
(th)o(us)f(it)h(is)g(comparable)g(in)g(complexit)o(y)30
469 y(to)f(standard)g(priorit)o(y)h(queue)h(implemen)o(tations)g(lik)o
(e)f(heaps)g([7].)24 b(Ho)o(w)o(ev)o(er,)15 b(the)i(constan)o(ts)f(app)
q(ear)h(to)30 526 y(b)q(e)f(b)q(etter)f(for)g(Sc)o(heme)h(7.)30
694 y Fq(10)66 b(Summary)24 b(and)f(Conclusions)30 820
y Fy(In)15 b(this)g(pap)q(er,)g(w)o(e)f(ha)o(v)o(e)h(examined)g(the)g
(relationship)h(b)q(et)o(w)o(een)f(sorting)f(algorithms,)h(time)f
(\015o)o(w)h(mec)o(h-)30 877 y(anisms)21 b(in)h(discrete)g(ev)o(en)o(t)
f(sim)o(ulations,)i(and)e(timer)g(algorithms.)37 b(W)l(e)22
b(ha)o(v)o(e)e(extended)i(the)f(timing)30 933 y(wheel)15
b(mec)o(hanism)g(used)g(in)g(logic)g(sim)o(ulation)g(to)f(yield)i(3)d
(timer)i(algorithms)f(\(Sc)o(hemes)g(5-7\))g(that)f(ha)o(v)o(e)30
990 y(constan)o(t)18 b(complexit)o(y)h(for)f(setting,)i(stopping,)f
(and)g(main)o(taining)h(a)e(timer.)30 b(The)19 b(extensions)h(include)
30 1046 y(rotating)c(the)g(timing)i(wheel)f(ev)o(ery)g(clo)q(c)o(k)g
(tic)o(k,)g(ha)o(ving)g(separate)f(o)o(v)o(er\015o)o(w)f(lists)i(p)q
(er)g(buc)o(k)o(et,)g(and)g(us-)30 1103 y(ing)h(a)f(hierarc)o(hical)i
(set)e(of)g(timing)h(wheels)g(\(Sc)o(heme)g(7\):)24 b(the)17
b(extensions)h(are)f(necessary)h(b)q(ecause)g(the)30
1159 y(requiremen)o(ts)j(of)g(a)g(sc)o(heduler)h(in)g(a)f(logic)g(sim)o
(ulation)h(and)g(those)e(of)h(a)g(general)g(timer)g(mo)q(dule)h(are)30
1215 y(di\013eren)o(t.)101 1297 y(In)11 b(c)o(ho)q(osing)h(b)q(et)o(w)o
(een)g(sc)o(hemes,)f(w)o(e)g(b)q(eliev)o(e)j(that)c(Sc)o(heme)i(1)f(is)
h(appropriate)f(in)h(some)f(cases)g(b)q(ecause)30 1353
y(of)k(its)h(simplicit)o(y)l(,)i(limited)f(use)f(of)g(memory)l(,)f(and)
g(sp)q(eed)i(in)g(starting)e(and)h(stopping)g(timers.)21
b(Sc)o(heme)16 b(2)30 1410 y(is)j(useful)g(in)g(a)e(host)h(that)f(has)h
(hardw)o(are)f(to)h(main)o(tain)g(the)g(clo)q(c)o(k)h(and)f(a)g(single)
i(timer.)28 b(Although)19 b(it)30 1466 y(tak)o(es)14
b Fk(O)q Fy(\()p Fk(n)p Fy(\))h(time)h(to)e(start)g(a)h(timer,)g(the)g
(host)g(is)h(not)f(in)o(terrupted)g(ev)o(ery)h(clo)q(c)o(k)f(tic)o(k.)
101 1548 y(In)c(a)f(host)g(without)h(hardw)o(are)f(supp)q(ort)h(for)f
(timers,)h(w)o(e)f(b)q(eliev)o(e)j(Sc)o(hemes)e(2)g(and)f(3)h(are)f
(inappropriate)30 1604 y(b)q(ecause)21 b(of)f(the)g(cost)g(of)g
Fl(St)m(ar)m(tTimer)g Fy(when)g(there)h(are)f(a)f(large)i(n)o(um)o(b)q
(er)f(of)g(outstanding)g(timers.)30 1660 y(Clearly)l(,)c(this)g(is)g
(not)f(uncommon)g(in)i(hosts)e(that)f(ha)o(v)o(e)h(a)h(signi\014can)o
(t)g(amoun)o(t)f(of)g(real-time)h(activit)o(y)f(or)30
1717 y(ha)o(v)o(e)g(sev)o(eral)g(op)q(en)h(comm)o(unication)g(links.)
101 1798 y(Sc)o(heme)j(4)g(is)h(useful)g(when)f(most)g(timers)g(are)f
(within)j(a)e(small)g(range)g(of)g(the)g(curren)o(t)g(time.)32
b(F)l(or)30 1855 y(example,)15 b(it)f(could)h(b)q(e)g(used)f(b)o(y)g(a)
g(net)o(w)o(orking)g(mo)q(dule)h(that)e(is)i(main)o(taining)g(its)f(o)o
(wn)g(timers.)19 b(Sc)o(heme)30 1911 y(5)c(dep)q(ends)i(to)q(o)d(m)o
(uc)o(h)h(on)g(the)h(hash)f(distribution)i(\(for)d(a)h(fast)f
Fl(St)m(ar)m(tTimer)p Fy(\))h(to)f(b)q(e)i(generally)g(useful.)30
1968 y(Ho)o(w)o(ev)o(er,)e(a)h(v)m(arian)o(t)g(of)g(this)g(sc)o(heme)h
(has)f(b)q(een)h(implemen)o(ted)h(in)f(the)f(X-k)o(ernel)i([1)o(].)101
2049 y(F)l(or)h(a)g(general)h(timer)g(mo)q(dule,)h(similar)g(to)e(the)g
(op)q(erating)h(system)f(facilities)j(found)e(in)g(UNIX)g(or)30
2105 y(VMS,)c(that)g(is)g(exp)q(ected)i(to)e(w)o(ork)f(w)o(ell)j(in)f
(a)f(v)m(ariet)o(y)g(of)g(en)o(vironmen)o(ts,)h(w)o(e)f(recommend)g(Sc)
o(heme)h(6)f(or)30 2162 y(7.)23 b(The)16 b(UNIX)h(results)g(describ)q
(ed)h(in)f(this)g(pap)q(er)f(are)g(encouraging,)h(and)f(sho)o(w)g(that)
f(it)i(is)g(p)q(ossible)h(to)30 2218 y(supp)q(ort)d(thousands)g(of)g
(outstanding)g(timers)h(at)e(lo)o(w)h(o)o(v)o(erhead)g(using)h(Sc)o
(heme)g(6.)101 2300 y(If)c(the)h(amoun)o(t)f(of)g(memory)f(required)j
(for)e(an)g(e\016cien)o(t)h(implemen)o(tation)h(of)e(Sc)o(heme)h(6)g
(is)f(a)h(problem,)30 2356 y(Sc)o(heme)i(7)f(can)g(b)q(e)h(pressed)f
(in)o(to)h(service.)20 b(Sc)o(heme)15 b(7,)f(ho)o(w)o(ev)o(er,)f(will)i
(need)g(a)f(few)g(more)g(instructions)h(in)30 2413 y
Fl(St)m(ar)m(tTimer)g Fy(to)g(\014nd)g(the)h(correct)f(table)g(to)g
(insert)g(the)h(timer.)937 2585 y(20)p eop
%%Page: 21 21
21 20 bop 101 106 a Fy(Both)18 b(Sc)o(hemes)h(6)f(and)h(7)f(can)g(b)q
(e)i(completely)f(or)f(partially)i(\(see)e(App)q(endix)j(A\))d
(implemen)o(ted)i(in)30 162 y(hardw)o(are)9 b(using)i(some)f(auxiliary)
i(memory)d(to)h(store)f(the)h(data)g(structures.)18 b(If)10
b(a)g(host)g(had)g(suc)o(h)h(hardw)o(are)30 219 y(supp)q(ort,)i(the)h
(host)f(soft)o(w)o(are)e(w)o(ould)j(need)g Fk(O)q Fy(\(1\))f(time)g(to)
g(start)f(and)i(stop)e(a)h(timer)h(and)f(w)o(ould)h(not)f(need)30
275 y(to)i(b)q(e)g(in)o(terrupted)h(ev)o(ery)f(clo)q(c)o(k)h(tic)o(k.)
101 356 y(Finally)21 b(w)o(e)f(note)g(that)f(designers)i(and)g
(implemen)o(tors)g(ha)o(v)o(e)e(assumed)i(that)e(proto)q(cols)h(that)g
(use)30 413 y(a)g(large)f(n)o(um)o(b)q(er)i(of)e(timers)h(are)f(exp)q
(ensiv)o(e)j(and)e(p)q(erform)f(p)q(o)q(orly)l(.)35 b(This)20
b(is)h(an)e(artifact)h(of)f(existing)30 469 y(implemen)o(tations)e(and)
g(op)q(erating)f(system)g(facilities.)24 b(Giv)o(en)17
b(that)e(a)h(large)g(n)o(um)o(b)q(er)g(of)g(timers)g(can)g(b)q(e)30
526 y(implemen)o(ted)h(e\016cien)o(tly)g(,)d(w)o(e)h(hop)q(e)h(this)g
(will)h(no)e(longer)h(b)q(e)g(an)f(issue)h(in)g(the)f(design)i(of)d
(proto)q(cols)i(for)30 582 y(distributed)h(systems.)30
750 y Fq(11)66 b(Ac)n(kno)n(wledgmen)n(ts)30 877 y Fy(Barry)19
b(Spinney)i(suggested)e(extending)h(Sc)o(heme)g(4)f(to)g(Sc)o(heme)h
(5.)31 b(Hugh)20 b(Wilkinson)h(indep)q(enden)o(tly)30
933 y(though)o(t)13 b(of)h(exploiting)i(hierarc)o(h)o(y)e(in)h(main)o
(taining)g(timer)f(lists.)21 b(John)14 b(F)l(orecast)f(help)q(ed)j(us)f
(implemen)o(t)30 990 y(an)20 b(early)h(v)o(ersion)g(of)f(Sc)o(heme)h
(6.)35 b(Andrew)21 b(Blac)o(k)g(commen)o(ted)f(on)h(an)f(earlier)i(v)o
(ersion)e(and)h(help)q(ed)30 1046 y(impro)o(v)o(e)13
b(the)h(presen)o(tation.)19 b(Andrew)14 b(Blac)o(k,)g(Barry)f(Spinney)l
(,)i(Hugh)f(Wilkinson,)h(Stev)o(e)e(Glaser,)h(Wic)o(k)30
1103 y(Nic)o(hols,)19 b(P)o(aul)f(Koning,)i(Alan)e(Kirb)o(y)l(,)h(Mark)
e(Kempf,)i(and)f(Charlie)h(Kaufman)f(\(all)g(at)g(DEC\))f(w)o(ere)g(a)
30 1159 y(pleasure)h(to)f(discuss)h(these)f(sc)o(hemes)h(with.)26
b(W)l(e)17 b(are)g(grateful)g(to)g(Eric)g(Co)q(op)q(er,)h(Mats)e
(Bjorkman,)h(C.)30 1215 y(Thek)m(ath,)d(V.)f(Seidel,)j(B.)d(Souza,)g
(and)h(A.)f(Costello)h(for)f(giving)h(us)g(information)g(ab)q(out)f
(their)h(implemen-)30 1272 y(tations.)30 1440 y Fq(12)66
b(References)30 1585 y(References)53 1705 y Fy([1])21
b(Matt)14 b(Bjorkman,)h(P)o(ersonal)g(comm)o(unication.)53
1799 y([2])21 b(S.)15 b(Bo)q(ec)o(king,)h(V.)f(Seidel.)i(TIP's)e(Proto)
q(col)g(Run-Time)i(System.)d Fa(EF)o(OCN)h('94)p Fy(,)f(June)i(1994)53
1892 y([3])21 b(S.)d(Bo)q(ec)o(king,)h(V.)f(Seidel,)i(P)l(.)e(Vindeb)o
(y)l(.)h(CHANNELS)f(-)g(A)g(Run-Time)h(System)f(for)f(Multimedia)123
1949 y(Proto)q(cols,)e Fa(ICCCN)g('95)p Fy(,)f(Sept.)h(1995)53
2043 y([4])21 b(L.)14 b(Brakmo,)f(S.)g(O)h(Malley)l(,)h(L.)f(P)o
(eterson.)e(TCP)h(V)l(egas:)19 b(New)14 b(T)l(ec)o(hniques)h(for)e
(Congestion)h(Detec-)123 2099 y(tion)i(and)f(Av)o(oidance.)h
Fa(Pro)q(c)f(A)o(CM)f(SIGCOMM)h(94)p Fy(,)g(London,)g(England.)53
2193 y([5])21 b(R.)14 b(Bro)o(wn.)f(Calendar)h(queues:)19
b(a)14 b(fast)e(O\(1\))h(priorit)o(y)h(queue)h(implemen)o(tation)f(for)
f(the)h(sim)o(ulation)123 2249 y(ev)o(en)o(t)h(set)g(problem.)h
Fa(Comm)o(unications)f(of)g(the)g(A)o(CM)p Fy(,)f(31\(10\):1220{12)o
(27,)e(Octob)q(er)j(1988.)53 2343 y([6])21 b(D.D.)f(Clark,)j(V.)e
(Jacobson,)i(J.)e(Romk)o(ey)l(,)h(and)g(H.)f(Salw)o(en.)h(An)f
(analysis)h(of)f(TCP)g(pro)q(cessing)123 2400 y(o)o(v)o(erhead.)15
b Fa(IEEE)g(Comm)o(unications)p Fy(,)g(27\(6\):23{29,)d(June)k(1989.)
937 2585 y(21)p eop
%%Page: 22 22
22 21 bop 53 106 a Fy([7])21 b(T.)11 b(Cormen,)h(C.)f(Leiserson,)i(and)
e(R.)h(Riv)o(est.)g Fa(In)o(tro)q(duction)g(to)f(Algorithms)p
Fy(.)g(MIT)h(Press/McGra)o(w-)123 162 y(Hill,)17 b(1990.)53
256 y([8])k(A.)14 b(Costello)h(and)f(G.)g(V)l(arghese.)g(Redesigning)i
(the)f(BSD)f(Callout)h(and)f(Timeout)g(F)l(acilities.)i
Fa(T)l(ec)o(h-)123 312 y(nical)g(Rep)q(ort)f(95-23,)f(W)l(ashington)g
(Univ)o(ersit)o(y)l(,)h(Departmen)o(t)f(of)g(Computer)g(Science)p
Fy(,)j(Sept.)d(1995)53 406 y([9])21 b(O-J)14 b(Dahl,)f(B.)g
(Myhrhaug,and)f(K.)h(Nygaard,)f Fa(SIMULA)i(67)e(Common)g(Base)h
(Language)p Fy(,)f(Pub.)h(S22)123 463 y(Norw)o(egian)i(Computing)h(Cen)
o(ter,)e(F)l(orksningv)o(eien,)i(1B,)f(Oslo)h(3.)30 556
y([10])21 b(G.)14 b(Da)o(vison.)f(Calendar)h(p's)g(and)g(q's.)f
Fa(Comm)o(unications)h(of)f(the)h(A)o(CM)p Fy(,)f(32\(10\):1241{)o(124)
o(2,)e(Octo-)123 613 y(b)q(er)16 b(1989.)30 707 y([11])21
b(S.)12 b(Flo)o(yd,)g(V.)f(Jacobson,)h(S.)g(McCanne,)g(C.)f(Liu,)i(L.)f
(Zhang.)f(A)h(Reliable)i(Multicast)e(F)l(ramew)o(ork)f(for)123
763 y(Ligh)o(t-w)o(eigh)o(t)j(Sessions)g(and)g(Application)h(Lev)o(el)f
(F)l(raming.)f Fa(Pro)q(c)g(A)o(CM)g(SIGCOMM)g(95)p Fy(,)g(Boston,)123
820 y(MA.)30 913 y([12])21 b Fa(General)g(Purp)q(ose)f(Sim)o(ulation)i
(System)e(360)f(-)h(User's)g(Man)o(ual)p Fy(,)g(Pub.)g(H20-0326,)g(IBM)
g(Corp.,)123 970 y(White)c(Plains,)g(N.Y.,)e(1968.)30
1064 y([13])21 b(In)o(ternational)14 b(Organization)g(for)f
(Standardization)h(\(ISO\).)f(Draft)f(In)o(ternational)i(Standard)f
(8473,)123 1120 y(Proto)q(col)i(for)g(pro)o(viding)h(the)f
(connectionless-mo)q(del)j(net)o(w)o(ork)c(service,)i(Marc)o(h)f(1988.)
30 1214 y([14])21 b(V.)f(Jacobson.)f(Congestion)g(Av)o(oidance)h(and)g
(Con)o(trol.)e Fa(Pro)q(c)h(A)o(CM)g(SIGCOMM)g(88)p Fy(,)h(Stanford,)
123 1270 y(CA.)30 1364 y([15])h(M.A.)c(Kearney)l(,)h(DECSIM:)f(A)h
(Multi-Lev)o(el)h(Sim)o(ulation)g(System)f(for)f(Digital)h(Design,)g
Fa(1984)e(In-)123 1421 y(ternational)g(Conference)g(on)f(Computer)g
(Design)p Fy(.)30 1515 y([16])21 b(S.)15 b(Mccanne,)h(A)f(distributed)i
(whiteb)q(oard)e(for)g(net)o(w)o(ork)f(conferencing,)i(Ma)o(y)e(1992,)g
(UC)h(Berk)o(eley)123 1571 y(CS)h(268)e(Computer)h(Net)o(w)o(orks)f(T)l
(erm)h(pro)s(ject.)30 1665 y([17])21 b(C.M.)15 b(Reev)o(es,)i
(Complexit)o(y)f(Analysis)h(of)f(Ev)o(en)o(t)f(Set)h(Algorithms,)h
Fa(Computer)e(Journal)p Fy(,)i(V)l(ol.)f(27,)123 1721
y(no.)f(1,)g(1984)30 1815 y([18])21 b(B.)c(Myhrhaug,)g(Sequencing)j
(Set)d(E\016ciency)l(,)i Fa(Pub.)e(A9,)g(Norw)o(egian)g(Computing)g
(Cen)o(ter)p Fy(,)g(F)l(ork-)123 1872 y(sningv)o(eien,)g(1B,)e(Oslo)h
(3.)30 1965 y([19])21 b(A.A.)g(Pritsk)o(er,)h(P)l(.J.)f(Kiviat,)i
Fa(Sim)o(ulation)g(with)e(GASP-I)q(I)p Fy(,)h(Pren)o(tice-Hall,)i
(Englew)o(o)q(o)q(d)e(Cli\013s,)123 2022 y(N.J.,)15 b(1969..)30
2116 y([20])21 b(R.)h(Souza)f(et)h(al,)g(GIGAswitc)o(h)g(System:)32
b(A)21 b(High-p)q(erformance)i(P)o(ac)o(k)o(et-switc)o(hing)e
(Platform,)123 2172 y Fa(Digital)16 b(T)l(ec)o(hnical)h(Journal)p
Fy(,)f(V)l(ol.)f(6,)g(No.)f(1,)h(Win)o(ter)g(1994.)30
2266 y([21])21 b(S.)h(Szygenda,)i(C.W.)d(Hemming,)j(and)e(J.M.)g
(Hemphill,)k(Time)c(Flo)o(w)g(Mec)o(hanisms)g(for)g(use)g(in)123
2322 y(Digital)16 b(Logic)g(Sim)o(ulations,)g Fa(Pro)q(c.)f(1971)f(Win)
o(ter)h(Sim)o(ulation)i(Conference)p Fy(,)e(New)g(Y)l(ork.)30
2416 y([22])21 b(A.S.)15 b(T)l(anen)o(baum,)g Fa(Computer)g(Net)o(w)o
(orks)p Fy(,)f(Pren)o(tice-Hall,)i(Englew)o(o)q(o)q(d)g(Cli\013s,)f
(N.J.,)g(1981.)937 2585 y(22)p eop
%%Page: 23 23
23 22 bop 30 106 a Fy([23])21 b(C.)c(Thekk)m(ath,)g(T.)f(Nguy)o(en,)h
(E.)f(Mo)o(y)l(,)g(and)h(E.)g(Lazo)o(wsk)m(a.)f(Implemen)o(ting)i(net)o
(w)o(ork)e(proto)q(cols)h(at)123 162 y(user)f(lev)o(el.)g
Fa(IEEE)f(T)l(ransactions)g(on)g(Net)o(w)o(orking)p Fy(,)g
(1\(5\):554{56)o(4,)d(Octob)q(er)k(1993.)30 254 y([24])21
b(E.)13 b(Ulric)o(h,)h Fa(Time-Sequenced)h(Logical)f(Sim)o(ulation)g
(Based)f(on)g(Circuit)h(Dela)o(y)f(and)g(Selectiv)o(e)h(T)l(rac-)123
311 y(ing)i(of)f(Activ)o(e)h(Net)o(w)o(ork)e(P)o(aths)p
Fy(,)g(1965)g(A)o(CM)g(National)i(Conference.)30 403
y([25])21 b(G.)d(V)l(arghese)f(and)i(A.)e(Lauc)o(k.)h(Hashed)g(and)g
(hierarc)o(hical)i(timing)e(wheels:)26 b(Data)17 b(structures)h(for)123
460 y(the)d(e\016cien)o(t)g(implemen)o(tation)g(of)f(a)g(timer)g
(facilit)o(y)l(.)h Fa(Pro)q(ceedings)g(of)f(the)g(11th)g(A)o(CM)f(Symp)
q(osium)123 516 y(on)j(Op)q(erating)g(Systems)f(Principles)p
Fy(,)i(pages)e(171{180,)e(No)o(v)o(em)o(b)q(er)h(1987.)30
608 y([26])21 b(J.G.)14 b(V)l(auc)o(her)g(and)g(P)l(.)f(Duv)m(al,)i(A)f
(Comparison)f(Of)h(Sim)o(ulation)h(Ev)o(en)o(t)f(List)g(Algorithms,)g
Fa(CA)o(CM)p Fy(,)123 665 y(18,)h(1975.)30 830 y Fq(A)67
b(Hardw)n(are)22 b(Assist)30 955 y Fy(Since)c(the)f(cost)f(of)g
(handling)i(clo)q(c)o(k)g(in)o(terrupts)f(b)q(ecomes)g(more)f
(signi\014can)o(t)i(for)e(\014ne)h(gran)o(ularit)o(y)f(\(e.g.)30
1012 y(microseconds\))h(timers,)f(it)h(ma)o(y)f(b)q(e)h(necessary)f(to)
g(emplo)o(y)h(sp)q(ecial)h(purp)q(ose)f(hardw)o(are)f(assist.)23
b(In)17 b(the)30 1068 y(extreme,)h(w)o(e)f(can)h(use)g(a)f(timer)h(c)o
(hip)h(whic)o(h)f(main)o(tains)g(all)h(the)f(data)f(structures)g(\(sa)o
(y)g(in)h(Sc)o(heme)h(6\))30 1125 y(and)c(in)o(terrupts)h(host)e(soft)o
(w)o(are)g(only)i(when)f(a)g(timer)h(expires.)101 1204
y(Another)e(p)q(ossibilit)o(y)k(is)d(a)g(c)o(hip)h(\(actually)f(just)g
(a)f(coun)o(ter\))h(that)f(steps)h(through)g(the)g(timer)g(arra)o(ys,)
30 1261 y(and)f(in)o(terrupts)g(the)f(host)h(only)g(if)g(there)g(is)g
(w)o(ork)e(to)h(b)q(e)i(done.)k(When)14 b(the)g(host)f(inserts)h(a)g
(timer)f(in)o(to)h(an)30 1317 y(empt)o(y)i(queue)h(p)q(oin)o(ted)g(to)f
(b)o(y)g(arra)o(y)f(elemen)o(t)i(X)f(it)h(tells)g(the)f(c)o(hip)h(ab)q
(out)g(this)f(new)h(queue.)23 b(The)17 b(c)o(hip)30 1374
y(then)f(marks)f(X)g(as)g(\\busy".)21 b(As)15 b(b)q(efore,)h(the)f(c)o
(hip)i(scans)e(through)g(the)h(timer)f(arra)o(ys)g(ev)o(ery)g(clo)q(c)o
(k)h(tic)o(k.)30 1430 y(During)g(its)h(scan,)f(when)g(the)g(c)o(hip)i
(encoun)o(ters)e(a)g(\\busy")f(lo)q(cation,)i(it)f(in)o(terrupts)h(the)
f(host)g(and)g(giv)o(es)30 1487 y(the)e(host)g(the)g(address)g(of)g
(the)g(queue)h(that)f(needs)h(to)e(b)q(e)i(w)o(ork)o(ed)f(on.)19
b(Similarly)d(when)f(the)f(host)g(deletes)30 1543 y(a)h(timer)g(en)o
(try)g(from)f(some)h(queue)h(and)f(lea)o(v)o(es)h(b)q(ehind)h(an)e
(empt)o(y)g(queue)h(it)f(needs)h(to)e(inform)i(the)f(c)o(hip)30
1600 y(that)f(the)i(corresp)q(onding)g(arra)o(y)e(lo)q(cation)i(is)g
(no)f(longer)g(\\busy".)101 1679 y(Note)i(that)g(the)h(sync)o
(hronization)g(o)o(v)o(erhead)f(is)i(minimal)g(b)q(ecause)f(the)g(host)
f(can)h(k)o(eep)g(the)g(actual)30 1736 y(timer)d(queues)h(in)h(its)e
(memory)g(whic)o(h)h(the)f(c)o(hip)i(need)f(not)f(access,)g(and)g(the)h
(c)o(hip)g(can)f(k)o(eep)h(the)f(timing)30 1792 y(arra)o(ys)h(in)h(its)
g(memory)l(,)g(whic)o(h)h(the)f(host)f(need)i(not)e(access.)25
b(The)18 b(only)f(comm)o(unication)h(b)q(et)o(w)o(een)f(the)30
1849 y(host)e(and)g(c)o(hip)h(is)g(through)f(in)o(terrupts.)101
1929 y(In)g(Sc)o(heme)h(6,)f(the)g(host)g(is)h(in)o(terrupted)f(an)h(a)
o(v)o(erage)e(of)g Fk(T)5 b(=)m(M)20 b Fy(times)c(p)q(er)f(timer)h(in)o
(terv)m(al,)g(where)f Fk(T)30 1985 y Fy(is)j(the)f(a)o(v)o(erage)f
(timer)h(in)o(terv)m(al)i(and)e Fk(M)22 b Fy(is)c(the)f(n)o(um)o(b)q
(er)h(of)f(arra)o(y)f(elemen)o(ts.)26 b(In)18 b(Sc)o(heme)g(7,)f(the)g
(host)30 2041 y(is)i(in)o(terrupted)f(at)g(most)f Fk(m)h
Fy(times,)h(where)f Fk(m)g Fy(is)h(the)f(n)o(um)o(b)q(er)h(of)f(lev)o
(els)h(in)g(the)f(hierarc)o(h)o(y)l(.)29 b(If)19 b Fk(T)24
b Fy(and)30 2098 y Fk(m)16 b Fy(are)g(small)h(and)f Fk(M)21
b Fy(is)c(large,)f(the)g(in)o(terrupt)g(o)o(v)o(erhead)g(for)f(suc)o(h)
i(an)f(implemen)o(tation)h(can)f(b)q(e)h(made)30 2154
y(negligible.)101 2234 y(Finally)l(,)f(w)o(e)e(note)h(that)f(con)o(v)o
(en)o(tional)h(hardw)o(are)f(timer)h(c)o(hips)h(use)f(Sc)o(heme)h(1)e
(to)g(main)o(tain)i(a)e(small)30 2291 y(n)o(um)o(b)q(er)g(of)f(timers.)
20 b(Ho)o(w)o(ev)o(er,)12 b(if)i(Sc)o(hemes)h(6)e(and)h(7)f(are)h
(implemen)o(ted)h(as)e(a)h(single)h(c)o(hip)f(that)f(op)q(erates)30
2347 y(on)18 b(a)g(separate)g(memory)g(\(that)f(con)o(tains)h(the)h
(data)e(structures\))h(then)h(there)f(is)h(no)f(a)g(priori)h(limit)h
(on)30 2404 y(the)g(n)o(um)o(b)q(er)g(of)f(timers)h(that)f(can)h(b)q(e)
g(handled)h(b)o(y)f(the)g(c)o(hip.)34 b(Clearly)21 b(the)f(arra)o(y)e
(sizes)j(need)f(to)f(b)q(e)30 2460 y(parameters)14 b(that)h(m)o(ust)f
(b)q(e)i(supplied)i(to)c(the)i(c)o(hip)g(on)f(initialization.)937
2585 y(23)p eop
%%Page: 24 24
24 23 bop 30 106 a Fq(B)67 b(Symmetric)24 b(Multipro)r(cessing)30
232 y Fy(If)15 b(the)h(host)f(consists)g(of)g(a)g(set)g(of)g(pro)q
(cessors,)f(eac)o(h)h(of)g(whic)o(h)h(can)g(pro)q(cess)f(calls)i(to)d
(the)h(timer)h(mo)q(dule)30 288 y(\(symmetric)e(m)o(ultipro)q
(cessing\),)i(Stev)o(e)e(Glaser)h(has)f(p)q(oin)o(ted)h(out)f(that)g
(algorithms)g(that)g(tie)h(up)g(a)f(com-)30 345 y(mon)h(data)f
(structure)h(for)f(a)h(large)f(p)q(erio)q(d)j(of)d(time)h(will)i
(reduce)f(e\016ciency)l(.)21 b(F)l(or)15 b(instance)g(in)h(Sc)o(heme)g
(2,)30 401 y(when)h(Pro)q(cessor)g(A)g(inserts)g(a)f(timer)h(in)o(to)g
(the)g(ordered)g(list)h(other)e(pro)q(cessors)h(cannot)g(pro)q(cess)g
(timer)30 458 y(mo)q(dule)k(routines)e(un)o(til)i(Pro)q(cessor)e(A)g
(\014nishes)i(and)f(releases)g(its)f(semaphore.)33 b(Sc)o(heme)20
b(5,)g(6,)g(and)f(7)30 514 y(seem)c(suited)h(for)f(implemen)o(tation)i
(in)f(symmetric)f(m)o(ultipro)q(cessors.)937 2585 y(24)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
